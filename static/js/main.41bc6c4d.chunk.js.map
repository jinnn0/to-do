{"version":3,"sources":["assets/icons/adjust.svg","contexts/GlobalState.js","components/shared/Nav.jsx","components/home/TimeDisplay.jsx","components/AddNewTodoForm/NewTodo.jsx","components/AddNewTodoForm/DateInput.jsx","components/shared/AddNewTodoForm.jsx","animations/todoListAnimation.js","components/shared/TodoItem.jsx","animations/homeAnimation.js","components/home/HomeMain.jsx","pages/Home.jsx","utils/useUnmount.js","components/shared/TodoList.jsx","components/shared/SelectView.jsx","components/shared/SelectSort.jsx","components/shared/HeaderShared.jsx","pages/Daily.jsx","pages/Weekly.jsx","components/monthly/HeaderMonthly.jsx","components/monthly/InnerList.jsx","components/monthly/OuterList.jsx","components/monthly/MonthlyList.jsx","components/monthly/CalendarMain.jsx","components/monthly/CalendarDate.jsx","utils/calendarHelper.js","components/monthly/Calendar.jsx","pages/Monthly.jsx","App.jsx","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","fill","_ref3","_ref4","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","GlobalContext","createContext","GlobalContextProvider","todoTypes","today","year","Date","getFullYear","month","getMonth","date","getDate","day","toLocaleString","weekday","hour","getHours","minute","getMinutes","sampleTodoList","map","task","index","randomDate","randomType","Math","floor","random","id","shortid","generate","type","completed","dateInfo","initialTodoList","JSON","parse","localStorage","getItem","useState","todoList","setTodoList","useEffect","setItem","stringify","initialViewValue","selectedView","setSelectedView","initialSortValue","sortValue","setSortValue","addNewTodoButtonClicked","setAddNewTodoButtonClicked","sortedTodoList","reverse","ordering","sortOrder","sort","a","b","filter","todo","value","addTodo","newTodo","removeTodo","toggleComplete","updatedTodo","updateSelectedView","newValue","updateSortValue","newSort","handleClickAddNewTodoButton","handleClickOutsideForm","Provider","children","Nav","useContext","Links","path","icon","className","link","exact","to","activeClassName","TimeDisplay","currentTime","setCurrentTime","updateCurrentTime","current","getDay","NewTodo","handleInputChange","colorBoxClicked","defaultColorType","handleDefaultSelect","handleSelectType","onChange","placeholder","name","onClick","colorType","SelectColorTypeList","data-color-type","DateInput","startDate","handleDateSelect","handleDateChange","selected","onSelect","showTimeInput","showWeekNumbers","shouldCloseOnSelect","timeInputLabel","AddNewTodoForm","setColorBoxClicked","setDefaultColorType","setStartDate","setTodo","action","onSubmit","e","preventDefault","trim","stopPropagation","dataset","todoListAnimation","gsap","timeline","duration","ease","y","opacity","stagger","amount","TodoItem","homeAnimation","delay","HomeMain","todoIndex","setTodoIndex","homeMainDivRef","useRef","homeMainDivTouching","setHomeMainDivTouching","todoToday","focusOnThisTodo","getBoundingClientRect","top","window","innerHeight","position","left","transform","prev","n","m","InitialMessage","Home","useUnmount","TodoList","size","todoForToday","withRouter","history","location","currentView","pathname","slice","push","SelectSort","HeaderShared","Daily","TodosForEachDay","todos","message","showNoTodoMessage","Weekly","thisWeek","nextDayConstructor","eachDay","getOrdinalNum","HeaderMonthly","currentMonthName","selectedYear","moveToPrevMonth","moveToNextMonth","goBackToToday","InnerList","OuterList","MonthlyList","selectedMonth","todoThisMonth","_","groupBy","todosEachDay","values","reduce","acc","CalendarMain","showCalendar","CalendarDate","showDateInfo","firstDay","daysInMonth","weeks","daysPrevMonth","daysNextMonth","row","j","renderDate","console","log","Calendar","Monthly","setSelectedYear","setSelectedMonth","App","innerWidth","windowSize","setWindowSize","handleResize","vh","document","documentElement","style","setProperty","addEventListener","removeEventListener","component","Boolean","hostname","match","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.41bc6c4d.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4.04813 4.26933V1.11511H2.64188V4.26933H0V9.76683H2.64188V22.8848H4.04813V9.76683H6.68953V4.26933H4.04813ZM5.28328 8.36058H1.40625V5.67558H5.28328V8.36058Z\",\n  fill: \"black\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.7032 10.8248V1.11511H11.2969V10.8248H8.65503V16.3228H11.2969V22.8848H12.7032V16.3228H15.345V10.8248H12.7032ZM13.9388 14.9165H10.0613V12.231H13.9388V14.9165Z\",\n  fill: \"black\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21.3581 4.26933V1.11511H19.9518V4.26933H17.3104V9.76683H19.9518V22.8848H21.3581V9.76683H24V4.26933H21.3581ZM22.5937 8.36058H18.7167V5.67558H22.5937V8.36058Z\",\n  fill: \"black\"\n});\n\nvar SvgAdjust = function SvgAdjust(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 17,\n    height: 17,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgAdjust, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/adjust.ed4b8ae6.svg\";\nexport { ForwardRef as ReactComponent };","import React, { useState, useEffect, createContext } from 'react';\nimport shortid from 'shortid';\n\nexport const GlobalContext = createContext();\n\nexport const GlobalContextProvider = (props) => {\n  // sample todoList\n  // prettier-ignore\n  const sampleTasks = [\"Daily web development\", \"Get groceries for dinner\", \"Home exercise at 6pm\", \"Call Daniel for meeting\", \"House cleaning\", \"Tennis practice\", \"Do lundary\", \"Email Noah for update\", \"Finish monthly growth report\", \"Send in cacenllation letter\", \"Figure out vacation destination\", \"Fill in scholarship application\" ]\n  const todoTypes = ['important', 'work', 'study', 'other'];\n\n  // date state\n  const today = {\n    year: new Date().getFullYear(),\n    month: new Date().getMonth(),\n    date: new Date().getDate(),\n    day: new Date().toLocaleString('default', { weekday: 'long' }),\n    hour: new Date().getHours(),\n    minute: new Date().getMinutes()\n  };\n\n  const sampleTodoList = sampleTasks.map((task, index) => {\n    let randomDate;\n    let randomType;\n    if (index < 2) {\n      randomDate = today.date;\n      randomType = todoTypes[0];\n    } else {\n      randomDate = today.date + Math.floor(Math.random() * 7);\n      randomType = todoTypes[Math.floor(Math.random() * 4)];\n    }\n\n    return {\n      id: shortid.generate(),\n      task: task,\n      type: randomType,\n      completed: Math.random() >= 0.5,\n      dateInfo: {\n        year: today.year,\n        month: today.month,\n        date: randomDate,\n        day: new Date(today.year, today.month, randomDate).toLocaleString('default', { weekday: 'long' })\n      }\n    };\n  });\n\n  // todoList state\n  const initialTodoList = JSON.parse(localStorage.getItem('to-do-list')) || sampleTodoList;\n  const [todoList, setTodoList] = useState(initialTodoList);\n\n  useEffect(() => {\n    localStorage.setItem('to-do-list', JSON.stringify(todoList));\n  }, [todoList]);\n\n  const addTodo = (newTodo) => {\n    setTodoList([...todoList, newTodo]);\n  };\n\n  const removeTodo = (id) => {\n    setTodoList(todoList.filter((todo) => id !== todo.id));\n  };\n\n  const toggleComplete = (id) => {\n    const updatedTodo = todoList.map((todo) => {\n      if (id === todo.id) {\n        return { ...todo, completed: !todo.completed };\n      }\n      return todo;\n    });\n\n    setTodoList(updatedTodo);\n  };\n\n  // view state (daily / weekly / monthly)\n  const initialViewValue = JSON.parse(localStorage.getItem('selected-view')) || 'daily';\n  const [selectedView, setSelectedView] = useState(initialViewValue);\n\n  useEffect(() => {\n    localStorage.setItem('selected-view', JSON.stringify(selectedView));\n  }, [selectedView]);\n\n  const updateSelectedView = (newValue) => {\n    setSelectedView(newValue);\n  };\n\n  // sort state (recent / tag / oldest / completed / active)\n  const initialSortValue = JSON.parse(localStorage.getItem('sort-value')) || 'recent';\n  const [sortValue, setSortValue] = useState(initialSortValue);\n\n  useEffect(() => {\n    localStorage.setItem('sort-value', JSON.stringify(sortValue));\n  }, [sortValue]);\n\n  const updateSortValue = (newSort) => {\n    setSortValue(newSort);\n  };\n\n  // add new todo button state\n  const [addNewTodoButtonClicked, setAddNewTodoButtonClicked] = useState(false);\n\n  const handleClickAddNewTodoButton = () => {\n    setAddNewTodoButtonClicked(!addNewTodoButtonClicked);\n  };\n\n  const handleClickOutsideForm = () => {\n    if (addNewTodoButtonClicked) {\n      setAddNewTodoButtonClicked(!addNewTodoButtonClicked);\n    }\n  };\n\n  // sorted list\n  let sortedTodoList = todoList;\n  if (sortValue === 'newest') {\n    sortedTodoList = todoList.reverse();\n  } else if (sortValue === 'tag') {\n    const ordering = {};\n    const sortOrder = ['important', 'work', 'study', 'other'];\n    for (let i = 0; i < sortOrder.length; i++) {\n      ordering[sortOrder[i]] = i;\n    }\n    sortedTodoList = todoList.sort((a, b) => {\n      return ordering[a.type] - ordering[b.type];\n    });\n  } else if (sortValue === 'completed') {\n    sortedTodoList = todoList.filter((todo) => todo.completed);\n  } else if (sortValue === 'active') {\n    sortedTodoList = todoList.filter((todo) => !todo.completed);\n  }\n\n  // global states\n  const value = {\n    today,\n    todoList,\n    addTodo,\n    removeTodo,\n    toggleComplete,\n    selectedView,\n    updateSelectedView,\n    sortValue,\n    updateSortValue,\n    addNewTodoButtonClicked,\n    setAddNewTodoButtonClicked,\n    handleClickAddNewTodoButton,\n    handleClickOutsideForm,\n    sortedTodoList\n  };\n\n  return <GlobalContext.Provider value={value}>{props.children}</GlobalContext.Provider>;\n};\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { ReactComponent as Adjust } from '../../assets/icons/adjust.svg';\nimport * as AiIcons from 'react-icons/ai';\nimport { FiInbox } from 'react-icons/fi';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction Nav() {\n  const { selectedView } = useContext(GlobalContext);\n\n  const Links = [\n    {\n      path: `/${selectedView}`,\n      icon: <AiIcons.AiOutlineUnorderedList />\n    },\n    {\n      path: '/inbox',\n      icon: <FiInbox />\n    },\n    { path: '/', icon: <AiIcons.AiOutlineStar /> }\n  ];\n\n  return (\n    <nav className=\"nav container flex\">\n      <ul className=\"left flex\">\n        {Links.map((link) => (\n          <li key={link.path}>\n            <NavLink exact to={link.path} className=\"icon flex center\" activeClassName=\" selected\">\n              {link.icon}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n\n      <ul className=\"right flex\">\n        <li>\n          <NavLink exact to=\"/adjust\" className=\"icon flex center\" activeClassName=\" selected\">\n            <Adjust />\n          </NavLink>\n        </li>\n        <li>\n          <NavLink exact to=\"/search\" className=\"icon flex center\" activeClassName=\" selected\">\n            <AiIcons.AiOutlineSearch />\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React, { useState, useEffect } from 'react';\n\nfunction TimeDisplay() {\n  let [currentTime, setCurrentTime] = useState({\n    hour: null,\n    minute: null,\n    day: null,\n    month: null,\n    date: null\n  });\n\n  useEffect(() => {\n    updateCurrentTime();\n  }, [currentTime.minute]);\n\n  const updateCurrentTime = () => {\n    let months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'];\n    let days = ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'];\n\n    let d = new Date();\n    let current = {\n      hour: d.getHours(),\n      minute: d.getMinutes(),\n      day: days[d.getDay()],\n      month: months[d.getMonth()],\n      date: d.getDate()\n    };\n\n    setCurrentTime(current);\n  };\n\n  return (\n    <div className=\"time-display\">\n      <div className=\"time\">\n        {currentTime.hour}:{currentTime.minute < 10 ? '0' + currentTime.minute : currentTime.minute}\n      </div>\n      <div className=\"day\">\n        {currentTime.day}, {currentTime.month}\n        <span className=\"date\">{currentTime.date}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeDisplay;\n","import React from 'react';\nimport { RiArrowDropDownLine } from 'react-icons/ri';\nimport { CgCheck } from 'react-icons/cg';\n\nfunction NewTodo({\n  handleInputChange,\n  todo,\n  colorBoxClicked,\n  defaultColorType,\n  handleDefaultSelect,\n  handleSelectType\n}) {\n  const colorTypeList = ['important', 'work', 'study', 'other'];\n\n  return (\n    <div className=\"new-task-box flex v-center\">\n      <input\n        type=\"text\"\n        onChange={handleInputChange}\n        value={todo.task}\n        placeholder=\"New task\"\n        className=\"text-input\"\n        name=\"task\"\n      />\n\n      <div className=\"select-type-container\">\n        <ul className=\"select-type-default-ul\" onClick={handleDefaultSelect}>\n          <li>\n            <span className={`color-box ${defaultColorType}`}></span>\n            <span className=\"arrow-down\">\n              <RiArrowDropDownLine />\n            </span>\n          </li>\n        </ul>\n\n        <ul\n          className={`select-type-dropdown-ul ${colorBoxClicked ? 'show-dropdown' : ''}`}\n          onClick={handleSelectType}\n        >\n          {colorTypeList.map((colorType) => (\n            <SelectColorTypeList key={colorType} defaultColorType={defaultColorType} colorType={colorType} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default NewTodo;\n\nfunction SelectColorTypeList({ defaultColorType, colorType }) {\n  return (\n    <li data-color-type={colorType}>\n      <span className=\"checked-icon-container\">{defaultColorType === colorType ? <CgCheck /> : null}</span>\n      <span className={'color-box ' + colorType}></span>\n      <span>{colorType}</span>\n    </li>\n  );\n}\n","import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nfunction DateInput({ startDate, handleDateSelect, handleDateChange }) {\n  return (\n    <div>\n      <DatePicker\n        selected={startDate}\n        onChange={handleDateChange}\n        onSelect={handleDateSelect}\n        showTimeInput\n        showWeekNumbers\n        shouldCloseOnSelect={false}\n        timeInputLabel=\"Time:\"\n      />\n    </div>\n  );\n}\n\nexport default DateInput;\n","import React, { useState, useContext } from 'react';\nimport shortid from 'shortid';\nimport NewTodo from '../AddNewTodoForm/NewTodo';\nimport DateInput from '../AddNewTodoForm/DateInput';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction AddNewTodoForm() {\n  const { today, addNewTodoButtonClicked, setAddNewTodoButtonClicked, addTodo } = useContext(GlobalContext);\n  const [colorBoxClicked, setColorBoxClicked] = useState(false);\n  const [defaultColorType, setDefaultColorType] = useState('important');\n  const [startDate, setStartDate] = useState(new Date());\n  const [todo, setTodo] = useState({\n    task: '',\n    type: defaultColorType,\n    completed: false,\n    dateInfo: {\n      year: today.year,\n      month: today.month,\n      date: today.date,\n      day: today.day,\n      hour: today.hour,\n      minute: today.minute\n    }\n  });\n\n  const handleInputChange = (e) => {\n    const value = e.target.value;\n\n    setTodo({\n      ...todo,\n      [e.target.name]: value\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newTodo = {\n      id: shortid.generate(),\n      task: todo.task,\n      ...todo\n    };\n\n    if (todo.task.trim()) {\n      addTodo(newTodo);\n    }\n    setTodo({ ...todo, task: '' });\n    setAddNewTodoButtonClicked(!addNewTodoButtonClicked);\n  };\n\n  const handleDefaultSelect = () => {\n    setColorBoxClicked(!colorBoxClicked);\n  };\n\n  const handleSelectType = (e) => {\n    setDefaultColorType(e.target.dataset.colorType);\n    setColorBoxClicked(!colorBoxClicked);\n  };\n\n  const handleDateChange = (e) => {\n    setTodo({\n      ...todo,\n      dateInfo: {\n        year: e.getFullYear(),\n        month: e.getMonth(),\n        date: e.getDate(),\n        day: e.toLocaleString('default', { weekday: 'long' }),\n        hour: e.getHours(),\n        minute: e.getMinutes()\n      }\n    });\n  };\n\n  const handleDateSelect = (e) => {\n    setStartDate(e);\n  };\n\n  return (\n    <form\n      action=\"\"\n      onSubmit={handleSubmit}\n      onClick={(e) => {\n        e.stopPropagation();\n      }}\n      className={`add-new-todo-form ${addNewTodoButtonClicked ? ' show-add-new-todo-form' : ''}`}\n    >\n      <NewTodo\n        handleInputChange={handleInputChange}\n        todo={todo}\n        colorBoxClicked={colorBoxClicked}\n        defaultColorType={defaultColorType}\n        handleDefaultSelect={handleDefaultSelect}\n        handleSelectType={handleSelectType}\n      />\n      <DateInput\n        startDate={startDate}\n        handleDateChange={handleDateChange}\n        handleDateSelect={handleDateSelect}\n      />\n\n      <button className=\"submit\" type=\"submit\">\n        Add new task\n      </button>\n    </form>\n  );\n}\n\nexport default AddNewTodoForm;\n","import gsap from 'gsap';\n\nconst todoListAnimation = () => {\n  const tl = gsap.timeline();\n\n  tl.to(\n    '.todo-item',\n    {\n      duration: 1,\n      ease: 'power4.out',\n      y: 0,\n      opacity: 1,\n      stagger: { amount: 0.4 }\n    },\n    0.1\n  );\n};\n\nexport default todoListAnimation;\n","import React, { useContext, useEffect } from 'react';\nimport todoListAnimation from '../../animations/todoListAnimation';\nimport { CgTrash } from 'react-icons/cg';\nimport { AiOutlineMore } from 'react-icons/ai';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction TodoItem({ todo }) {\n  const { removeTodo, toggleComplete } = useContext(GlobalContext);\n\n  useEffect(() => {\n    todoListAnimation();\n  }, [todo]);\n\n  return (\n    <li className=\"todo-item flex v-center\">\n      <div>\n        <span className={`type-bar ${todo.type}`}></span>\n      </div>\n      <div>\n        <span\n          className={`checkbox ${todo.completed ? 'completed ' + todo.type : ''}`}\n          onClick={() => toggleComplete(todo.id)}\n        ></span>\n      </div>\n      <div>\n        <span className=\"task\">{todo.task}</span>\n      </div>\n      <div className=\"more\">\n        <CgTrash onClick={() => removeTodo(todo.id)} />\n        <AiOutlineMore />\n      </div>\n    </li>\n  );\n}\n\nexport default TodoItem;\n","import gsap from 'gsap';\n\nconst homeAnimation = () => {\n  const tl = gsap.timeline();\n\n  tl.to('.initial-message', {\n    duration: 0.8,\n    ease: 'power4.out',\n    y: 0,\n    opacity: 1\n  }).to('.point-up-icon', {\n    duration: 0.5,\n    opacity: 1,\n    delay: -0.5\n  });\n};\n\nexport default homeAnimation;\n","import React, { useContext, useState, useEffect, useRef } from 'react';\nimport AddNewTodoForm from '../shared/AddNewTodoForm';\nimport TodoItem from '../shared/TodoItem';\nimport * as MdIcons from 'react-icons/md';\nimport { FaRegHandPointDown } from 'react-icons/fa';\nimport homeAnimation from '../../animations/homeAnimation';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction HomeMain() {\n  const {\n    today,\n    todoList,\n    addNewTodoButtonClicked,\n    handleClickAddNewTodoButton,\n    handleClickOutsideForm\n  } = useContext(GlobalContext);\n\n  const [todoIndex, setTodoIndex] = useState(0);\n  const homeMainDivRef = useRef();\n  const [homeMainDivTouching, setHomeMainDivTouching] = useState(false);\n\n  const todoToday = todoList.filter(\n    (todo) =>\n      todo.dateInfo.year === today.year &&\n      todo.dateInfo.month === today.month &&\n      todo.dateInfo.date === today.date\n  );\n  const focusOnThisTodo = todoToday[todoIndex];\n\n  const getPrevTodo = () => {\n    setTodoIndex((prev) => mod(prev - 1, todoToday.length));\n  };\n\n  const getNextTodo = () => {\n    setTodoIndex((prev) => (prev + 1) % todoToday.length);\n  };\n\n  function mod(n, m) {\n    return ((n % m) + m) % m;\n  }\n\n  const absoluteCenter = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  };\n\n  useEffect(() => {\n    if (homeMainDivRef.current) {\n      const currentTop = homeMainDivRef.current.getBoundingClientRect().top;\n      // nav-height-bg 72px + time-display 50px = 130\n      // set the div to display block so that\n      // it stays below time display when shrinking small\n      if (currentTop < 130) {\n        setHomeMainDivTouching(true);\n        if (window.innerHeight > 544) {\n          setHomeMainDivTouching(false);\n        }\n      }\n    }\n  });\n\n  return (\n    <>\n      <div className=\"home-main-container\">\n        <div\n          className={'home-main flex center ' + (addNewTodoButtonClicked ? 'z-index' : '')}\n          className={`home-main flex center ${addNewTodoButtonClicked ? 'z-index' : ''}`}\n          ref={homeMainDivRef}\n          style={homeMainDivTouching ? null : absoluteCenter}\n        >\n          {focusOnThisTodo ? (\n            <>\n              <h1 className=\"title\">Focus on this now</h1>\n              <TodoItem key={focusOnThisTodo.id} todo={focusOnThisTodo} />\n              <div className=\"arrows flex\">\n                <MdIcons.MdKeyboardArrowLeft className=\"arrow arrow-back\" onClick={getPrevTodo} />\n                <MdIcons.MdKeyboardArrowRight className=\"arrow arrow-next\" onClick={getNextTodo} />\n              </div>\n            </>\n          ) : (\n            <>\n              <InitialMessage handleClickAddNewTodoButton={handleClickAddNewTodoButton} />\n              {addNewTodoButtonClicked ? (\n                <>\n                  <AddNewTodoForm />\n                </>\n              ) : null}\n            </>\n          )}\n        </div>\n      </div>\n\n      {addNewTodoButtonClicked && !focusOnThisTodo ? (\n        <div className=\"overlay\" onClick={handleClickOutsideForm}></div>\n      ) : null}\n    </>\n  );\n}\n\nexport default HomeMain;\n\nfunction InitialMessage({ handleClickAddNewTodoButton }) {\n  useEffect(() => {\n    homeAnimation();\n  }, []);\n\n  return (\n    <div className=\"initial-message\">\n      <FaRegHandPointDown className=\"point-up-icon\" />\n      <h1 className=\"title message\" onClick={handleClickAddNewTodoButton}>\n        What's your todo today?\n      </h1>\n    </div>\n  );\n}\n","import React from 'react';\nimport TimeDisplay from '../components/home/TimeDisplay';\nimport HomeMain from '../components/home/HomeMain';\n\nfunction Home() {\n  return (\n    <div className=\"home container\">\n      <TimeDisplay />\n      <HomeMain />\n    </div>\n  );\n}\n\nexport default Home;\n","import { useEffect, useContext } from 'react';\nimport { GlobalContext } from '../contexts/GlobalState';\n\nfunction useUnmount() {\n  const { handleClickOutsideForm } = useContext(GlobalContext);\n\n  useEffect(() => {\n    return () => {\n      handleClickOutsideForm();\n    };\n  });\n}\n\nexport default useUnmount;\n","import React from 'react';\nimport TodoItem from './TodoItem.jsx';\n\nfunction TodoList({ size, todoForToday }) {\n  return (\n    <ul className=\"todo-list\">\n      {todoForToday.map((todo) => (\n        <TodoItem key={todo.id} todo={todo} size={size} />\n      ))}\n    </ul>\n  );\n}\n\nexport default TodoList;\n","import React, { useContext, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction SelectView({ history, location }) {\n  const { selectedView, updateSelectedView } = useContext(GlobalContext);\n\n  // history.push : change the page and url\n  const handleSelectedViewChange = (e) => {\n    history.push(`/${e.target.value}`);\n    updateSelectedView(e.target.value);\n  };\n\n  // when mounted, get the current url and\n  // always update the selectedView\n  // it updates the state when user clicks on go back button in the browser\n  useEffect(() => {\n    const currentView = location.pathname.slice(1, location.pathname.length);\n    updateSelectedView(currentView);\n  });\n\n  return (\n    <select className=\"select-view\" value={selectedView} onChange={handleSelectedViewChange}>\n      <option value=\"daily\">Day</option>\n      <option value=\"weekly\">Week</option>\n      <option value=\"monthly\">Month</option>\n    </select>\n  );\n}\n\nexport default withRouter(SelectView);\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction SelectSort() {\n  const { sortValue, updateSortValue } = useContext(GlobalContext);\n  const handleSelectedSortChange = (e) => {\n    updateSortValue(e.target.value);\n  };\n\n  return (\n    <div className=\"select-sort-container\">\n      <span className=\"sort-by-text\">sort by</span>\n      <select className=\"select-sort\" value={sortValue} onChange={handleSelectedSortChange}>\n        <option value=\"oldest\">oldest</option>\n        <option value=\"newest\">newest</option>\n        <option value=\"tag\">tag</option>\n        <option value=\"completed\">completed</option>\n        <option value=\"active\">active</option>\n      </select>\n    </div>\n  );\n}\n\nexport default SelectSort;\n","import React, { useContext } from 'react';\nimport SelectView from './SelectView';\nimport SelectSort from './SelectSort';\nimport AddNewTodoForm from './AddNewTodoForm';\nimport { FiPlus } from 'react-icons/fi';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction HeaderShared({ title }) {\n  const { handleClickAddNewTodoButton } = useContext(GlobalContext);\n\n  return (\n    <div className=\"header\">\n      <div className=\"row-1\">\n        <div className=\"row-1__1\">\n          <h1 className=\"title\">{title}</h1>\n        </div>\n\n        <div className=\"row-1__2\">\n          <SelectView />\n        </div>\n      </div>\n\n      <div className=\"row-2-col-1\">\n        <SelectSort />\n      </div>\n\n      <div className=\"row-2-col-2\">\n        <FiPlus className=\"add-new-todo-icon\" onClick={handleClickAddNewTodoButton} />\n        <AddNewTodoForm />\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderShared;\n","import React, { useContext } from 'react';\nimport useUnmount from '../utils/useUnmount';\nimport TodoList from '../components/shared/TodoList.jsx';\nimport HeaderShared from '../components/shared/HeaderShared';\nimport { GlobalContext } from '../contexts/GlobalState';\n\nfunction Daily() {\n  const { today, handleClickOutsideForm, sortedTodoList, sortValue } = useContext(GlobalContext);\n  const TodosForEachDay = sortedTodoList.filter((todo) => {\n    return (\n      todo.dateInfo.year === today.year &&\n      todo.dateInfo.month === today.month &&\n      todo.dateInfo.date === today.date\n    );\n  });\n\n  useUnmount();\n\n  function showNoTodoMessage(todos) {\n    let message = 'Add new todo at the top right';\n    if (sortValue === 'completed' && !todos.length) {\n      message = 'No completed todos yet';\n    } else if (sortValue === 'active' && !todos.length) {\n      message = 'No active todo';\n    }\n\n    return message;\n  }\n\n  return (\n    <div className=\"daily\" onClick={handleClickOutsideForm}>\n      <div className=\"main-display container\">\n        <HeaderShared title={'Today'} />\n        <div className=\"list md\">\n          {TodosForEachDay.length ? (\n            <TodoList today={today} todoForToday={TodosForEachDay} />\n          ) : (\n            <span className=\"no-todo-message\">{showNoTodoMessage(TodosForEachDay)}</span>\n          )}\n        </div>\n      </div>\n      <div className=\"side-display\"></div>\n    </div>\n  );\n}\n\nexport default Daily;\n","import React, { useContext } from 'react';\nimport useUnmount from '../utils/useUnmount';\nimport HeaderShared from '../components/shared/HeaderShared';\nimport TodoList from '../components/shared/TodoList.jsx';\nimport { GlobalContext } from '../contexts/GlobalState';\n\nfunction Weekly() {\n  const { today, handleClickOutsideForm, sortedTodoList, sortValue } = useContext(GlobalContext);\n\n  let thisWeek = [];\n  for (let i = 0; i < 7; i++) {\n    const nextDayConstructor = new Date(today.year, today.month, today.date + i);\n\n    const TodosForEachDay = sortedTodoList.filter((todo) => {\n      return (\n        todo.dateInfo.year === today.year &&\n        todo.dateInfo.month === today.month &&\n        todo.dateInfo.date === today.date + i\n      );\n    });\n\n    const eachDay = {\n      dateInfo: {\n        year: nextDayConstructor.getFullYear(),\n        month: nextDayConstructor.getMonth(),\n        date: nextDayConstructor.getDate(),\n        day: nextDayConstructor.toLocaleString('default', { weekday: 'long' })\n      },\n      todos: TodosForEachDay\n    };\n\n    thisWeek.push(eachDay);\n  }\n\n  thisWeek[0].dateInfo.day = 'Today';\n  thisWeek[1].dateInfo.day = 'Tomorrow';\n\n  const getOrdinalNum = function (eachDay) {\n    if (eachDay.dateInfo > 3 && eachDay.dateInfo < 21) return 'th';\n    switch (eachDay.dateInfo % 10) {\n      case 1:\n        return 'st';\n      case 2:\n        return 'nd';\n      case 3:\n        return 'rd';\n      default:\n        return 'th';\n    }\n  };\n\n  useUnmount();\n\n  function showNoTodoMessage(todos) {\n    let message = \"There's no todo\";\n    if (sortValue === 'completed' && !todos.length) {\n      message = 'No completed todos yet';\n    } else if (sortValue === 'active' && !todos.length) {\n      message = 'No active todo';\n    }\n\n    return message;\n  }\n\n  return (\n    <div className=\"weekly\" onClick={handleClickOutsideForm}>\n      <div className=\"main-display container\">\n        <HeaderShared title={'Weekly'} />\n\n        <div className=\"weekly-list\">\n          {thisWeek.map((eachDay) => (\n            <div key={eachDay.dateInfo.date} className=\"list sm\">\n              <h2>\n                {eachDay.dateInfo.day} <span className=\"date\">{eachDay.dateInfo.date}</span>\n                <span className=\"date-ordinal\">{getOrdinalNum(eachDay.dateInfo)}</span>\n              </h2>\n              {eachDay.todos.length ? (\n                <TodoList today={today} todoForToday={eachDay.todos} />\n              ) : (\n                <span className=\"no-todo-message\">{showNoTodoMessage(eachDay)}</span>\n              )}\n            </div>\n          ))}\n        </div>\n\n        {/* needed for extra space at the end of weekly-list */}\n        <section>\n          <div></div>\n        </section>\n      </div>\n\n      <div className=\"side-display\"></div>\n    </div>\n  );\n}\n\nexport default Weekly;\n","import React, { useContext } from 'react';\nimport SelectView from '../shared/SelectView';\nimport AddNewTodoForm from '../shared/AddNewTodoForm.jsx';\nimport * as MdIcons from 'react-icons/md';\nimport { FiPlus } from 'react-icons/fi';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction HeaderMonthly({ currentMonthName, selectedYear, moveToPrevMonth, moveToNextMonth, goBackToToday }) {\n  const { handleClickAddNewTodoButton } = useContext(GlobalContext);\n\n  return (\n    <div className=\"header\">\n      <div className=\"row-1\">\n        <div className=\"row-1__1\">\n          <h1 className=\"title\">{currentMonthName}</h1>\n        </div>\n\n        <div className=\"row-1__2 arrows\">\n          <MdIcons.MdKeyboardArrowLeft className=\"arrow arrow-back\" onClick={moveToPrevMonth} />\n          <MdIcons.MdKeyboardArrowRight className=\"arrow arrow-next\" onClick={moveToNextMonth} />\n        </div>\n\n        <div className=\"row-1__3\">\n          <SelectView />\n        </div>\n      </div>\n\n      <div className=\"row-2-col-2\">\n        <FiPlus className=\"add-new-todo-icon\" onClick={handleClickAddNewTodoButton} />\n        <AddNewTodoForm />\n      </div>\n\n      <div className=\"row-2-col-1\">\n        <span className=\"this-year\">{selectedYear}</span>\n        <button className=\"today-btn\" onClick={goBackToToday}>\n          today\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderMonthly;\n","import React, { useContext } from 'react';\nimport { CgTrash } from 'react-icons/cg';\nimport { AiOutlineMore } from 'react-icons/ai';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction InnerList({ todo }) {\n  const { toggleComplete, removeTodo } = useContext(GlobalContext);\n\n  return (\n    <li className=\"inner-ul__list todo-item flex v-center\">\n      <div className=\"col-1\">\n        <span\n          className={`checkbox ${todo.type} ${todo.completed ? 'completed ' : ''}`}\n          onClick={() => toggleComplete(todo.id)}\n        ></span>\n      </div>\n      <div className=\"col-2\">\n        <span className={`task ${todo.completed ? 'grey-out' : ''}`}>{todo.task}</span>\n        <div className=\"more\">\n          <CgTrash onClick={() => removeTodo(todo.id)} />\n          <AiOutlineMore />\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default InnerList;\n","import React from 'react';\nimport InnerList from './InnerList';\n\nfunction OuterList({ eachDay }) {\n  return (\n    <li className=\"outer-ul__list\">\n      <div className=\"row-1\">\n        <span className=\"date\">{eachDay[0].dateInfo.date}</span>\n        <span className=\"day\">{eachDay[0].dateInfo.day}</span>\n      </div>\n\n      <ul className=\"row-2 inner-ul\">\n        {eachDay.map((todo) => (\n          <InnerList key={todo.id} todo={todo} />\n        ))}\n      </ul>\n    </li>\n  );\n}\n\nexport default OuterList;\n","import React, { useContext } from 'react';\nimport OuterList from './OuterList';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport _ from 'lodash';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction MonthlyList({ currentMonthName, selectedYear, selectedMonth }) {\n  const { todoList } = useContext(GlobalContext);\n\n  const todosByYear = _.groupBy(todoList, 'dateInfo.year');\n  const todoThisMonth = todosByYear[`${selectedYear}`].filter(\n    (todo) => todo.dateInfo.month === selectedMonth\n  );\n\n  const todosEachDay = Object.values(\n    todoThisMonth.reduce((acc, current) => {\n      if (acc[current.dateInfo.date]) {\n        acc[current.dateInfo.date].push(current);\n      } else {\n        acc[current.dateInfo.date] = [current];\n      }\n      return acc;\n    }, {})\n  );\n\n  //or\n  //   const todosByDate = _.groupBy(todoThisMonth, 'dateInfo.date');\n  //   let todosEachDay = [];\n  //   for (let x in todosByDate) {\n  //     todosEachDay.push(todosByDate[x]);\n  //   }\n\n  return (\n    <div className=\"monthly-list\">\n      <form action=\"\">\n        <AiOutlineSearch className=\"search-icon\" />\n        <input type=\"text\" placeholder=\"Search\" />\n      </form>\n\n      <h2 className=\"title\">\n        {currentMonthName}\n        <span className=\"todos-length\">({todoThisMonth.length})</span>\n      </h2>\n\n      <ul className=\"outer-ul\">\n        {todosEachDay.map((eachDay) => (\n          <OuterList key={eachDay[0].id} eachDay={eachDay} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default MonthlyList;\n","import React from 'react';\n\nfunction CalendarMain({ showCalendar }) {\n  const daysArray = ['M', 'T', 'W', 'T', 'F', 'S', 'S'];\n\n  return (\n    <div className=\"calendar-main\">\n      <div className=\"days\">\n        {daysArray.map((day, index) => (\n          <span key={index}>{day}</span>\n        ))}\n      </div>\n\n      {showCalendar}\n    </div>\n  );\n}\n\nexport default CalendarMain;\n","import React from 'react';\n\nfunction CalendarDate({ className, date, dateInfo, showDateInfo }) {\n  return (\n    <span className={className} onClick={() => showDateInfo(dateInfo)}>\n      {date}\n    </span>\n  );\n}\n\nexport default CalendarDate;\n","import React from 'react';\nimport CalendarDate from '../components/monthly/CalendarDate';\n\nexport const showCalendar = (year, month) => {\n  const today = new Date();\n  let firstDay = new Date(year, month).getDay() - 1; // starting on Mon as index 0\n  if (firstDay === -1) firstDay = 6; // convert Sun index( 0-1 = -1 ) to 6\n  const daysInMonth = (year, month) => {\n    return 32 - new Date(year, month, 32).getDate();\n  };\n\n  const weeks = [];\n  const getDaysPrevMonth = 1 - firstDay;\n  let date = 1;\n  let daysPrevMonth = new Date(year, month, getDaysPrevMonth).getDate();\n  let daysNextMonth = 1;\n\n  // render 6 rows with 7 columns of calendar\n  for (let i = 0; i < 6; i++) {\n    const row = [];\n\n    for (let j = 0; j < 7; j++) {\n      let dateInfo = { date, month, year };\n      let className;\n\n      // render last days of prev month\n      if (i === 0 && j < firstDay) {\n        dateInfo.date = daysPrevMonth;\n        dateInfo.month = month - 1 === -1 ? 11 : month - 1;\n        dateInfo.year = dateInfo.month === 11 ? year - 1 : year;\n        className = 'days-prev-month';\n\n        row.push(renderDate(j, className, daysPrevMonth, dateInfo, showDateInfo));\n        daysPrevMonth++;\n      }\n\n      // render first days of next month\n      else if (date > daysInMonth(year, month)) {\n        dateInfo.date = daysNextMonth;\n        dateInfo.month = month + 1 === 12 ? 0 : month + 1;\n        dateInfo.year = dateInfo.month === 0 ? year + 1 : year;\n        className = 'days-next-month';\n\n        row.push(renderDate(j, className, daysNextMonth, dateInfo, showDateInfo));\n        daysNextMonth += 1;\n      }\n\n      // render dates of this month\n      else {\n        className = j === 5 || j === 6 ? 'weekend ' : '';\n        if (date === today.getDate() && year === today.getFullYear() && month === today.getMonth()) {\n          className += 'today';\n        }\n        row.push(renderDate(j, className, date, dateInfo, showDateInfo));\n        date++;\n      }\n    }\n\n    weeks.push(\n      <div key={i} className={'week week-' + i}>\n        {row}\n      </div>\n    );\n  }\n\n  return weeks;\n};\n\nconst renderDate = (id, className, daysPrevMonth, dateInfo, showDateInfo) => {\n  return (\n    <CalendarDate\n      key={id}\n      className={className}\n      date={daysPrevMonth}\n      dateInfo={dateInfo}\n      showDateInfo={showDateInfo}\n    />\n  );\n};\n\nconst showDateInfo = (dateInfo) => {\n  console.log('show date info..', dateInfo);\n};\n","import React from 'react';\nimport CalendarMain from './CalendarMain';\nimport { showCalendar } from '../../utils/calendarHelper';\n\nfunction Calendar({ selectedYear, selectedMonth }) {\n  return (\n    <div className=\"calendar-container\">\n      <CalendarMain showCalendar={showCalendar(selectedYear, selectedMonth)} />\n    </div>\n  );\n}\n\nexport default Calendar;\n","import React, { useState, useContext } from 'react';\nimport useUnmount from '../utils/useUnmount';\nimport HeaderMonthly from '../components/monthly/HeaderMonthly';\nimport MonthlyList from '../components/monthly/MonthlyList';\nimport Calendar from '../components/monthly/Calendar';\nimport { GlobalContext } from '../contexts/GlobalState';\n\nfunction Monthly() {\n  const { today, handleClickOutsideForm } = useContext(GlobalContext);\n\n  // prettier-ignore\n  const [selectedYear, setSelectedYear] = useState(today.year);\n  const [selectedMonth, setSelectedMonth] = useState(today.month);\n  const currentMonthName = new Date(today.year, selectedMonth).toLocaleString('default', { month: 'long' });\n\n  const moveToPrevMonth = () => {\n    if (selectedMonth === 0) {\n      setSelectedYear((prev) => prev - 1);\n      setSelectedMonth(12);\n    }\n    setSelectedMonth((prev) => prev - 1);\n  };\n\n  const moveToNextMonth = () => {\n    if (selectedMonth === 11) {\n      setSelectedYear((prev) => prev + 1);\n    }\n\n    setSelectedMonth((prev) => (prev + 1) % 12);\n  };\n\n  const goBackToToday = () => {\n    setSelectedYear(today.year);\n    setSelectedMonth(today.month);\n  };\n\n  useUnmount();\n\n  return (\n    <div className=\"monthly\" onClick={handleClickOutsideForm}>\n      <div className=\"main-display container\">\n        <HeaderMonthly\n          currentMonthName={currentMonthName}\n          selectedYear={selectedYear}\n          moveToPrevMonth={moveToPrevMonth}\n          moveToNextMonth={moveToNextMonth}\n          goBackToToday={goBackToToday}\n        />\n        <div className=\"main\">\n          <Calendar selectedYear={selectedYear} selectedMonth={selectedMonth} />\n          <MonthlyList\n            currentMonthName={currentMonthName}\n            selectedYear={selectedYear}\n            selectedMonth={selectedMonth}\n          />\n        </div>\n      </div>\n      <div className=\"side-display\"></div>\n    </div>\n  );\n}\n\nexport default Monthly;\n","import React, { useState, useEffect } from 'react';\nimport './styles/App.scss';\nimport Nav from './components/shared/Nav';\nimport Home from './pages/Home';\nimport Daily from './pages/Daily';\nimport Weekly from './pages/Weekly';\nimport Monthly from './pages/Monthly';\nimport { Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  // window resize for all pages\n  let [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n\n    let vh = windowSize.height * 0.01;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [windowSize]);\n\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/daily\" component={Daily} />\n        <Route exact path=\"/weekly\" component={Weekly} />\n        <Route exact path=\"/monthly\" component={Monthly} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport { GlobalContextProvider } from './contexts/GlobalState';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter basename=\"/\">\n    <GlobalContextProvider>\n      <App />\n    </GlobalContextProvider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}