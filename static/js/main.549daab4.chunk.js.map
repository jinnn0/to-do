{"version":3,"sources":["assets/icons/adjust.svg","firebase/firebase.js","hooks/firebaseHooks.js","hooks/useSortedTodoList.js","contexts/GlobalState.js","components/shared/Nav.jsx","components/home/TimeDisplay.jsx","utils/useOnClickOutside.js","components/todo-form/NewTodo.jsx","components/shared/AddNewTodoForm.jsx","animations/todoListAnimation.js","components/shared/TodoItem.jsx","animations/homeAnimation.js","components/home/HomeMain.jsx","utils/utils.js","pages/Home.jsx","components/shared/TodoList.jsx","components/shared/SelectView.jsx","components/shared/SelectSort.jsx","components/shared/HeaderShared.jsx","pages/Daily.jsx","pages/Weekly.jsx","components/monthly/HeaderMonthly.jsx","components/monthly/InnerList.jsx","components/monthly/OuterList.jsx","components/monthly/MonthlyList.jsx","components/monthly/CalendarDate.jsx","components/monthly/Calendar.jsx","utils/showCalendar.js","pages/Monthly.jsx","App.jsx","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","fill","_ref3","_ref4","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","db","firestore","FieldValue","serverTimestamp","useTodoList","useState","todoList","setTodoList","useEffect","unSubscribe","collection","onSnapshot","snap","documents","docs","map","doc","data","id","useSort","selectedSort","setSelectedSort","sort","useSortedTodoList","sortedTodoList","setSortedTodoList","updated","a","b","timestamp","ordering","sortOrder","type","filter","todo","completed","GlobalContext","createContext","GlobalContextProvider","initialView","JSON","parse","localStorage","getItem","Date","today","year","getFullYear","month","getMonth","monthName","toLocaleString","date","getDate","day","weekday","hour","getHours","minute","getMinutes","selectedView","setSelectedView","isAddNewTodoClicked","setIsAddNewTodoClicked","console","log","msMidnight","getTime","overdueTodoList","sortedOverdueTodoList","setItem","stringify","value","addTodo","newTodo","add","removeTodo","delete","toggleComplete","update","updateSelectedSort","newSort","updateSelectedView","newView","toggleIsAddNewTodoClicked","Provider","children","Nav","useContext","Links","path","icon","className","link","exact","to","activeClassName","TimeDisplay","currentTime","setCurrentTime","timeId","setTimeout","getSeconds","clearTimeout","useOnClickOutside","handler","React","listener","e","current","contains","document","addEventListener","removeEventListener","NewTodo","handleInputChange","isColorBoxClicked","setIsColorBoxClicked","selectTypeColor","showSelectTypeColorDropDown","handleSelectType","inputRef","useRef","selectTypeDivRef","onChange","task","placeholder","onClick","colorType","SelectColorTypeList","data-color-type","AddNewTodoForm","startDate","setStartDate","dateInfo","setTodo","formmRef","action","onSubmit","preventDefault","shortid","generate","trim","stopPropagation","dataset","selected","timeInputLabel","showWeekNumbers","minDate","showTimeInput","shouldCloseOnSelect","todoListAnimation","gsap","timeline","duration","ease","y","opacity","stagger","amount","TodoItem","homeAnimation","delay","HomeMain","todoIndex","setTodoIndex","homeMainDivRef","homeMainDivTouching","setHomeMainDivTouching","todoToday","focusOnThisTodo","getBoundingClientRect","top","window","innerHeight","style","position","left","transform","prev","n","m","InitialMessage","showAddNewTodoForm","Home","TodoList","size","todosToday","withRouter","history","location","currentView","pathname","slice","push","SelectSort","HeaderShared","Daily","todos","unsortedTodosToday","sortedTodosToday","showNoTodoMessage","isOverdueList","message","unSortedTodos","sortedTodos","Weekly","generateTodos","counter","thisWeek","nextDayConstructor","eachDay","getOrdinalNum","HeaderMonthly","currentMonthName","selectedYear","moveToPrevMonth","moveToNextMonth","goBackToToday","InnerList","OuterList","data-id","MonthlyList","selectedMonth","todoThisMonth","_","groupBy","todosEachDay","values","reduce","acc","CalendarDate","setSelected","dateRef","Calendar","index","renderDate","firstDay","getDay","daysInMonth","weeks","datePrevMonth","dateNextMonth","row","j","showCalendar","Monthly","setSelectedYear","setSelectedMonth","parent","HTMLCollection","childNodes","listToScroll","find","list","getAttribute","scrollIntoView","behavior","App","innerWidth","windowSize","setWindowSize","handleResize","vh","documentElement","setProperty","component","Boolean","hostname","match","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.549daab4.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4.04813 4.26933V1.11511H2.64188V4.26933H0V9.76683H2.64188V22.8848H4.04813V9.76683H6.68953V4.26933H4.04813ZM5.28328 8.36058H1.40625V5.67558H5.28328V8.36058Z\",\n  fill: \"black\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.7032 10.8248V1.11511H11.2969V10.8248H8.65503V16.3228H11.2969V22.8848H12.7032V16.3228H15.345V10.8248H12.7032ZM13.9388 14.9165H10.0613V12.231H13.9388V14.9165Z\",\n  fill: \"black\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21.3581 4.26933V1.11511H19.9518V4.26933H17.3104V9.76683H19.9518V22.8848H21.3581V9.76683H24V4.26933H21.3581ZM22.5937 8.36058H18.7167V5.67558H22.5937V8.36058Z\",\n  fill: \"black\"\n});\n\nvar SvgAdjust = function SvgAdjust(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 17,\n    height: 17,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgAdjust, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/adjust.ed4b8ae6.svg\";\nexport { ForwardRef as ReactComponent };","import firebase from 'firebase/app';\nimport 'firebase/firestore';\n\n// Your web app's Firebase configuration\n// For Firebase JS SDK v7.20.0 and later, measurementId is optional\nvar firebaseConfig = {\n  apiKey: 'AIzaSyBuzKzbUfNB7ejdUCcyEV7SPvE8LZfcjoo',\n  authDomain: 'to-do-6ef37.firebaseapp.com',\n  databaseURL: 'https://to-do-6ef37.firebaseio.com',\n  projectId: 'to-do-6ef37',\n  storageBucket: 'to-do-6ef37.appspot.com',\n  messagingSenderId: '720315387821',\n  appId: '1:720315387821:web:de81296594fe8c4d645b24',\n  measurementId: 'G-4VGM9FBYEP'\n};\n\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\n\nconst db = firebase.firestore();\nconst timestamp = firebase.firestore.FieldValue.serverTimestamp;\n\nexport { db, timestamp };\n","import { useState, useEffect } from 'react';\nimport { db } from '../firebase/firebase';\n\n// used in GlobalContext.js - useTodoList, useSort\nconst useTodoList = () => {\n  const [todoList, setTodoList] = useState([]);\n\n  useEffect(() => {\n    const unSubscribe = db.collection('todo-list').onSnapshot((snap) => {\n      const documents = snap.docs.map((doc) => ({ ...doc.data(), id: doc.id }));\n\n      setTodoList(documents);\n    });\n\n    return () => unSubscribe();\n  }, []);\n\n  return todoList;\n};\n\nconst useSort = () => {\n  const [selectedSort, setSelectedSort] = useState('oldest');\n\n  useEffect(() => {\n    const unSubscribe = db.collection('selected-sort').onSnapshot((snap) => {\n      setSelectedSort(snap.docs[0].data().sort);\n    });\n\n    return () => unSubscribe();\n  }, []);\n\n  return selectedSort;\n};\nexport { useTodoList, useSort };\n","import { useState, useEffect } from 'react';\nimport { useSort, useTodoList } from './firebaseHooks';\n\n// used in GlobalContext.js\nconst useSortedTodoList = () => {\n  const todoList = useTodoList();\n  const selectedSort = useSort();\n  const [sortedTodoList, setSortedTodoList] = useState(todoList);\n\n  useEffect(() => {\n    let updated;\n    if (selectedSort === 'oldest') {\n      updated = todoList.sort((a, b) => {\n        return a.timestamp - b.timestamp;\n      });\n    } else if (selectedSort === 'newest') {\n      updated = todoList.sort((a, b) => {\n        return b.timestamp - a.timestamp;\n      });\n    } else if (selectedSort === 'tag') {\n      const ordering = {};\n      const sortOrder = ['important', 'work', 'study', 'other'];\n      for (let i = 0; i < sortOrder.length; i++) {\n        ordering[sortOrder[i]] = i;\n      }\n      updated = todoList.sort((a, b) => {\n        return ordering[a.type] - ordering[b.type];\n      });\n    } else if (selectedSort === 'completed') {\n      updated = todoList.filter((todo) => todo.completed);\n    } else if (selectedSort === 'active') {\n      updated = todoList.filter((todo) => !todo.completed);\n    }\n    setSortedTodoList(updated);\n  }, [todoList, selectedSort]);\n\n  return sortedTodoList;\n};\n\nexport default useSortedTodoList;\n","import React, { useState, useEffect, createContext } from 'react';\nimport { db } from '../firebase/firebase';\nimport { useTodoList, useSort } from '../hooks/firebaseHooks';\nimport useSortedTodoList from '../hooks/useSortedTodoList';\n// import sampleTodoList from '../utils/sampleTodoList';\n\n// // load sample todos to firestore\n// sampleTodoList.forEach((todo) => {\n//   db.collection('todo-list').add(todo);\n// });\n\nexport const GlobalContext = createContext();\n\nexport const GlobalContextProvider = (props) => {\n  const initialView = JSON.parse(localStorage.getItem('selected-view')) || 'daily';\n\n  // today\n  const d = new Date();\n  const today = {\n    year: d.getFullYear(),\n    month: d.getMonth(),\n    monthName: d.toLocaleString('default', { month: 'short' }),\n    date: d.getDate(),\n    day: d.toLocaleString('default', { weekday: 'short' }),\n    hour: d.getHours(),\n    minute: d.getMinutes()\n  };\n\n  const todoList = useTodoList();\n  const sortedTodoList = useSortedTodoList();\n  const selectedSort = useSort();\n  const [selectedView, setSelectedView] = useState(initialView);\n  const [isAddNewTodoClicked, setIsAddNewTodoClicked] = useState(false);\n\n  console.log(todoList);\n\n  // overdueTodolist\n  const msMidnight = new Date(today.year, today.month, today.date, 0, 0, 0).getTime();\n  const overdueTodoList = todoList.filter((todo) => todo.timestamp < msMidnight);\n  const sortedOverdueTodoList = sortedTodoList.filter((todo) => todo.timestamp < msMidnight);\n\n  // todoList\n  const addTodo = (newTodo) => {\n    db.collection('todo-list').add(newTodo);\n    console.log('add todo');\n  };\n\n  const removeTodo = (id) => {\n    db.collection('todo-list').doc(id).delete();\n  };\n\n  const toggleComplete = (todo) => {\n    db.collection('todo-list').doc(todo.id).update({ completed: !todo.completed });\n  };\n\n  // sort (recent / tag / oldest / completed / active)\n  const updateSelectedSort = (newSort) => {\n    db.collection('selected-sort').doc('A7ftOcAem11mu3euKuIs').update({ sort: newSort });\n  };\n\n  // view  (daily / weekly / monthly)\n  useEffect(() => {\n    localStorage.setItem('selected-view', JSON.stringify(selectedView));\n  }, [selectedView]);\n\n  const updateSelectedView = (newView) => {\n    setSelectedView(newView);\n  };\n\n  // isAddNewTodoClicked\n  const toggleIsAddNewTodoClicked = () => {\n    setIsAddNewTodoClicked(!isAddNewTodoClicked);\n  };\n\n  // global states\n  const value = {\n    today, // HomeMain, TimeDisplay, Daily, Weekly, Monthly, AddNewTodoForm\n    todoList, // HomeMain, MonthlyList, Daily\n    addTodo, // AddNewTodoForm\n    removeTodo, // TodoItem, InnerList\n    toggleComplete, // TodoItem, InnerList\n    selectedSort, // SelectSort, Daily, Weekly\n    updateSelectedSort, // SelectSort\n    sortedTodoList, // Daily, Weekly\n    overdueTodoList, // Daily, Weekly, TodoList\n    sortedOverdueTodoList, // Daily, TodoList\n    selectedView, // Nav, SelectView\n    updateSelectedView, // SelectView\n    isAddNewTodoClicked, // HomeMain, AddNewTodoForm\n    toggleIsAddNewTodoClicked // HomeMain, HeaderShared, HeaderMonthly, useOnClickOutside.js\n  };\n\n  return <GlobalContext.Provider value={value}>{props.children}</GlobalContext.Provider>;\n};\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { ReactComponent as Adjust } from '../../assets/icons/adjust.svg';\nimport * as AiIcons from 'react-icons/ai';\n// import { FiInbox } from 'react-icons/fi';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction Nav() {\n  const { selectedView } = useContext(GlobalContext);\n\n  const Links = [\n    { path: '/', icon: <AiIcons.AiOutlineStar /> },\n    {\n      path: `/${selectedView}`,\n      icon: <AiIcons.AiOutlineUnorderedList />\n    }\n    // {\n    //   path: '/inbox',\n    //   icon: <FiInbox />\n    // }\n  ];\n\n  return (\n    <nav className=\"nav container flex\">\n      <ul className=\"left flex\">\n        {Links.map((link) => (\n          <li key={link.path}>\n            <NavLink exact to={link.path} className=\"icon flex center\" activeClassName=\" selected\">\n              {link.icon}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n\n      <ul className=\"right flex\">\n        <li>\n          <div className=\"icon flex center\">\n            <AiIcons.AiOutlineSearch />\n          </div>\n        </li>\n        <li>\n          <div className=\"icon flex center\">\n            <Adjust />\n          </div>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction TimeDisplay() {\n  const { today } = useContext(GlobalContext);\n  const [currentTime, setCurrentTime] = useState({\n    hour: today.hour,\n    minute: today.minute\n  });\n\n  useEffect(() => {\n    let timeId = setTimeout(() => {\n      setCurrentTime({\n        hour: new Date().getHours(),\n        minute: new Date().getMinutes()\n      });\n    }, 60000 - 1000 * new Date().getSeconds());\n\n    return () => {\n      clearTimeout(timeId);\n    };\n  }, [currentTime.minute]);\n\n  return (\n    <div className=\"time-display\">\n      <div className=\"time\">\n        {`${currentTime.hour < 10 ? '0' + currentTime.hour : currentTime.hour}:${\n          currentTime.minute < 10 ? '0' + currentTime.minute : currentTime.minute\n        }`}\n      </div>\n      <div className=\"day\">\n        {today.day}, {today.monthName}\n        <span className=\"date\">{today.date}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeDisplay;\n","import React from 'react';\n\nexport default function useOnClickOutside(ref, handler) {\n  React.useEffect(() => {\n    const listener = (e) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(e.target)) {\n        return;\n      }\n\n      handler(e);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n}\n","import React, { useEffect, useRef } from 'react';\nimport { RiArrowDropDownLine } from 'react-icons/ri';\nimport { CgCheck } from 'react-icons/cg';\nimport useOnClickOutside from '../../utils/useOnClickOutside';\n\nfunction NewTodo({\n  handleInputChange,\n  todo,\n  isColorBoxClicked,\n  setIsColorBoxClicked,\n  selectTypeColor,\n  showSelectTypeColorDropDown,\n  handleSelectType\n}) {\n  const selectTypeColorList = ['important', 'work', 'study', 'other'];\n  const inputRef = useRef();\n  const selectTypeDivRef = useRef();\n\n  useEffect(() => {\n    // when enabled, it takes away focus every time AddNewTodoForm gets re-render\n    // when changing time with arrow key\n    // needs fix in the future\n    // inputRef.current.focus();\n  });\n\n  // hide the dropdown\n  useOnClickOutside(selectTypeDivRef, () => setIsColorBoxClicked(false));\n\n  return (\n    <div className=\"new-task-box flex v-center\">\n      <input\n        ref={inputRef}\n        type=\"text\"\n        onChange={handleInputChange}\n        value={todo.task}\n        placeholder=\"New task\"\n        className=\"text-input\"\n      />\n\n      <div className=\"select-type-container\" ref={selectTypeDivRef}>\n        <ul className=\"select-type-default-ul\" onClick={showSelectTypeColorDropDown}>\n          <li>\n            <span className={`color-box ${selectTypeColor}`}></span>\n            <span className=\"arrow-down\">\n              <RiArrowDropDownLine />\n            </span>\n          </li>\n        </ul>\n\n        <ul\n          className={`select-type-dropdown-ul ${isColorBoxClicked ? 'show-dropdown' : ''}`}\n          onClick={handleSelectType}\n        >\n          {selectTypeColorList.map((colorType) => (\n            <SelectColorTypeList key={colorType} selectTypeColor={selectTypeColor} colorType={colorType} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default NewTodo;\n\nfunction SelectColorTypeList({ selectTypeColor, colorType }) {\n  return (\n    <li data-color-type={colorType}>\n      <span className=\"checked-icon-container\">{selectTypeColor === colorType ? <CgCheck /> : null}</span>\n      <span className={'color-box ' + colorType}></span>\n      <span>{colorType}</span>\n    </li>\n  );\n}\n","import React, { useState, useContext, useRef } from 'react';\nimport shortid from 'shortid';\nimport NewTodo from '../todo-form/NewTodo';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport useOnClickOutside from '../../utils/useOnClickOutside';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction AddNewTodoForm() {\n  const { today, isAddNewTodoClicked, toggleIsAddNewTodoClicked, addTodo } = useContext(GlobalContext);\n  const [startDate, setStartDate] = useState(new Date());\n  const [isColorBoxClicked, setIsColorBoxClicked] = useState(false);\n  const [todo, setTodo] = useState({\n    id: null,\n    task: '',\n    timestamp: new Date().getTime(),\n    type: 'important',\n    completed: false,\n    dateInfo: {\n      year: today.year,\n      month: today.month,\n      date: today.date,\n      day: today.day,\n      hour: today.hour,\n      minute: today.minute\n    }\n  });\n  const formmRef = useRef();\n\n  const handleInputChange = (e) => {\n    setTodo({\n      ...todo,\n      task: e.target.value\n    });\n  };\n\n  const showSelectTypeColorDropDown = () => {\n    setIsColorBoxClicked(!isColorBoxClicked);\n  };\n\n  const handleSelectType = (e) => {\n    setIsColorBoxClicked(!isColorBoxClicked);\n    setTodo({\n      ...todo,\n      type: e.target.dataset.colorType\n    });\n  };\n\n  const handleDateSelect = (e) => {\n    setStartDate(e);\n    setTodo({\n      ...todo,\n      timestamp: new Date(e.getFullYear(), e.getMonth(), e.getDate(), e.getHours(), e.getMinutes()).getTime(),\n      dateInfo: {\n        year: e.getFullYear(),\n        month: e.getMonth(),\n        date: e.getDate(),\n        day: e.toLocaleString('default', { weekday: 'long' }),\n        hour: e.getHours(),\n        minute: e.getMinutes()\n      }\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newTodo = {\n      ...todo,\n      id: shortid.generate(),\n      task: todo.task\n    };\n\n    if (todo.task.trim()) {\n      addTodo(newTodo);\n    }\n\n    setTodo({ ...todo, task: '' });\n    toggleIsAddNewTodoClicked();\n  };\n\n  useOnClickOutside(formmRef, toggleIsAddNewTodoClicked);\n\n  return (\n    <form\n      action=\"\"\n      ref={formmRef}\n      onSubmit={handleSubmit}\n      onClick={(e) => {\n        e.stopPropagation();\n      }}\n      className={`add-new-todo-form ${isAddNewTodoClicked ? ' show-add-new-todo-form' : ''}`}\n    >\n      <NewTodo\n        handleInputChange={handleInputChange}\n        todo={todo}\n        isColorBoxClicked={isColorBoxClicked}\n        setIsColorBoxClicked={setIsColorBoxClicked}\n        selectTypeColor={todo.type}\n        showSelectTypeColorDropDown={showSelectTypeColorDropDown}\n        handleSelectType={handleSelectType}\n      />\n\n      <DatePicker\n        selected={startDate}\n        onChange={handleDateSelect}\n        timeInputLabel=\"Time:\"\n        showWeekNumbers\n        minDate={new Date()}\n        showTimeInput\n        shouldCloseOnSelect={false}\n      />\n\n      <button className=\"submit\" type=\"submit\">\n        Add new task\n      </button>\n    </form>\n  );\n}\n\nexport default AddNewTodoForm;\n","import gsap from 'gsap';\n\nconst todoListAnimation = () => {\n  const tl = gsap.timeline();\n\n  tl.to(\n    '.todo-item',\n    {\n      duration: 1,\n      ease: 'power4.out',\n      y: 0,\n      opacity: 1,\n      stagger: { amount: 0.4 }\n    },\n    0.1\n  );\n};\n\nexport default todoListAnimation;\n","import React, { useContext, useEffect } from 'react';\nimport todoListAnimation from '../../animations/todoListAnimation';\nimport { CgTrash } from 'react-icons/cg';\nimport { AiOutlineMore } from 'react-icons/ai';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction TodoItem({ todo }) {\n  const { removeTodo, toggleComplete } = useContext(GlobalContext);\n\n  useEffect(() => {\n    todoListAnimation();\n  }, [todo]);\n\n  return (\n    <li className=\"todo-item flex v-center\">\n      <div>\n        <span className={`type-bar ${todo.type}`}></span>\n      </div>\n      <div>\n        <span\n          className={`checkbox ${todo.completed ? 'completed ' + todo.type : ''}`}\n          onClick={() => toggleComplete(todo)}\n        ></span>\n      </div>\n      <div>\n        <span className=\"task\">{todo.task}</span>\n      </div>\n      <div className=\"more\">\n        <CgTrash onClick={() => removeTodo(todo.id)} />\n        <AiOutlineMore />\n      </div>\n    </li>\n  );\n}\n\nexport default TodoItem;\n","import gsap from 'gsap';\n\nconst homeAnimation = () => {\n  const tl = gsap.timeline();\n\n  tl.to('.initial-message', {\n    duration: 0.8,\n    ease: 'power4.out',\n    y: 0,\n    opacity: 1\n  }).to('.point-down-icon', {\n    duration: 0.5,\n    opacity: 1,\n    delay: -0.5\n  });\n};\n\nexport default homeAnimation;\n","import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { mod } from '../../utils/utils';\nimport AddNewTodoForm from '../shared/AddNewTodoForm';\nimport TodoItem from '../shared/TodoItem';\nimport * as MdIcons from 'react-icons/md';\nimport { FaRegHandPointDown } from 'react-icons/fa';\nimport homeAnimation from '../../animations/homeAnimation';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction HomeMain() {\n  const { today, todoList, isAddNewTodoClicked, toggleIsAddNewTodoClicked } = useContext(GlobalContext);\n\n  const [todoIndex, setTodoIndex] = useState(0);\n  const homeMainDivRef = useRef();\n  const [homeMainDivTouching, setHomeMainDivTouching] = useState(false);\n\n  const todoToday = todoList.filter(\n    (todo) =>\n      todo.dateInfo.year === today.year &&\n      todo.dateInfo.month === today.month &&\n      todo.dateInfo.date === today.date\n  );\n  const focusOnThisTodo = todoToday[todoIndex];\n\n  const getPrevTodo = () => {\n    setTodoIndex((prev) => mod(prev - 1, todoToday.length));\n  };\n\n  const getNextTodo = () => {\n    setTodoIndex((prev) => (prev + 1) % todoToday.length);\n  };\n\n  const absoluteCenter = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  };\n\n  useEffect(() => {\n    if (homeMainDivRef.current) {\n      const currentTop = homeMainDivRef.current.getBoundingClientRect().top;\n      // nav-height-bg 72px + time-display 50px = 130\n      // set the div to display block so that\n      // it stays below time display when shrinking small\n      if (currentTop < 130) {\n        setHomeMainDivTouching(true);\n        if (window.innerHeight > 544) {\n          setHomeMainDivTouching(false);\n        }\n      }\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"home-main-container\">\n        <div\n          className={`home-main flex center ${isAddNewTodoClicked ? 'z-index' : ''}`}\n          ref={homeMainDivRef}\n          style={homeMainDivTouching ? null : absoluteCenter}\n        >\n          {focusOnThisTodo ? (\n            <>\n              <h1 className=\"title\">Focus on this now</h1>\n              <TodoItem key={focusOnThisTodo.id} todo={focusOnThisTodo} />\n              <div className=\"arrows flex\">\n                <MdIcons.MdKeyboardArrowLeft className=\"arrow arrow-back\" onClick={getPrevTodo} />\n                <MdIcons.MdKeyboardArrowRight className=\"arrow arrow-next\" onClick={getNextTodo} />\n              </div>\n            </>\n          ) : (\n            <>\n              <InitialMessage showAddNewTodoForm={toggleIsAddNewTodoClicked} />\n              {isAddNewTodoClicked ? (\n                <>\n                  <AddNewTodoForm />\n                </>\n              ) : null}\n            </>\n          )}\n        </div>\n      </div>\n\n      {isAddNewTodoClicked && !focusOnThisTodo ? <div className=\"overlay\"></div> : null}\n    </>\n  );\n}\n\nexport default HomeMain;\n\nfunction InitialMessage({ showAddNewTodoForm }) {\n  useEffect(() => {\n    homeAnimation();\n  }, []);\n\n  return (\n    <div className=\"initial-message\">\n      <FaRegHandPointDown className=\"point-down-icon\" />\n      <h1 className=\"title message\" onClick={showAddNewTodoForm}>\n        What's your todo today?\n      </h1>\n    </div>\n  );\n}\n","export function mod(n, m) {\n  return ((n % m) + m) % m;\n}\n","import React from 'react';\nimport TimeDisplay from '../components/home/TimeDisplay';\nimport HomeMain from '../components/home/HomeMain';\n\nfunction Home() {\n  return (\n    <div className=\"home container\">\n      <TimeDisplay />\n      <HomeMain />\n    </div>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport TodoItem from './TodoItem.jsx';\n\nfunction TodoList({ size, todosToday }) {\n  return (\n    <ul className=\"todo-list\">\n      {todosToday.map((todo) => (\n        <TodoItem key={todo.id} todo={todo} size={size} />\n      ))}\n    </ul>\n  );\n}\n\nexport default TodoList;\n","import React, { useContext, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction SelectView({ history, location }) {\n  const { selectedView, updateSelectedView } = useContext(GlobalContext);\n\n  // history.push : change the page and url\n  const handleSelectedViewChange = (e) => {\n    history.push(`/${e.target.value}`);\n    updateSelectedView(e.target.value);\n  };\n\n  // when mounted, get the current url and always update the selectedView\n  // it updates the state when user clicks on go back button in the browser\n  useEffect(() => {\n    const currentView = location.pathname.slice(1, location.pathname.length);\n    updateSelectedView(currentView);\n  });\n\n  return (\n    <select className=\"select-view\" value={selectedView} onChange={handleSelectedViewChange}>\n      <option value=\"daily\">Day</option>\n      <option value=\"weekly\">Week</option>\n      <option value=\"monthly\">Month</option>\n    </select>\n  );\n}\n\nexport default withRouter(SelectView);\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction SelectSort() {\n  const { selectedSort, updateSelectedSort } = useContext(GlobalContext);\n  const handleSelectedSortChange = (e) => {\n    updateSelectedSort(e.target.value);\n  };\n\n  return (\n    <div className=\"select-sort-container\">\n      <span className=\"sort-by-text\">sort by</span>\n      <select className=\"select-sort\" value={selectedSort} onChange={handleSelectedSortChange}>\n        <option value=\"oldest\">oldest</option>\n        <option value=\"newest\">newest</option>\n        <option value=\"tag\">tag</option>\n        <option value=\"completed\">completed</option>\n        <option value=\"active\">active</option>\n      </select>\n    </div>\n  );\n}\n\nexport default SelectSort;\n","import React, { useContext } from 'react';\nimport SelectView from './SelectView';\nimport SelectSort from './SelectSort';\nimport AddNewTodoForm from './AddNewTodoForm';\nimport { FiPlus } from 'react-icons/fi';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction HeaderShared({ title }) {\n  const { isAddNewTodoClicked, toggleIsAddNewTodoClicked } = useContext(GlobalContext);\n\n  return (\n    <div className=\"header\">\n      <div className=\"row-1\">\n        <div className=\"row-1__1\">\n          <h1 className=\"title\">{title}</h1>\n        </div>\n\n        <div className=\"row-1__2\">\n          <SelectView />\n        </div>\n      </div>\n\n      <div className=\"row-2-col-1\">\n        <SelectSort />\n      </div>\n\n      <div className=\"row-2-col-2\">\n        <FiPlus className=\"add-new-todo-icon\" onClick={toggleIsAddNewTodoClicked} />\n        {isAddNewTodoClicked ? <AddNewTodoForm /> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderShared;\n","import React, { useContext } from 'react';\nimport TodoList from '../components/shared/TodoList.jsx';\nimport HeaderShared from '../components/shared/HeaderShared';\nimport { RiPushpin2Line } from 'react-icons/ri';\nimport { GlobalContext } from '../contexts/GlobalState';\n\nfunction Daily() {\n  const {\n    today,\n    selectedSort,\n    todoList,\n    sortedTodoList,\n    overdueTodoList,\n    sortedOverdueTodoList\n  } = useContext(GlobalContext);\n\n  const todosToday = (todos) => {\n    return todos.filter(\n      (todo) =>\n        todo.dateInfo.year === today.year &&\n        todo.dateInfo.month === today.month &&\n        todo.dateInfo.date === today.date\n    );\n  };\n\n  const unsortedTodosToday = todosToday(todoList);\n  const sortedTodosToday = todosToday(sortedTodoList);\n\n  const showNoTodoMessage = (isOverdueList) => {\n    let unSortedTodos = isOverdueList ? overdueTodoList : unsortedTodosToday;\n    let sortedTodos = isOverdueList ? sortedOverdueTodoList : sortedTodosToday;\n    let message;\n\n    if (!unSortedTodos.length) {\n      message = 'Add new todo at the top right corner';\n    } else if (selectedSort === 'completed' && !sortedTodos.length && unSortedTodos.length) {\n      message = isOverdueList ? 'No completed overdue todos yet' : 'No completed todos yet';\n    } else if (selectedSort === 'active' && !sortedTodos.length && unSortedTodos.length) {\n      message = isOverdueList ? 'All overdue todos are completed' : 'All todos are completed';\n    }\n\n    return message;\n  };\n\n  return (\n    <div className=\"daily\">\n      <div className=\"main-display container\">\n        <HeaderShared title={'Today'} />\n        {overdueTodoList.length ? (\n          <div className=\"list md overdue-list\">\n            <h2>\n              Overdue <RiPushpin2Line className=\"pin-icon\" />\n            </h2>\n            <TodoList todosToday={sortedOverdueTodoList} isOverdueList />\n            <span className=\"no-todo-message\">{showNoTodoMessage(true)}</span>\n          </div>\n        ) : null}\n        <div className=\"list md\">\n          <TodoList todosToday={sortedTodosToday} />\n          <span className=\"no-todo-message\">{showNoTodoMessage()}</span>\n        </div>\n      </div>\n      <div className=\"side-display\"></div>\n    </div>\n  );\n}\n\nexport default Daily;\n","import React, { useContext } from 'react';\nimport HeaderShared from '../components/shared/HeaderShared';\nimport TodoList from '../components/shared/TodoList.jsx';\nimport { RiPushpin2Line } from 'react-icons/ri';\nimport { GlobalContext } from '../contexts/GlobalState';\n\nfunction Weekly() {\n  const { today, sortedTodoList, overdueTodoList, sortedOverdueTodoList } = useContext(GlobalContext);\n\n  const generateTodos = (todos, counter) => {\n    return todos.filter(\n      (todo) =>\n        todo.dateInfo.year === today.year &&\n        todo.dateInfo.month === today.month &&\n        todo.dateInfo.date === today.date + counter\n    );\n  };\n\n  let thisWeek = [];\n  for (let i = 0; i < 7; i++) {\n    const nextDayConstructor = new Date(today.year, today.month, today.date + i);\n\n    const eachDay = {\n      dateInfo: {\n        year: nextDayConstructor.getFullYear(),\n        month: nextDayConstructor.getMonth(),\n        date: nextDayConstructor.getDate(),\n        day: nextDayConstructor.toLocaleString('default', { weekday: 'long' })\n      },\n      todos: generateTodos(sortedTodoList, i)\n    };\n\n    thisWeek.push(eachDay);\n  }\n\n  thisWeek[0].dateInfo.day = 'Today';\n  thisWeek[1].dateInfo.day = 'Tomorrow';\n\n  const getOrdinalNum = function (eachDay) {\n    if (eachDay.dateInfo > 3 && eachDay.dateInfo < 21) return 'th';\n    switch (eachDay.dateInfo % 10) {\n      case 1:\n        return 'st';\n      case 2:\n        return 'nd';\n      case 3:\n        return 'rd';\n      default:\n        return 'th';\n    }\n  };\n\n  return (\n    <div className=\"weekly\">\n      <div className=\"main-display container\">\n        <HeaderShared title={'Weekly'} />\n\n        <div className=\"weekly-list\">\n          {overdueTodoList.length ? (\n            <div className=\"list sm overdue-list\">\n              <h2>\n                Overdue <RiPushpin2Line className=\"pin-icon\" />\n              </h2>\n\n              <TodoList todosToday={sortedOverdueTodoList} isOverdueList />\n            </div>\n          ) : null}\n\n          {thisWeek.map((eachDay) => (\n            <div key={eachDay.dateInfo.date} className=\"list sm\">\n              <h2>\n                {eachDay.dateInfo.day} <span className=\"date\">{eachDay.dateInfo.date}</span>\n                <span className=\"date-ordinal\">{getOrdinalNum(eachDay.dateInfo)}</span>\n              </h2>\n\n              <TodoList todosToday={eachDay.todos} />\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"side-display\"></div>\n    </div>\n  );\n}\n\nexport default Weekly;\n","import React, { useContext } from 'react';\nimport SelectView from '../shared/SelectView';\nimport AddNewTodoForm from '../shared/AddNewTodoForm.jsx';\nimport * as MdIcons from 'react-icons/md';\nimport { FiPlus } from 'react-icons/fi';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction HeaderMonthly({ currentMonthName, selectedYear, moveToPrevMonth, moveToNextMonth, goBackToToday }) {\n  const { isAddNewTodoClicked, toggleIsAddNewTodoClicked } = useContext(GlobalContext);\n\n  return (\n    <div className=\"header\">\n      <div className=\"row-1\">\n        <div className=\"row-1__1\">\n          <h1 className=\"title\">{currentMonthName}</h1>\n        </div>\n\n        <div className=\"row-1__2 arrows\">\n          <MdIcons.MdKeyboardArrowLeft className=\"arrow arrow-back\" onClick={moveToPrevMonth} />\n          <MdIcons.MdKeyboardArrowRight className=\"arrow arrow-next\" onClick={moveToNextMonth} />\n        </div>\n\n        <div className=\"row-1__3\">\n          <SelectView />\n        </div>\n      </div>\n\n      <div className=\"row-2-col-2\">\n        <FiPlus className=\"add-new-todo-icon\" onClick={toggleIsAddNewTodoClicked} />\n        {isAddNewTodoClicked ? <AddNewTodoForm /> : null}\n      </div>\n\n      <div className=\"row-2-col-1\">\n        <span className=\"this-year\">{selectedYear}</span>\n        <button className=\"today-btn\" onClick={goBackToToday}>\n          today\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderMonthly;\n","import React, { useContext } from 'react';\nimport { CgTrash } from 'react-icons/cg';\nimport { AiOutlineMore } from 'react-icons/ai';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction InnerList({ todo }) {\n  const { toggleComplete, removeTodo } = useContext(GlobalContext);\n\n  return (\n    <li className=\"inner-ul__list todo-item flex v-center\">\n      <div className=\"col-1\">\n        <span\n          className={`checkbox ${todo.type} ${todo.completed ? 'completed ' : ''}`}\n          onClick={() => toggleComplete(todo.id)}\n        ></span>\n      </div>\n      <div className=\"col-2\">\n        <span className={`task ${todo.completed ? 'grey-out' : ''}`}>{todo.task}</span>\n        <div className=\"more\">\n          <CgTrash onClick={() => removeTodo(todo.id)} />\n          <AiOutlineMore />\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default InnerList;\n","import React from 'react';\nimport InnerList from './InnerList';\n\nfunction OuterList({ eachDay }) {\n  return (\n    <li className=\"outer-ul__list\" data-id={eachDay[0].dateInfo.date}>\n      <div className=\"row-1\">\n        <span className=\"date\">{eachDay[0].dateInfo.date}</span>\n        <span className=\"day\">{eachDay[0].dateInfo.day}</span>\n      </div>\n\n      <ul className=\"row-2 inner-ul\">\n        {eachDay.map((todo) => (\n          <InnerList key={todo.id} todo={todo} />\n        ))}\n      </ul>\n    </li>\n  );\n}\n\nexport default OuterList;\n","import React, { useContext } from 'react';\nimport OuterList from './OuterList';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport _ from 'lodash';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction MonthlyList({ currentMonthName, selectedYear, selectedMonth }) {\n  const { todoList } = useContext(GlobalContext);\n\n  const todosByYear = _.groupBy(todoList, 'dateInfo.year');\n  const todosThisYear = todosByYear[`${selectedYear}`] || [];\n  const todoThisMonth = todosThisYear.filter((todo) => todo.dateInfo.month === selectedMonth);\n\n  const todosEachDay = Object.values(\n    todoThisMonth.reduce((acc, current) => {\n      if (acc[current.dateInfo.date]) {\n        acc[current.dateInfo.date].push(current);\n      } else {\n        acc[current.dateInfo.date] = [current];\n      }\n      return acc;\n    }, {})\n  );\n\n  //or\n  //   const todosByDate = _.groupBy(todoThisMonth, 'dateInfo.date');\n  //   let todosEachDay = [];\n  //   for (let x in todosByDate) {\n  //     todosEachDay.push(todosByDate[x]);\n  //   }\n\n  return (\n    <div className=\"monthly-list\">\n      <form action=\"\" onClick={(e) => e.preventDefault()}>\n        <AiOutlineSearch className=\"search-icon\" />\n        <input type=\"text\" placeholder=\"Search\" />\n      </form>\n\n      <h2 className=\"title\">\n        {currentMonthName}\n        <span className=\"todos-length\">({todoThisMonth.length})</span>\n      </h2>\n\n      <ul className=\"outer-ul\">\n        {todosEachDay.map((eachDay) => (\n          <OuterList key={eachDay[0].id} eachDay={eachDay} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default MonthlyList;\n","import React, { useState, useRef, useContext } from 'react';\nimport useOnClickOutside from '../../utils/useOnClickOutside';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction CalendarDate({ date, dateInfo, className }) {\n  const { todoList } = useContext(GlobalContext);\n  const [selected, setSelected] = useState(false);\n  const todos = todoList.filter((todo) => {\n    return (\n      todo.dateInfo.year === dateInfo.year &&\n      todo.dateInfo.month === dateInfo.month &&\n      todo.dateInfo.date === dateInfo.date\n    );\n  });\n\n  const dateRef = useRef();\n  const toggleSelected = () => {\n    if (todos.length) return;\n    setSelected(!selected);\n  };\n\n  useOnClickOutside(dateRef, () => setSelected(false));\n\n  return (\n    <span\n      ref={dateRef}\n      data-id={dateInfo.date}\n      className={`${className} ${selected ? 'no-todo-message' : ''}`}\n      onClick={toggleSelected}\n    >\n      {date}\n    </span>\n  );\n}\n\nexport default CalendarDate;\n","import React from 'react';\nimport showCalendar from '../../utils/showCalendar';\n\nfunction Calendar({ selectedYear, selectedMonth }) {\n  const daysArray = ['M', 'T', 'W', 'T', 'F', 'S', 'S'];\n\n  return (\n    <div className=\"calendar\">\n      <div className=\"calendar__header\">\n        {daysArray.map((day, index) => (\n          <span key={index}>{day}</span>\n        ))}\n      </div>\n\n      {showCalendar(selectedYear, selectedMonth)}\n    </div>\n  );\n}\n\nexport default Calendar;\n","import React from 'react';\nimport CalendarDate from '../components/monthly/CalendarDate';\n\nexport default (selectedYear, selectedMonth) => {\n  const renderDate = (date, dateInfo, className) => {\n    return <CalendarDate key={date} date={date} dateInfo={dateInfo} className={className} />;\n  };\n\n  const today = new Date();\n  let firstDay = new Date(selectedYear, selectedMonth).getDay() - 1; // starting on Mon as index 0\n  if (firstDay === -1) firstDay = 6; // convert Sun index( 0-1 = -1 ) to 6\n  const daysInMonth = (selectedYear, selectedMonth) => {\n    return 32 - new Date(selectedYear, selectedMonth, 32).getDate();\n  };\n\n  const weeks = [];\n  const getDatePrevMonth = 1 - firstDay;\n  let date = 1;\n  let datePrevMonth = new Date(selectedYear, selectedMonth, getDatePrevMonth).getDate();\n  let dateNextMonth = 1;\n\n  // render 6 rows with 7 columns of calendar\n  for (let i = 0; i < 6; i++) {\n    const row = [];\n\n    for (let j = 0; j < 7; j++) {\n      let dateInfo = { year: selectedYear, month: selectedMonth, date };\n      let className;\n\n      // render last days of prev month\n      if (i === 0 && j < firstDay) {\n        dateInfo.date = datePrevMonth;\n        dateInfo.month = selectedMonth - 1 === -1 ? 11 : selectedMonth - 1;\n        dateInfo.year = dateInfo.month === 11 ? selectedYear - 1 : selectedYear;\n        className = 'date date-prev-month';\n\n        row.push(renderDate(datePrevMonth, dateInfo, className));\n        datePrevMonth++;\n      }\n\n      // render first days of next month\n      else if (date > daysInMonth(selectedYear, selectedMonth)) {\n        dateInfo.date = dateNextMonth;\n        dateInfo.month = selectedMonth + 1 === 12 ? 0 : selectedMonth + 1;\n        dateInfo.year = dateInfo.month === 0 ? selectedYear + 1 : selectedYear;\n        className = 'date date-next-month';\n\n        row.push(renderDate(dateNextMonth, dateInfo, className));\n        dateNextMonth += 1;\n      }\n\n      // render dates of this month\n      else {\n        className = j === 5 || j === 6 ? 'date weekend ' : 'date';\n        if (\n          date === today.getDate() &&\n          selectedYear === today.getFullYear() &&\n          selectedMonth === today.getMonth()\n        ) {\n          className += ' today show-message-box';\n        }\n        row.push(renderDate(date, dateInfo, className));\n        date++;\n      }\n    }\n\n    weeks.push(\n      <div key={i} className={'calendar__week week-' + i}>\n        {row}\n      </div>\n    );\n  }\n\n  return weeks;\n};\n","import React, { useState, useContext, useRef } from 'react';\nimport HeaderMonthly from '../components/monthly/HeaderMonthly';\nimport MonthlyList from '../components/monthly/MonthlyList';\nimport Calendar from '../components/monthly/Calendar';\nimport { GlobalContext } from '../contexts/GlobalState';\n\nfunction Monthly() {\n  const { today } = useContext(GlobalContext);\n  const [selectedYear, setSelectedYear] = useState(today.year);\n  const [selectedMonth, setSelectedMonth] = useState(today.month);\n  const currentMonthName = new Date(selectedYear, selectedMonth).toLocaleString('default', { month: 'long' });\n  const parent = useRef();\n\n  const moveToPrevMonth = () => {\n    if (selectedMonth === 0) {\n      setSelectedYear((prev) => prev - 1);\n      setSelectedMonth(12);\n    }\n    setSelectedMonth((prev) => prev - 1);\n  };\n\n  const moveToNextMonth = () => {\n    if (selectedMonth === 11) {\n      setSelectedYear((prev) => prev + 1);\n    }\n\n    setSelectedMonth((prev) => (prev + 1) % 12);\n  };\n\n  const goBackToToday = () => {\n    setSelectedYear(today.year);\n    setSelectedMonth(today.month);\n  };\n\n  const handleDateScroll = (e) => {\n    const HTMLCollection = parent.current.childNodes[1].childNodes[2].children;\n    const refList = [...HTMLCollection];\n    const listToScroll = refList.find(\n      (list) => list.getAttribute('data-id') === e.target.getAttribute('data-id')\n    );\n\n    if (listToScroll) listToScroll.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <div className=\"monthly\">\n      <div className=\"main-display container\">\n        <HeaderMonthly\n          currentMonthName={currentMonthName}\n          selectedYear={selectedYear}\n          moveToPrevMonth={moveToPrevMonth}\n          moveToNextMonth={moveToNextMonth}\n          goBackToToday={goBackToToday}\n        />\n        <div className=\"main\" ref={parent} onClick={handleDateScroll}>\n          <Calendar selectedYear={selectedYear} selectedMonth={selectedMonth} />\n          <MonthlyList\n            currentMonthName={currentMonthName}\n            selectedYear={selectedYear}\n            selectedMonth={selectedMonth}\n          />\n        </div>\n      </div>\n      <div className=\"side-display\"></div>\n    </div>\n  );\n}\n\nexport default Monthly;\n","import React, { useState, useEffect } from 'react';\nimport './styles/App.scss';\nimport Nav from './components/shared/Nav';\nimport Home from './pages/Home';\nimport Daily from './pages/Daily';\nimport Weekly from './pages/Weekly';\nimport Monthly from './pages/Monthly';\nimport { Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  // window resize for all pages\n  let [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n\n    let vh = windowSize.height * 0.01;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [windowSize]);\n\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/daily\" component={Daily} />\n        <Route exact path=\"/weekly\" component={Weekly} />\n        <Route exact path=\"/monthly\" component={Monthly} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport { GlobalContextProvider } from './contexts/GlobalState';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter basename=\"/\">\n    <GlobalContextProvider>\n      <App />\n    </GlobalContextProvider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}