{"version":3,"sources":["assets/icons/adjust.svg","utils/sampleTodoList.js","contexts/GlobalState.js","components/shared/Nav.jsx","components/home/TimeDisplay.jsx","components/todo-form/NewTodo.jsx","components/todo-form/DateInput.jsx","components/shared/AddNewTodoForm.jsx","animations/todoListAnimation.js","components/shared/TodoItem.jsx","animations/homeAnimation.js","components/home/HomeMain.jsx","utils/utils.js","pages/Home.jsx","utils/useUnmount.js","components/shared/TodoList.jsx","components/shared/SelectView.jsx","components/shared/SelectSort.jsx","components/shared/HeaderShared.jsx","pages/Daily.jsx","pages/Weekly.jsx","components/monthly/HeaderMonthly.jsx","components/monthly/InnerList.jsx","components/monthly/OuterList.jsx","components/monthly/MonthlyList.jsx","components/monthly/CalendarDate.jsx","utils/useOnClickOutside.js","components/monthly/Calendar.jsx","utils/showCalendar.js","pages/Monthly.jsx","App.jsx","serviceWorker.js","index.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","createElement","d","fill","_ref3","_ref4","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","todoTypes","Date","sampleTasks","map","task","index","randomDate","randomType","getDate","Math","floor","random","id","shortid","generate","timestamp","getTime","type","completed","dateInfo","year","getFullYear","month","getMonth","date","day","toLocaleString","weekday","GlobalContext","createContext","GlobalContextProvider","today","monthName","initialTodoList","JSON","parse","localStorage","getItem","sampleTodoList","useState","todoList","setTodoList","useEffect","setItem","stringify","initialSort","selectedSort","setSelectedSort","sortedTodoList","sort","a","b","ordering","sortOrder","filter","todo","generateTodos","todos","unsortedTodosToday","sortedTodosToday","msMidnight","overdueTodoList","sortedOverdueTodoList","initialView","selectedView","setSelectedView","isAddNewTodoClicked","setIsAddNewTodoClicked","value","addTodo","newTodo","removeTodo","updatedTodo","toggleComplete","updateSelectedSort","newSort","updateSelectedView","newValue","showAddNewTodoForm","hideAddNewTodoForm","Provider","children","Nav","useContext","Links","path","icon","className","link","exact","to","activeClassName","TimeDisplay","hour","getHours","minute","getMinutes","currentTime","setCurrentTime","timeId","setTimeout","getSeconds","clearTimeout","NewTodo","handleInputChange","isColorBoxClicked","selectTypeColor","showSelectTypeColorDropDown","handleSelectType","inputRef","useRef","current","focus","onChange","placeholder","onClick","colorType","SelectColorTypeList","data-color-type","DateInput","startDate","handleDateSelect","handleDateChange","selected","onSelect","showTimeInput","showWeekNumbers","shouldCloseOnSelect","timeInputLabel","AddNewTodoForm","setIsColorBoxClicked","setStartDate","setTodo","action","onSubmit","e","preventDefault","trim","stopPropagation","dataset","todoListAnimation","gsap","timeline","duration","ease","y","opacity","stagger","amount","TodoItem","homeAnimation","delay","HomeMain","todoIndex","setTodoIndex","homeMainDivRef","homeMainDivTouching","setHomeMainDivTouching","todoToday","focusOnThisTodo","getBoundingClientRect","top","window","innerHeight","style","position","left","transform","prev","n","m","InitialMessage","Home","useUnmount","TodoList","size","todosToday","isOverdueList","message","unSortedTodos","sortedTodos","showNoTodoMessage","withRouter","history","location","currentView","pathname","slice","push","SelectSort","HeaderShared","Daily","Weekly","counter","thisWeek","nextDayConstructor","eachDay","getOrdinalNum","HeaderMonthly","currentMonthName","selectedYear","moveToPrevMonth","moveToNextMonth","goBackToToday","InnerList","OuterList","data-id","MonthlyList","selectedMonth","todoThisMonth","_","groupBy","todosEachDay","values","reduce","acc","CalendarDate","handler","setSelected","dateRef","React","listener","contains","document","addEventListener","removeEventListener","Calendar","renderDate","firstDay","getDay","daysInMonth","weeks","datePrevMonth","dateNextMonth","row","j","showCalendar","Monthly","setSelectedYear","setSelectedMonth","parent","HTMLCollection","childNodes","listToScroll","find","list","getAttribute","scrollIntoView","behavior","App","innerWidth","windowSize","setWindowSize","handleResize","vh","documentElement","setProperty","component","Boolean","hostname","match","ReactDOM","render","basename","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console"],"mappings":"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","file":"static/js/main.bc161235.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M4.04813 4.26933V1.11511H2.64188V4.26933H0V9.76683H2.64188V22.8848H4.04813V9.76683H6.68953V4.26933H4.04813ZM5.28328 8.36058H1.40625V5.67558H5.28328V8.36058Z\",\n  fill: \"black\"\n});\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M12.7032 10.8248V1.11511H11.2969V10.8248H8.65503V16.3228H11.2969V22.8848H12.7032V16.3228H15.345V10.8248H12.7032ZM13.9388 14.9165H10.0613V12.231H13.9388V14.9165Z\",\n  fill: \"black\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  d: \"M21.3581 4.26933V1.11511H19.9518V4.26933H17.3104V9.76683H19.9518V22.8848H21.3581V9.76683H24V4.26933H21.3581ZM22.5937 8.36058H18.7167V5.67558H22.5937V8.36058Z\",\n  fill: \"black\"\n});\n\nvar SvgAdjust = function SvgAdjust(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    width: 17,\n    height: 17,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgAdjust, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/adjust.ed4b8ae6.svg\";\nexport { ForwardRef as ReactComponent };","import shortid from 'shortid';\n\n// sample todoList\n// prettier-ignore\nconst sampleTasks = [\"Daily web development\", \"Get groceries for dinner\", \"Home exercise at 6pm\", \"Call Daniel for meeting\", \"House cleaning\", \"Tennis practice\", \"Do lundary\", \"Email Noah for update\", \"Finish monthly growth report\", \"Send in cacenllation letter\", \"Figure out vacation destination\", \"Fill in scholarship application\" ]\nconst todoTypes = ['important', 'work', 'study', 'other'];\nconst d = new Date();\n\nexport default sampleTasks.map((task, index) => {\n  let randomDate;\n  let randomType;\n  if (index < 2) {\n    randomDate = d.getDate();\n    randomType = todoTypes[0];\n  } else {\n    randomDate = d.getDate() + Math.floor(Math.random() * 7);\n    randomType = todoTypes[Math.floor(Math.random() * 4)];\n  }\n\n  return {\n    id: shortid.generate(),\n    task: task,\n    timestamp: d.getTime(),\n    type: randomType,\n    completed: Math.random() >= 0.5,\n    dateInfo: {\n      year: d.getFullYear(),\n      month: d.getMonth(),\n      date: randomDate,\n      day: new Date(d.getFullYear(), d.getMonth(), randomDate).toLocaleString('default', { weekday: 'long' })\n    }\n  };\n});\n","import React, { useState, useEffect, createContext } from 'react';\nimport sampleTodoList from '../utils/sampleTodoList';\n\nexport const GlobalContext = createContext();\n\nexport const GlobalContextProvider = (props) => {\n  // today\n  let today = {\n    year: new Date().getFullYear(),\n    month: new Date().getMonth(),\n    monthName: new Date().toLocaleString('default', { month: 'short' }),\n    date: new Date().getDate(),\n    day: new Date().toLocaleString('default', { weekday: 'short' })\n  };\n\n  // todoList state\n  const initialTodoList = JSON.parse(localStorage.getItem('to-do-list')) || sampleTodoList;\n  const [todoList, setTodoList] = useState(initialTodoList);\n\n  useEffect(() => {\n    localStorage.setItem('to-do-list', JSON.stringify(todoList));\n  }, [todoList]);\n\n  const addTodo = (newTodo) => {\n    setTodoList([...todoList, newTodo]);\n  };\n\n  const removeTodo = (id) => {\n    const updatedTodo = todoList.filter((todo) => id !== todo.id);\n    setTodoList(updatedTodo);\n  };\n\n  const toggleComplete = (id) => {\n    const updatedTodo = todoList.map((todo) => {\n      if (id === todo.id) {\n        return { ...todo, completed: !todo.completed };\n      }\n      return todo;\n    });\n\n    setTodoList(updatedTodo);\n  };\n\n  // sort state (recent / tag / oldest / completed / active)\n  const initialSort = JSON.parse(localStorage.getItem('sort-value')) || 'oldest';\n  const [selectedSort, setSelectedSort] = useState(initialSort);\n\n  useEffect(() => {\n    localStorage.setItem('sort-value', JSON.stringify(selectedSort));\n  }, [selectedSort]);\n\n  const updateSelectedSort = (newSort) => {\n    setSelectedSort(newSort);\n  };\n\n  // sorted todoList\n  let sortedTodoList;\n  if (selectedSort === 'oldest') {\n    sortedTodoList = todoList.sort((a, b) => {\n      return a.timestamp - b.timestamp;\n    });\n  } else if (selectedSort === 'newest') {\n    sortedTodoList = todoList.sort((a, b) => {\n      return b.timestamp - a.timestamp;\n    });\n  } else if (selectedSort === 'tag') {\n    const ordering = {};\n    const sortOrder = ['important', 'work', 'study', 'other'];\n    for (let i = 0; i < sortOrder.length; i++) {\n      ordering[sortOrder[i]] = i;\n    }\n    sortedTodoList = todoList.sort((a, b) => {\n      return ordering[a.type] - ordering[b.type];\n    });\n  } else if (selectedSort === 'completed') {\n    sortedTodoList = todoList.filter((todo) => todo.completed);\n  } else if (selectedSort === 'active') {\n    sortedTodoList = todoList.filter((todo) => !todo.completed);\n  }\n\n  const generateTodos = (todos) => {\n    return todos.filter(\n      (todo) =>\n        todo.dateInfo.year === today.year &&\n        todo.dateInfo.month === today.month &&\n        todo.dateInfo.date === today.date\n    );\n  };\n\n  const unsortedTodosToday = generateTodos(todoList);\n  const sortedTodosToday = generateTodos(sortedTodoList);\n\n  // overdue todolist state\n  const msMidnight = new Date(today.year, today.month, today.date, 0, 0, 0).getTime();\n  const overdueTodoList = todoList.filter((todo) => todo.timestamp < msMidnight);\n  const sortedOverdueTodoList = sortedTodoList.filter((todo) => todo.timestamp < msMidnight);\n\n  // view state (daily / weekly / monthly)\n  const initialView = JSON.parse(localStorage.getItem('selected-view')) || 'daily';\n  const [selectedView, setSelectedView] = useState(initialView);\n\n  useEffect(() => {\n    localStorage.setItem('selected-view', JSON.stringify(selectedView));\n  }, [selectedView]);\n\n  const updateSelectedView = (newValue) => {\n    setSelectedView(newValue);\n  };\n\n  // isAddNewTodoClicked state\n  const [isAddNewTodoClicked, setIsAddNewTodoClicked] = useState(false);\n\n  const showAddNewTodoForm = () => {\n    setIsAddNewTodoClicked(!isAddNewTodoClicked);\n  };\n\n  const hideAddNewTodoForm = () => {\n    if (isAddNewTodoClicked) {\n      setIsAddNewTodoClicked(!isAddNewTodoClicked);\n    }\n  };\n\n  // global states\n  const value = {\n    today, // HomeMain, TimeDisplay, Daily, Weekly, Monthly, AddNewTodoForm\n    todoList, // HomeMain, MonthlyList, Daily\n    addTodo, // AddNewTodoForm\n    removeTodo, // TodoItem, InnerList\n    toggleComplete, // TodoItem, InnerList\n    selectedSort, // SelectSort, Daily, Weekly\n    updateSelectedSort, // SelectSort\n    sortedTodoList, // Daily, Weekly\n    unsortedTodosToday, // TodoList\n    sortedTodosToday, // Daily, TodoList\n    overdueTodoList, // Daily, Weekly, TodoList\n    sortedOverdueTodoList, // Daily, TodoList\n    selectedView, // Nav, SelectView\n    updateSelectedView, // SelectView\n    isAddNewTodoClicked, // HomeMain, AddNewTodoForm\n    setIsAddNewTodoClicked, // AddNewTodoForm\n    showAddNewTodoForm, // HomeMain, HeaderShared, HeaderMonthly\n    hideAddNewTodoForm // HomeMain, Daily, Weekly, Monthly, useUnmount.js\n  };\n\n  return <GlobalContext.Provider value={value}>{props.children}</GlobalContext.Provider>;\n};\n","import React, { useContext } from 'react';\nimport { NavLink } from 'react-router-dom';\nimport { ReactComponent as Adjust } from '../../assets/icons/adjust.svg';\nimport * as AiIcons from 'react-icons/ai';\nimport { FiInbox } from 'react-icons/fi';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction Nav() {\n  const { selectedView } = useContext(GlobalContext);\n\n  const Links = [\n    {\n      path: `/${selectedView}`,\n      icon: <AiIcons.AiOutlineUnorderedList />\n    },\n    {\n      path: '/inbox',\n      icon: <FiInbox />\n    },\n    { path: '/', icon: <AiIcons.AiOutlineStar /> }\n  ];\n\n  return (\n    <nav className=\"nav container flex\">\n      <ul className=\"left flex\">\n        {Links.map((link) => (\n          <li key={link.path}>\n            <NavLink exact to={link.path} className=\"icon flex center\" activeClassName=\" selected\">\n              {link.icon}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n\n      <ul className=\"right flex\">\n        <li>\n          <NavLink exact to=\"/adjust\" className=\"icon flex center\" activeClassName=\" selected\">\n            <Adjust />\n          </NavLink>\n        </li>\n        <li>\n          <NavLink exact to=\"/search\" className=\"icon flex center\" activeClassName=\" selected\">\n            <AiIcons.AiOutlineSearch />\n          </NavLink>\n        </li>\n      </ul>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React, { useState, useEffect, useContext } from 'react';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction TimeDisplay() {\n  const { today } = useContext(GlobalContext);\n  const [currentTime, setCurrentTime] = useState({\n    hour: new Date().getHours(),\n    minute: new Date().getMinutes()\n  });\n\n  useEffect(() => {\n    let timeId = setTimeout(() => {\n      setCurrentTime({\n        hour: new Date().getHours(),\n        minute: new Date().getMinutes()\n      });\n    }, 60000 - 1000 * new Date().getSeconds());\n\n    return () => {\n      clearTimeout(timeId);\n    };\n  }, [currentTime.minute]);\n\n  return (\n    <div className=\"time-display\">\n      <div className=\"time\">\n        {`${currentTime.hour < 10 ? '0' + currentTime.hour : currentTime.hour}:${\n          currentTime.minute < 10 ? '0' + currentTime.minute : currentTime.minute\n        }`}\n      </div>\n      <div className=\"day\">\n        {today.day}, {today.monthName}\n        <span className=\"date\">{today.date}</span>\n      </div>\n    </div>\n  );\n}\n\nexport default TimeDisplay;\n","import React, { useEffect, useRef } from 'react';\nimport { RiArrowDropDownLine } from 'react-icons/ri';\nimport { CgCheck } from 'react-icons/cg';\n\nfunction NewTodo({\n  handleInputChange,\n  todo,\n  isColorBoxClicked,\n  selectTypeColor,\n  showSelectTypeColorDropDown,\n  handleSelectType\n}) {\n  const selectTypeColorList = ['important', 'work', 'study', 'other'];\n  const inputRef = useRef();\n\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  return (\n    <div className=\"new-task-box flex v-center\">\n      <input\n        ref={inputRef}\n        type=\"text\"\n        onChange={handleInputChange}\n        value={todo.task}\n        placeholder=\"New task\"\n        className=\"text-input\"\n      />\n\n      <div className=\"select-type-container\">\n        <ul className=\"select-type-default-ul\" onClick={showSelectTypeColorDropDown}>\n          <li>\n            <span className={`color-box ${selectTypeColor}`}></span>\n            <span className=\"arrow-down\">\n              <RiArrowDropDownLine />\n            </span>\n          </li>\n        </ul>\n\n        <ul\n          className={`select-type-dropdown-ul ${isColorBoxClicked ? 'show-dropdown' : ''}`}\n          onClick={handleSelectType}\n        >\n          {selectTypeColorList.map((colorType) => (\n            <SelectColorTypeList key={colorType} selectTypeColor={selectTypeColor} colorType={colorType} />\n          ))}\n        </ul>\n      </div>\n    </div>\n  );\n}\n\nexport default NewTodo;\n\nfunction SelectColorTypeList({ selectTypeColor, colorType }) {\n  return (\n    <li data-color-type={colorType}>\n      <span className=\"checked-icon-container\">{selectTypeColor === colorType ? <CgCheck /> : null}</span>\n      <span className={'color-box ' + colorType}></span>\n      <span>{colorType}</span>\n    </li>\n  );\n}\n","import React from 'react';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\n\nfunction DateInput({ startDate, handleDateSelect, handleDateChange }) {\n  return (\n    <div>\n      <DatePicker\n        selected={startDate}\n        onChange={handleDateChange}\n        onSelect={handleDateSelect}\n        showTimeInput\n        showWeekNumbers\n        shouldCloseOnSelect={false}\n        timeInputLabel=\"Time:\"\n      />\n    </div>\n  );\n}\n\nexport default DateInput;\n","import React, { useState, useContext } from 'react';\nimport shortid from 'shortid';\nimport NewTodo from '../todo-form/NewTodo';\nimport DateInput from '../todo-form/DateInput';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction AddNewTodoForm() {\n  const { today, isAddNewTodoClicked, setIsAddNewTodoClicked, addTodo } = useContext(GlobalContext);\n  const [isColorBoxClicked, setIsColorBoxClicked] = useState(false);\n  const [startDate, setStartDate] = useState(new Date());\n  const [todo, setTodo] = useState({\n    id: null,\n    task: '',\n    timestamp: null,\n    type: 'important',\n    completed: false,\n    dateInfo: {\n      year: today.year,\n      month: today.month,\n      date: today.date,\n      day: today.day\n    }\n  });\n\n  const handleInputChange = (e) => {\n    setTodo({\n      ...todo,\n      task: e.target.value\n    });\n  };\n\n  const showSelectTypeColorDropDown = () => {\n    setIsColorBoxClicked(!isColorBoxClicked);\n  };\n\n  const handleSelectType = (e) => {\n    setIsColorBoxClicked(!isColorBoxClicked);\n    setTodo({\n      ...todo,\n      type: e.target.dataset.colorType\n    });\n  };\n\n  const handleDateChange = (e) => {\n    setTodo({\n      ...todo,\n      dateInfo: {\n        year: e.getFullYear(),\n        month: e.getMonth(),\n        date: e.getDate(),\n        day: e.toLocaleString('default', { weekday: 'long' })\n      }\n    });\n  };\n\n  const handleDateSelect = (e) => {\n    setStartDate(e);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newTodo = {\n      ...todo,\n      id: shortid.generate(),\n      task: todo.task,\n      timestamp: new Date().getTime()\n    };\n\n    if (todo.task.trim()) {\n      addTodo(newTodo);\n    }\n    setTodo({ ...todo, task: '' });\n    setIsAddNewTodoClicked(!isAddNewTodoClicked);\n  };\n\n  return (\n    <form\n      action=\"\"\n      onSubmit={handleSubmit}\n      onClick={(e) => {\n        e.stopPropagation();\n      }}\n      className={`add-new-todo-form ${isAddNewTodoClicked ? ' show-add-new-todo-form' : ''}`}\n    >\n      <NewTodo\n        handleInputChange={handleInputChange}\n        todo={todo}\n        isColorBoxClicked={isColorBoxClicked}\n        selectTypeColor={todo.type}\n        showSelectTypeColorDropDown={showSelectTypeColorDropDown}\n        handleSelectType={handleSelectType}\n      />\n      <DateInput\n        startDate={startDate}\n        handleDateChange={handleDateChange}\n        handleDateSelect={handleDateSelect}\n      />\n\n      <button className=\"submit\" type=\"submit\">\n        Add new task\n      </button>\n    </form>\n  );\n}\n\nexport default AddNewTodoForm;\n","import gsap from 'gsap';\n\nconst todoListAnimation = () => {\n  const tl = gsap.timeline();\n\n  tl.to(\n    '.todo-item',\n    {\n      duration: 1,\n      ease: 'power4.out',\n      y: 0,\n      opacity: 1,\n      stagger: { amount: 0.4 }\n    },\n    0.1\n  );\n};\n\nexport default todoListAnimation;\n","import React, { useContext, useEffect } from 'react';\nimport todoListAnimation from '../../animations/todoListAnimation';\nimport { CgTrash } from 'react-icons/cg';\nimport { AiOutlineMore } from 'react-icons/ai';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction TodoItem({ todo }) {\n  const { removeTodo, toggleComplete } = useContext(GlobalContext);\n\n  useEffect(() => {\n    todoListAnimation();\n  }, [todo]);\n\n  return (\n    <li className=\"todo-item flex v-center\">\n      <div>\n        <span className={`type-bar ${todo.type}`}></span>\n      </div>\n      <div>\n        <span\n          className={`checkbox ${todo.completed ? 'completed ' + todo.type : ''}`}\n          onClick={() => toggleComplete(todo.id)}\n        ></span>\n      </div>\n      <div>\n        <span className=\"task\">{todo.task}</span>\n      </div>\n      <div className=\"more\">\n        <CgTrash onClick={() => removeTodo(todo.id)} />\n        <AiOutlineMore />\n      </div>\n    </li>\n  );\n}\n\nexport default TodoItem;\n","import gsap from 'gsap';\n\nconst homeAnimation = () => {\n  const tl = gsap.timeline();\n\n  tl.to('.initial-message', {\n    duration: 0.8,\n    ease: 'power4.out',\n    y: 0,\n    opacity: 1\n  }).to('.point-down-icon', {\n    duration: 0.5,\n    opacity: 1,\n    delay: -0.5\n  });\n};\n\nexport default homeAnimation;\n","import React, { useContext, useState, useEffect, useRef } from 'react';\nimport { mod } from '../../utils/utils';\nimport AddNewTodoForm from '../shared/AddNewTodoForm';\nimport TodoItem from '../shared/TodoItem';\nimport * as MdIcons from 'react-icons/md';\nimport { FaRegHandPointDown } from 'react-icons/fa';\nimport homeAnimation from '../../animations/homeAnimation';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction HomeMain() {\n  const { today, todoList, isAddNewTodoClicked, showAddNewTodoForm, hideAddNewTodoForm } = useContext(\n    GlobalContext\n  );\n\n  const [todoIndex, setTodoIndex] = useState(0);\n  const homeMainDivRef = useRef();\n  const [homeMainDivTouching, setHomeMainDivTouching] = useState(false);\n\n  const todoToday = todoList.filter(\n    (todo) =>\n      todo.dateInfo.year === today.year &&\n      todo.dateInfo.month === today.month &&\n      todo.dateInfo.date === today.date\n  );\n  const focusOnThisTodo = todoToday[todoIndex];\n\n  const getPrevTodo = () => {\n    setTodoIndex((prev) => mod(prev - 1, todoToday.length));\n  };\n\n  const getNextTodo = () => {\n    setTodoIndex((prev) => (prev + 1) % todoToday.length);\n  };\n\n  const absoluteCenter = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  };\n\n  useEffect(() => {\n    if (homeMainDivRef.current) {\n      const currentTop = homeMainDivRef.current.getBoundingClientRect().top;\n      // nav-height-bg 72px + time-display 50px = 130\n      // set the div to display block so that\n      // it stays below time display when shrinking small\n      if (currentTop < 130) {\n        setHomeMainDivTouching(true);\n        if (window.innerHeight > 544) {\n          setHomeMainDivTouching(false);\n        }\n      }\n    }\n  }, []);\n\n  return (\n    <>\n      <div className=\"home-main-container\">\n        <div\n          className={`home-main flex center ${isAddNewTodoClicked ? 'z-index' : ''}`}\n          ref={homeMainDivRef}\n          style={homeMainDivTouching ? null : absoluteCenter}\n        >\n          {focusOnThisTodo ? (\n            <>\n              <h1 className=\"title\">Focus on this now</h1>\n              <TodoItem key={focusOnThisTodo.id} todo={focusOnThisTodo} />\n              <div className=\"arrows flex\">\n                <MdIcons.MdKeyboardArrowLeft className=\"arrow arrow-back\" onClick={getPrevTodo} />\n                <MdIcons.MdKeyboardArrowRight className=\"arrow arrow-next\" onClick={getNextTodo} />\n              </div>\n            </>\n          ) : (\n            <>\n              <InitialMessage showAddNewTodoForm={showAddNewTodoForm} />\n              {isAddNewTodoClicked ? (\n                <>\n                  <AddNewTodoForm />\n                </>\n              ) : null}\n            </>\n          )}\n        </div>\n      </div>\n\n      {isAddNewTodoClicked && !focusOnThisTodo ? (\n        <div className=\"overlay\" onClick={hideAddNewTodoForm}></div>\n      ) : null}\n    </>\n  );\n}\n\nexport default HomeMain;\n\nfunction InitialMessage({ showAddNewTodoForm }) {\n  useEffect(() => {\n    homeAnimation();\n  }, []);\n\n  return (\n    <div className=\"initial-message\">\n      <FaRegHandPointDown className=\"point-down-icon\" />\n      <h1 className=\"title message\" onClick={showAddNewTodoForm}>\n        What's your todo today?\n      </h1>\n    </div>\n  );\n}\n","export function mod(n, m) {\n  return ((n % m) + m) % m;\n}\n","import React from 'react';\nimport TimeDisplay from '../components/home/TimeDisplay';\nimport HomeMain from '../components/home/HomeMain';\n\nfunction Home() {\n  return (\n    <div className=\"home container\">\n      <TimeDisplay />\n      <HomeMain />\n    </div>\n  );\n}\n\nexport default Home;\n","import { useEffect, useContext } from 'react';\nimport { GlobalContext } from '../contexts/GlobalState';\n\nfunction useUnmount() {\n  const { hideAddNewTodoForm } = useContext(GlobalContext);\n\n  useEffect(() => {\n    return () => {\n      hideAddNewTodoForm();\n    };\n  });\n}\n\nexport default useUnmount;\n","import React, { useContext } from 'react';\nimport TodoItem from './TodoItem.jsx';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction TodoList({ size, todosToday, isOverdueList }) {\n  const {\n    sortedTodosToday,\n    unsortedTodosToday,\n    overdueTodoList,\n    sortedOverdueTodoList,\n    selectedSort\n  } = useContext(GlobalContext);\n\n  const showNoTodoMessage = (isOverdueList) => {\n    let unSortedTodos = isOverdueList ? overdueTodoList : unsortedTodosToday;\n    let sortedTodos = isOverdueList ? sortedOverdueTodoList : sortedTodosToday;\n    let message;\n    if (!unSortedTodos.length) {\n      message = isOverdueList ? 'No overdue todos' : 'Add new todo at the top right corner';\n    } else if (selectedSort === 'completed' && !sortedTodos.length && unSortedTodos.length) {\n      message = isOverdueList ? 'No completed overdue todos yet' : 'No completed todos yet';\n    } else if (selectedSort === 'active' && !sortedTodos.length && unSortedTodos.length) {\n      message = isOverdueList ? 'All overdue todos are completed' : 'All todos are completed';\n    }\n\n    return message;\n  };\n\n  return (\n    <>\n      <ul className=\"todo-list\">\n        {todosToday.map((todo) => (\n          <TodoItem key={todo.id} todo={todo} size={size} />\n        ))}\n      </ul>\n      <span className=\"no-todo-message\">{showNoTodoMessage(isOverdueList)}</span>\n    </>\n  );\n}\n\nexport default TodoList;\n","import React, { useContext, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction SelectView({ history, location }) {\n  const { selectedView, updateSelectedView } = useContext(GlobalContext);\n\n  // history.push : change the page and url\n  const handleSelectedViewChange = (e) => {\n    history.push(`/${e.target.value}`);\n    updateSelectedView(e.target.value);\n  };\n\n  // when mounted, get the current url and always update the selectedView\n  // it updates the state when user clicks on go back button in the browser\n  useEffect(() => {\n    const currentView = location.pathname.slice(1, location.pathname.length);\n    updateSelectedView(currentView);\n  });\n\n  return (\n    <select className=\"select-view\" value={selectedView} onChange={handleSelectedViewChange}>\n      <option value=\"daily\">Day</option>\n      <option value=\"weekly\">Week</option>\n      <option value=\"monthly\">Month</option>\n    </select>\n  );\n}\n\nexport default withRouter(SelectView);\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction SelectSort() {\n  const { selectedSort, updateSelectedSort } = useContext(GlobalContext);\n  const handleSelectedSortChange = (e) => {\n    updateSelectedSort(e.target.value);\n  };\n\n  return (\n    <div className=\"select-sort-container\">\n      <span className=\"sort-by-text\">sort by</span>\n      <select className=\"select-sort\" value={selectedSort} onChange={handleSelectedSortChange}>\n        <option value=\"oldest\">oldest</option>\n        <option value=\"newest\">newest</option>\n        <option value=\"tag\">tag</option>\n        <option value=\"completed\">completed</option>\n        <option value=\"active\">active</option>\n      </select>\n    </div>\n  );\n}\n\nexport default SelectSort;\n","import React, { useContext } from 'react';\nimport SelectView from './SelectView';\nimport SelectSort from './SelectSort';\nimport AddNewTodoForm from './AddNewTodoForm';\nimport { FiPlus } from 'react-icons/fi';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction HeaderShared({ title }) {\n  const { isAddNewTodoClicked, showAddNewTodoForm } = useContext(GlobalContext);\n\n  return (\n    <div className=\"header\">\n      <div className=\"row-1\">\n        <div className=\"row-1__1\">\n          <h1 className=\"title\">{title}</h1>\n        </div>\n\n        <div className=\"row-1__2\">\n          <SelectView />\n        </div>\n      </div>\n\n      <div className=\"row-2-col-1\">\n        <SelectSort />\n      </div>\n\n      <div className=\"row-2-col-2\">\n        <FiPlus className=\"add-new-todo-icon\" onClick={showAddNewTodoForm} />\n        {isAddNewTodoClicked ? <AddNewTodoForm /> : null}\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderShared;\n","import React, { useContext } from 'react';\nimport useUnmount from '../utils/useUnmount';\nimport TodoList from '../components/shared/TodoList.jsx';\nimport HeaderShared from '../components/shared/HeaderShared';\nimport { RiPushpin2Line } from 'react-icons/ri';\nimport { GlobalContext } from '../contexts/GlobalState';\n\nfunction Daily() {\n  const { sortedTodosToday, overdueTodoList, sortedOverdueTodoList, hideAddNewTodoForm } = useContext(\n    GlobalContext\n  );\n\n  useUnmount();\n\n  return (\n    <div className=\"daily\" onClick={hideAddNewTodoForm}>\n      <div className=\"main-display container\">\n        <HeaderShared title={'Today'} />\n        {overdueTodoList.length ? (\n          <div className=\"list md overdue-list\">\n            <h2>\n              Overdue <RiPushpin2Line className=\"pin-icon\" />\n            </h2>\n            <TodoList todosToday={sortedOverdueTodoList} isOverdueList />\n          </div>\n        ) : null}\n        <div className=\"list md\">\n          <TodoList todosToday={sortedTodosToday} />\n        </div>\n      </div>\n      <div className=\"side-display\"></div>\n    </div>\n  );\n}\n\nexport default Daily;\n","import React, { useContext } from 'react';\nimport useUnmount from '../utils/useUnmount';\nimport HeaderShared from '../components/shared/HeaderShared';\nimport TodoList from '../components/shared/TodoList.jsx';\nimport { RiPushpin2Line } from 'react-icons/ri';\nimport { GlobalContext } from '../contexts/GlobalState';\n\nfunction Weekly() {\n  const { today, sortedTodoList, overdueTodoList, hideAddNewTodoForm } = useContext(GlobalContext);\n\n  const generateTodos = (todos, counter) => {\n    return todos.filter(\n      (todo) =>\n        todo.dateInfo.year === today.year &&\n        todo.dateInfo.month === today.month &&\n        todo.dateInfo.date === today.date + counter\n    );\n  };\n\n  let thisWeek = [];\n  for (let i = 0; i < 7; i++) {\n    const nextDayConstructor = new Date(today.year, today.month, today.date + i);\n\n    const eachDay = {\n      dateInfo: {\n        year: nextDayConstructor.getFullYear(),\n        month: nextDayConstructor.getMonth(),\n        date: nextDayConstructor.getDate(),\n        day: nextDayConstructor.toLocaleString('default', { weekday: 'long' })\n      },\n      todos: generateTodos(sortedTodoList, i)\n    };\n\n    thisWeek.push(eachDay);\n  }\n\n  thisWeek[0].dateInfo.day = 'Today';\n  thisWeek[1].dateInfo.day = 'Tomorrow';\n\n  const getOrdinalNum = function (eachDay) {\n    if (eachDay.dateInfo > 3 && eachDay.dateInfo < 21) return 'th';\n    switch (eachDay.dateInfo % 10) {\n      case 1:\n        return 'st';\n      case 2:\n        return 'nd';\n      case 3:\n        return 'rd';\n      default:\n        return 'th';\n    }\n  };\n\n  useUnmount();\n\n  return (\n    <div className=\"weekly\" onClick={hideAddNewTodoForm}>\n      <div className=\"main-display container\">\n        <HeaderShared title={'Weekly'} />\n\n        <div className=\"weekly-list\">\n          {overdueTodoList.length ? (\n            <div className=\"list sm overdue-list\">\n              <h2>\n                Overdue <RiPushpin2Line className=\"pin-icon\" />\n              </h2>\n\n              <TodoList todosToday={overdueTodoList} isOverdueList />\n            </div>\n          ) : null}\n\n          {thisWeek.map((eachDay) => (\n            <div key={eachDay.dateInfo.date} className=\"list sm\">\n              <h2>\n                {eachDay.dateInfo.day} <span className=\"date\">{eachDay.dateInfo.date}</span>\n                <span className=\"date-ordinal\">{getOrdinalNum(eachDay.dateInfo)}</span>\n              </h2>\n\n              <TodoList todosToday={eachDay.todos} />\n            </div>\n          ))}\n        </div>\n      </div>\n\n      <div className=\"side-display\"></div>\n    </div>\n  );\n}\n\nexport default Weekly;\n","import React, { useContext } from 'react';\nimport SelectView from '../shared/SelectView';\nimport AddNewTodoForm from '../shared/AddNewTodoForm.jsx';\nimport * as MdIcons from 'react-icons/md';\nimport { FiPlus } from 'react-icons/fi';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction HeaderMonthly({ currentMonthName, selectedYear, moveToPrevMonth, moveToNextMonth, goBackToToday }) {\n  const { isAddNewTodoClicked, showAddNewTodoForm } = useContext(GlobalContext);\n\n  return (\n    <div className=\"header\">\n      <div className=\"row-1\">\n        <div className=\"row-1__1\">\n          <h1 className=\"title\">{currentMonthName}</h1>\n        </div>\n\n        <div className=\"row-1__2 arrows\">\n          <MdIcons.MdKeyboardArrowLeft className=\"arrow arrow-back\" onClick={moveToPrevMonth} />\n          <MdIcons.MdKeyboardArrowRight className=\"arrow arrow-next\" onClick={moveToNextMonth} />\n        </div>\n\n        <div className=\"row-1__3\">\n          <SelectView />\n        </div>\n      </div>\n\n      <div className=\"row-2-col-2\">\n        <FiPlus className=\"add-new-todo-icon\" onClick={showAddNewTodoForm} />\n        {isAddNewTodoClicked ? <AddNewTodoForm /> : null}\n      </div>\n\n      <div className=\"row-2-col-1\">\n        <span className=\"this-year\">{selectedYear}</span>\n        <button className=\"today-btn\" onClick={goBackToToday}>\n          today\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default HeaderMonthly;\n","import React, { useContext } from 'react';\nimport { CgTrash } from 'react-icons/cg';\nimport { AiOutlineMore } from 'react-icons/ai';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction InnerList({ todo }) {\n  const { toggleComplete, removeTodo } = useContext(GlobalContext);\n\n  return (\n    <li className=\"inner-ul__list todo-item flex v-center\">\n      <div className=\"col-1\">\n        <span\n          className={`checkbox ${todo.type} ${todo.completed ? 'completed ' : ''}`}\n          onClick={() => toggleComplete(todo.id)}\n        ></span>\n      </div>\n      <div className=\"col-2\">\n        <span className={`task ${todo.completed ? 'grey-out' : ''}`}>{todo.task}</span>\n        <div className=\"more\">\n          <CgTrash onClick={() => removeTodo(todo.id)} />\n          <AiOutlineMore />\n        </div>\n      </div>\n    </li>\n  );\n}\n\nexport default InnerList;\n","import React from 'react';\nimport InnerList from './InnerList';\n\nfunction OuterList({ eachDay }) {\n  return (\n    <li className=\"outer-ul__list\" data-id={eachDay[0].dateInfo.date}>\n      <div className=\"row-1\">\n        <span className=\"date\">{eachDay[0].dateInfo.date}</span>\n        <span className=\"day\">{eachDay[0].dateInfo.day}</span>\n      </div>\n\n      <ul className=\"row-2 inner-ul\">\n        {eachDay.map((todo) => (\n          <InnerList key={todo.id} todo={todo} />\n        ))}\n      </ul>\n    </li>\n  );\n}\n\nexport default OuterList;\n","import React, { useContext } from 'react';\nimport OuterList from './OuterList';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport _ from 'lodash';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction MonthlyList({ currentMonthName, selectedYear, selectedMonth }) {\n  const { todoList } = useContext(GlobalContext);\n\n  const todosByYear = _.groupBy(todoList, 'dateInfo.year');\n  const todosThisYear = todosByYear[`${selectedYear}`] || [];\n  const todoThisMonth = todosThisYear.filter((todo) => todo.dateInfo.month === selectedMonth);\n\n  const todosEachDay = Object.values(\n    todoThisMonth.reduce((acc, current) => {\n      if (acc[current.dateInfo.date]) {\n        acc[current.dateInfo.date].push(current);\n      } else {\n        acc[current.dateInfo.date] = [current];\n      }\n      return acc;\n    }, {})\n  );\n\n  //or\n  //   const todosByDate = _.groupBy(todoThisMonth, 'dateInfo.date');\n  //   let todosEachDay = [];\n  //   for (let x in todosByDate) {\n  //     todosEachDay.push(todosByDate[x]);\n  //   }\n\n  return (\n    <div className=\"monthly-list\">\n      <form action=\"\">\n        <AiOutlineSearch className=\"search-icon\" />\n        <input type=\"text\" placeholder=\"Search\" />\n      </form>\n\n      <h2 className=\"title\">\n        {currentMonthName}\n        <span className=\"todos-length\">({todoThisMonth.length})</span>\n      </h2>\n\n      <ul className=\"outer-ul\">\n        {todosEachDay.map((eachDay) => (\n          <OuterList key={eachDay[0].id} eachDay={eachDay} />\n        ))}\n      </ul>\n    </div>\n  );\n}\n\nexport default MonthlyList;\n","import React, { useState, useRef, useContext } from 'react';\nimport useOnClickOutside from '../../utils/useOnClickOutside';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction CalendarDate({ date, dateInfo, className }) {\n  const { todoList } = useContext(GlobalContext);\n  const [selected, setSelected] = useState(false);\n  const todos = todoList.filter((todo) => {\n    return (\n      todo.dateInfo.year === dateInfo.year &&\n      todo.dateInfo.month === dateInfo.month &&\n      todo.dateInfo.date === dateInfo.date\n    );\n  });\n\n  const dateRef = useRef();\n  const toggleSelected = () => {\n    if (todos.length) return;\n    setSelected(!selected);\n  };\n\n  useOnClickOutside(dateRef, () => setSelected(false));\n\n  return (\n    <span\n      ref={dateRef}\n      data-id={dateInfo.date}\n      className={`${className} ${selected ? 'no-todo-message' : ''}`}\n      onClick={toggleSelected}\n    >\n      {date}\n    </span>\n  );\n}\n\nexport default CalendarDate;\n","import React from 'react';\n\nexport default function useOnClickOutside(ref, handler) {\n  React.useEffect(() => {\n    const listener = (e) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(e.target)) {\n        return;\n      }\n\n      handler(e);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n}\n","import React from 'react';\nimport showCalendar from '../../utils/showCalendar';\n\nfunction Calendar({ selectedYear, selectedMonth }) {\n  const daysArray = ['M', 'T', 'W', 'T', 'F', 'S', 'S'];\n\n  return (\n    <div className=\"calendar\">\n      <div className=\"calendar__header\">\n        {daysArray.map((day, index) => (\n          <span key={index}>{day}</span>\n        ))}\n      </div>\n\n      {showCalendar(selectedYear, selectedMonth)}\n    </div>\n  );\n}\n\nexport default Calendar;\n","import React from 'react';\nimport CalendarDate from '../components/monthly/CalendarDate';\n\nexport default (selectedYear, selectedMonth) => {\n  const renderDate = (date, dateInfo, className) => {\n    return <CalendarDate key={date} date={date} dateInfo={dateInfo} className={className} />;\n  };\n\n  const today = new Date();\n  let firstDay = new Date(selectedYear, selectedMonth).getDay() - 1; // starting on Mon as index 0\n  if (firstDay === -1) firstDay = 6; // convert Sun index( 0-1 = -1 ) to 6\n  const daysInMonth = (selectedYear, selectedMonth) => {\n    return 32 - new Date(selectedYear, selectedMonth, 32).getDate();\n  };\n\n  const weeks = [];\n  const getDatePrevMonth = 1 - firstDay;\n  let date = 1;\n  let datePrevMonth = new Date(selectedYear, selectedMonth, getDatePrevMonth).getDate();\n  let dateNextMonth = 1;\n\n  // render 6 rows with 7 columns of calendar\n  for (let i = 0; i < 6; i++) {\n    const row = [];\n\n    for (let j = 0; j < 7; j++) {\n      let dateInfo = { year: selectedYear, month: selectedMonth, date };\n      let className;\n\n      // render last days of prev month\n      if (i === 0 && j < firstDay) {\n        dateInfo.date = datePrevMonth;\n        dateInfo.month = selectedMonth - 1 === -1 ? 11 : selectedMonth - 1;\n        dateInfo.year = dateInfo.month === 11 ? selectedYear - 1 : selectedYear;\n        className = 'date date-prev-month';\n\n        row.push(renderDate(datePrevMonth, dateInfo, className));\n        datePrevMonth++;\n      }\n\n      // render first days of next month\n      else if (date > daysInMonth(selectedYear, selectedMonth)) {\n        dateInfo.date = dateNextMonth;\n        dateInfo.month = selectedMonth + 1 === 12 ? 0 : selectedMonth + 1;\n        dateInfo.year = dateInfo.month === 0 ? selectedYear + 1 : selectedYear;\n        className = 'date date-next-month';\n\n        row.push(renderDate(dateNextMonth, dateInfo, className));\n        dateNextMonth += 1;\n      }\n\n      // render dates of this month\n      else {\n        className = j === 5 || j === 6 ? 'date weekend ' : 'date';\n        if (\n          date === today.getDate() &&\n          selectedYear === today.getFullYear() &&\n          selectedMonth === today.getMonth()\n        ) {\n          className += ' today show-message-box';\n        }\n        row.push(renderDate(date, dateInfo, className));\n        date++;\n      }\n    }\n\n    weeks.push(\n      <div key={i} className={'calendar__week week-' + i}>\n        {row}\n      </div>\n    );\n  }\n\n  return weeks;\n};\n","import React, { useState, useContext, useRef } from 'react';\nimport useUnmount from '../utils/useUnmount';\nimport HeaderMonthly from '../components/monthly/HeaderMonthly';\nimport MonthlyList from '../components/monthly/MonthlyList';\nimport Calendar from '../components/monthly/Calendar';\nimport { GlobalContext } from '../contexts/GlobalState';\n\nfunction Monthly() {\n  const { today, hideAddNewTodoForm } = useContext(GlobalContext);\n  const [selectedYear, setSelectedYear] = useState(today.year);\n  const [selectedMonth, setSelectedMonth] = useState(today.month);\n  const currentMonthName = new Date(selectedYear, selectedMonth).toLocaleString('default', { month: 'long' });\n  const parent = useRef();\n\n  const moveToPrevMonth = () => {\n    if (selectedMonth === 0) {\n      setSelectedYear((prev) => prev - 1);\n      setSelectedMonth(12);\n    }\n    setSelectedMonth((prev) => prev - 1);\n  };\n\n  const moveToNextMonth = () => {\n    if (selectedMonth === 11) {\n      setSelectedYear((prev) => prev + 1);\n    }\n\n    setSelectedMonth((prev) => (prev + 1) % 12);\n  };\n\n  const goBackToToday = () => {\n    setSelectedYear(today.year);\n    setSelectedMonth(today.month);\n  };\n\n  const handleDateScroll = (e) => {\n    const HTMLCollection = parent.current.childNodes[1].childNodes[2].children;\n    const refList = [...HTMLCollection];\n    const listToScroll = refList.find(\n      (list) => list.getAttribute('data-id') === e.target.getAttribute('data-id')\n    );\n\n    if (listToScroll) listToScroll.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  useUnmount();\n\n  return (\n    <div className=\"monthly\" onClick={hideAddNewTodoForm}>\n      <div className=\"main-display container\">\n        <HeaderMonthly\n          currentMonthName={currentMonthName}\n          selectedYear={selectedYear}\n          moveToPrevMonth={moveToPrevMonth}\n          moveToNextMonth={moveToNextMonth}\n          goBackToToday={goBackToToday}\n        />\n        <div className=\"main\" ref={parent} onClick={handleDateScroll}>\n          <Calendar selectedYear={selectedYear} selectedMonth={selectedMonth} />\n          <MonthlyList\n            currentMonthName={currentMonthName}\n            selectedYear={selectedYear}\n            selectedMonth={selectedMonth}\n          />\n        </div>\n      </div>\n      <div className=\"side-display\"></div>\n    </div>\n  );\n}\n\nexport default Monthly;\n","import React, { useState, useEffect } from 'react';\nimport './styles/App.scss';\nimport Nav from './components/shared/Nav';\nimport Home from './pages/Home';\nimport Daily from './pages/Daily';\nimport Weekly from './pages/Weekly';\nimport Monthly from './pages/Monthly';\nimport { Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  // window resize for all pages\n  let [windowSize, setWindowSize] = useState({\n    width: window.innerWidth,\n    height: window.innerHeight\n  });\n\n  useEffect(() => {\n    function handleResize() {\n      setWindowSize({\n        width: window.innerWidth,\n        height: window.innerHeight\n      });\n    }\n\n    let vh = windowSize.height * 0.01;\n    document.documentElement.style.setProperty('--vh', `${vh}px`);\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [windowSize]);\n\n  return (\n    <div className=\"app\">\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" component={Home} />\n        <Route exact path=\"/daily\" component={Daily} />\n        <Route exact path=\"/weekly\" component={Weekly} />\n        <Route exact path=\"/monthly\" component={Monthly} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport { GlobalContextProvider } from './contexts/GlobalState';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <HashRouter basename=\"/\">\n    <GlobalContextProvider>\n      <App />\n    </GlobalContextProvider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}