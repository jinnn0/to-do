{"version":3,"sources":["styles/GlobalStyle.js","hooks/use100vh.js","components/Nav/style.js","utils/sampleTodoList.js","contexts/GlobalState.js","components/Nav/index.js","pages/Home/style.js","components/TimeDisplay/style.js","components/TimeDisplay/index.js","components/HomeMain/style.js","hooks/useOnClickOutside.js","components/NewTodo/style.js","components/NewTodo/index.js","components/AddNewTodoForm/style.js","components/AddNewTodoForm/index.js","animations/todoListAnimation.js","components/TodoItem/style.js","components/TodoItem/index.js","animations/homeAnimation.js","components/HomeMain/index.js","utils/utils.js","pages/Home/index.js","components/TodoList/index.js","styles/shared.js","components/SelectView/style.js","components/SelectView/index.js","components/SelectSort/style.js","components/SelectSort/index.js","components/Header/style.js","components/Header/index.js","pages/Daily/style.js","pages/Daily/index.js","pages/Weekly/style.js","pages/Weekly/index.js","components/MonthlyHeader/style.js","components/MonthlyHeader/index.js","components/MonthlyList/style.js","components/MonthlyListSubListItem/style.js","components/MonthlyListSubListItem/index.js","components/MonthlyListSubList/style.js","components/MonthlyListSubList/index.js","components/MonthlyList/index.js","components/CalendarDate/style.js","components/CalendarDate/index.js","utils/showCalendar.js","components/Calendar/style.js","components/Calendar/index.js","pages/Monthly/style.js","pages/Monthly/index.js","App.jsx","index.js"],"names":["colors","GlobalStyle","createGlobalStyle","use100vh","useState","window","innerHeight","vh","setVh","useEffect","handleResize","document","documentElement","style","setProperty","addEventListener","removeEventListener","NavContainer","styled","nav","NavList","ul","todoTypes","d","Date","sampleTasks","map","task","index","randomDate","randomType","getDate","Math","floor","random","id","shortid","generate","timestamp","getTime","type","completed","dateInfo","year","getFullYear","month","getMonth","date","day","toLocaleString","weekday","hour","getHours","minute","getMinutes","GlobalContext","createContext","GlobalContextProvider","props","today","monthName","initialTodoList","JSON","parse","localStorage","getItem","sampleTodoList","todoList","setTodoList","setItem","stringify","initialSort","selectedSort","setSelectedSort","sortedTodoList","sort","a","b","ordering","sortOrder","i","length","filter","todo","msMidnight","overdueTodoList","sortedOverdueTodoList","initialView","selectedView","setSelectedView","isAddNewTodoClicked","setIsAddNewTodoClicked","value","addTodo","newTodo","removeTodo","updatedTodo","toggleComplete","updateSelectedSort","newSort","updateSelectedView","newValue","toggleIsAddNewTodoClicked","Provider","children","Nav","useContext","Links","path","icon","link","key","exact","to","activeClassName","HomeContainer","main","TimeDisplayContainer","div","Time","Day","TimeDisplay","currentTime","setCurrentTime","timeId","setTimeout","getSeconds","clearTimeout","className","HomeMainContainer","HomeMainWrapper","Title","h1","Arrows","InitialMessageContainer","Message","Overlay","useOnClickOutside","ref","handler","React","listener","e","current","contains","target","NewTodoContainer","Input","input","SelectType","DefaultType","Color","span","DropDown","TypeItem","li","CheckedIcon","NewTodo","handleInputChange","isColorBoxClicked","setIsColorBoxClicked","selectTypeColor","showSelectTypeColorDropDown","handleSelectType","inputRef","useRef","selectTypeDivRef","onChange","placeholder","onClick","colorType","SelectColorTypeList","data-color-type","AddNewTodoFormContainer","form","SubmitButton","button","AddNewTodoForm","startDate","setStartDate","setTodo","formmRef","action","onSubmit","preventDefault","trim","stopPropagation","dataset","selected","timeInputLabel","showWeekNumbers","minDate","showTimeInput","shouldCloseOnSelect","todoListAnimation","gsap","timeline","duration","ease","y","opacity","stagger","amount","TodoItemContainer","Background","TypeBar","Checkbox","Task","More","TodoItem","homeAnimation","delay","HomeMain","todoIndex","setTodoIndex","homeMainDivRef","homeMainDivTouching","setHomeMainDivTouching","todoToday","focusOnThisTodo","getBoundingClientRect","top","position","left","transform","prev","n","m","InitialMessage","showAddNewTodoForm","Home","TodoList","size","todosToday","Container","MainContainer","Main","Side","aside","Select","select","ListWrapper","sm","css","md","overdue","overdueMd","Heading","h2","View","withRouter","history","location","currentView","pathname","slice","push","SelectSortContainer","SortByText","Sort","SelectSort","HeaderContainer","header","Row1","Row1_1","Row2Col1","Row2Col2","Header","title","NoTodoMessage","Daily","todos","unsortedTodosToday","sortedTodosToday","showNoTodoMessage","isOverdueList","message","unSortedTodos","sortedTodos","WeeklyList","ListHeading","Weekly","generateTodos","counter","thisWeek","nextDayConstructor","eachDay","getOrdinalNum","MonthlyHeaderContainer","Row1_2","Row1_3","MonthlyHeader","currentMonthName","selectedYear","moveToPrevMonth","moveToNextMonth","goBackToToday","MonthlyListContainer","section","SearchForm","MonthName","ListItemContainer","Col1","Col2","ListItem","ListContainer","ListHeader","ListItemWrapper","MonthlyListSubList","data-id","MonthlyListSubListItem","MonthlyList","selectedMonth","todoThisMonth","_","groupBy","todosEachDay","Object","values","reduce","acc","CalendarDateContainer","CalendarDate","setSelected","dateRef","CalendarWeek","CalendarContainer","CalendarHeader","Calendar","renderDate","firstDay","getDay","daysInMonth","weeks","datePrevMonth","dateNextMonth","row","j","showCalendar","CalendarWrapper","Monthly","setSelectedYear","setSelectedMonth","parent","HTMLCollection","childNodes","listToScroll","find","list","getAttribute","scrollIntoView","behavior","App","component","ReactDOM","render","basename","getElementById"],"mappings":"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","file":"static/js/main.df1c6e1b.chunk.js","sourcesContent":["import { createGlobalStyle } from 'styled-components';\n\nexport const colors = {\n  purple: '#6966ff',\n  blue: '#75cdff',\n  pink: '#ffb8c0',\n  orange: '#ffaf75',\n  lightBlack: 'rgba(0, 0, 0, 0.515)',\n  formBg: 'rgb(242, 242, 242)'\n};\n\nconst GlobalStyle = createGlobalStyle`\n  *,\n  *::before,\n  *::after {\n    box-sizing: border-box;\n    padding: 0;\n    margin: 0;\n  }\n\n  :root {\n    --nav-height: 60px;\n    --header-height: 120px;\n    --time-display-height: 50px;\n    --mobile-100vh-fix: calc(var(--vh, 1vh) * 100);\n    --container-padding: 20px;\n    --header-margin-bottom: 2.5em;\n\n    @media (min-width: 750px) {\n      --header-margin-bottom: 4.5em;\n    }\n\n    @media (min-width: 900px) {\n      --nav-height: 72px;\n      --container-padding: 50px;\n    }\n  }\n\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen', 'Ubuntu', 'Cantarell',\n    'Fira Sans', 'Droid Sans', 'Helvetica Neue', sans-serif;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    overflow-x: hidden;\n    background-color: white;\n  }\n\n  .App {\n    min-width: 320px;\n  }\n\n\n  ul {\n    list-style-type: none;\n  }\n`;\n\nexport default GlobalStyle;\n","import { useState, useEffect } from 'react';\n\nfunction use100vh() {\n  let [vh, setVh] = useState(window.innerHeight);\n\n  useEffect(() => {\n    function handleResize() {\n      let vh = window.innerHeight * 0.01;\n      document.documentElement.style.setProperty('--vh', `${vh}px`);\n      setVh(vh);\n    }\n\n    window.addEventListener('resize', handleResize);\n\n    return () => {\n      window.removeEventListener('resize', handleResize);\n    };\n  }, [vh]);\n}\n\nexport default use100vh;\n","import styled from 'styled-components';\nimport { colors } from '../../styles/GlobalStyle';\n\nconst NavContainer = styled.nav`\n  width: 100%;\n  height: var(--nav-height);\n  border-bottom: 1px solid rgba(0, 0, 0, 0.07);\n  position: fixed;\n  top: 0;\n  left: 0;\n  z-index: 1;\n  padding: 0 var(--container-padding);\n  background-color: white;\n`;\n\nconst NavList = styled.ul`\n  display: flex;\n  height: 100%;\n\n  a {\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    width: 50px;\n    height: 100%;\n    position: relative;\n    overflow: hidden;\n    cursor: pointer;\n\n    &:last-child {\n      margin-right: 0;\n    }\n    &.selected::before {\n      content: '';\n      position: absolute;\n      top: 0;\n      width: 60%;\n      height: 3px;\n      background-color: ${colors.purple};\n      transition: all 0.3s ease-in-out;\n    }\n  }\n\n  svg {\n    color: black;\n    font-size: 1.1rem;\n  }\n`;\n\nexport { NavContainer, NavList };\n","import shortid from 'shortid';\n\n// sample todoList\n// prettier-ignore\nconst sampleTasks = [\"Daily web development\", \"Get groceries for dinner\", \"Home exercise at 6pm\", \"Call Daniel for meeting\", \"House cleaning\", \"Tennis practice\", \"Do lundary\", \"Email Noah for update\", \"Finish monthly growth report\", \"Send in cacenllation letter\", \"Figure out vacation destination\", \"Fill in scholarship application\" ]\nconst todoTypes = ['important', 'work', 'study', 'other'];\nconst d = new Date();\n\nexport default sampleTasks.map((task, index) => {\n  let randomDate;\n  let randomType;\n  if (index < 2) {\n    randomDate = d.getDate();\n    randomType = todoTypes[0];\n  } else {\n    randomDate = d.getDate() + Math.floor(Math.random() * 7);\n    randomType = todoTypes[Math.floor(Math.random() * 4)];\n  }\n\n  return {\n    id: shortid.generate(),\n    task: task,\n    timestamp: d.getTime(),\n    type: randomType,\n    completed: Math.random() >= 0.5,\n    dateInfo: {\n      year: d.getFullYear(),\n      month: d.getMonth(),\n      date: randomDate,\n      day: new Date(d.getFullYear(), d.getMonth(), randomDate).toLocaleString('default', { weekday: 'long' }),\n      hour: d.getHours(),\n      minute: d.getMinutes()\n    }\n  };\n});\n","import React, { useState, useEffect, createContext } from 'react';\nimport sampleTodoList from '../utils/sampleTodoList';\n\nexport const GlobalContext = createContext();\n\nexport const GlobalContextProvider = (props) => {\n  // today\n  const d = new Date(); \n  const today = {\n    year: d.getFullYear(),\n    month: d.getMonth(),\n    monthName: d.toLocaleString('default', { month: 'short' }),\n    date: d.getDate(),\n    day: d.toLocaleString('default', { weekday: 'short' }),\n    hour: d.getHours(),\n    minute: d.getMinutes()\n  };\n\n  // todoList state\n  const initialTodoList = JSON.parse(localStorage.getItem('to-do-list')) || sampleTodoList;\n  const [todoList, setTodoList] = useState(initialTodoList);\n\n  useEffect(() => {\n    localStorage.setItem('to-do-list', JSON.stringify(todoList));\n  }, [todoList]);\n\n  const addTodo = (newTodo) => {\n    setTodoList([...todoList, newTodo]);\n  };\n\n  const removeTodo = (id) => {\n    const updatedTodo = todoList.filter((todo) => id !== todo.id);\n    setTodoList(updatedTodo);\n  };\n\n  const toggleComplete = (id) => {\n    const updatedTodo = todoList.map((todo) => {\n      if (id === todo.id) {\n        return { ...todo, completed: !todo.completed };\n      }\n      return todo;\n    });\n\n    setTodoList(updatedTodo);\n  };\n\n  // sort state (recent / tag / oldest / completed / active)\n  const initialSort = JSON.parse(localStorage.getItem('sort-value')) || 'oldest';\n  const [selectedSort, setSelectedSort] = useState(initialSort);\n\n  useEffect(() => {\n    localStorage.setItem('sort-value', JSON.stringify(selectedSort));\n  }, [selectedSort]);\n\n  const updateSelectedSort = (newSort) => {\n    setSelectedSort(newSort);\n  };\n\n  // sorted todoList\n  let sortedTodoList;\n  if (selectedSort === 'oldest') {\n    sortedTodoList = todoList.sort((a, b) => {\n      return a.timestamp - b.timestamp;\n    });\n  } else if (selectedSort === 'newest') {\n    sortedTodoList = todoList.sort((a, b) => {\n      return b.timestamp - a.timestamp;\n    });\n  } else if (selectedSort === 'tag') {\n    const ordering = {};\n    const sortOrder = ['important', 'work', 'study', 'other'];\n    for (let i = 0; i < sortOrder.length; i++) {\n      ordering[sortOrder[i]] = i;\n    }\n    sortedTodoList = todoList.sort((a, b) => {\n      return ordering[a.type] - ordering[b.type];\n    });\n  } else if (selectedSort === 'completed') {\n    sortedTodoList = todoList.filter((todo) => todo.completed);\n  } else if (selectedSort === 'active') {\n    sortedTodoList = todoList.filter((todo) => !todo.completed);\n  }\n\n  // overdue todolist state\n  const msMidnight = new Date(today.year, today.month, today.date, 0, 0, 0).getTime();\n  const overdueTodoList = todoList.filter((todo) => todo.timestamp < msMidnight);\n  const sortedOverdueTodoList = sortedTodoList.filter((todo) => todo.timestamp < msMidnight);\n\n  // view state (daily / weekly / monthly)\n  const initialView = JSON.parse(localStorage.getItem('selected-view')) || 'daily';\n  const [selectedView, setSelectedView] = useState(initialView);\n\n  useEffect(() => {\n    localStorage.setItem('selected-view', JSON.stringify(selectedView));\n  }, [selectedView]);\n\n  const updateSelectedView = (newValue) => {\n    setSelectedView(newValue);\n  };\n\n  // isAddNewTodoClicked state\n  const [isAddNewTodoClicked, setIsAddNewTodoClicked] = useState(false);\n\n  const toggleIsAddNewTodoClicked = () => {\n    setIsAddNewTodoClicked(!isAddNewTodoClicked);\n  };\n\n  // global states\n  const value = {\n    today, // HomeMain, TimeDisplay, Daily, Weekly, Monthly, AddNewTodoForm\n    todoList, // HomeMain, MonthlyList, Daily\n    addTodo, // AddNewTodoForm\n    removeTodo, // TodoItem, InnerList\n    toggleComplete, // TodoItem, InnerList\n    selectedSort, // SelectSort, Daily, Weekly\n    updateSelectedSort, // SelectSort\n    sortedTodoList, // Daily, Weekly\n    overdueTodoList, // Daily, Weekly, TodoList\n    sortedOverdueTodoList, // Daily, TodoList\n    selectedView, // Nav, SelectView\n    updateSelectedView, // SelectView\n    isAddNewTodoClicked, // HomeMain, AddNewTodoForm\n    toggleIsAddNewTodoClicked // HomeMain, HeaderShared, HeaderMonthly, useOnClickOutside.js\n  };\n\n  return <GlobalContext.Provider value={value}>{props.children}</GlobalContext.Provider>;\n};\n","import React, { useContext } from 'react';\nimport { NavContainer, NavList } from './style';\nimport { NavLink } from 'react-router-dom';\nimport * as AiIcons from 'react-icons/ai';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction Nav() {\n  const { selectedView } = useContext(GlobalContext);\n\n  const Links = [\n    { path: '/home', icon: <AiIcons.AiOutlineStar /> },\n    {\n      path: `/${selectedView}`,\n      icon: <AiIcons.AiOutlineUnorderedList />\n    }\n  ];\n\n  return (\n    <NavContainer>\n      <NavList>\n        {Links.map((link) => (\n          <li key={link.path}>\n            <NavLink exact to={link.path} activeClassName=\" selected\">\n              {link.icon}\n            </NavLink>\n          </li>\n        ))}\n      </NavList>\n    </NavContainer>\n  );\n}\n\nexport default Nav;\n","import styled from 'styled-components';\n\nconst HomeContainer = styled.main`\n  height: calc(var(--mobile-100vh-fix) - var(--nav-height));\n  margin-top: var(--nav-height);\n  padding: 0 var(--container-padding);\n  background-color: white;\n`;\n\nexport { HomeContainer };\n","import styled from 'styled-components';\n\nconst TimeDisplayContainer = styled.div`\n  height: var(--time-display-height);\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  font-size: 1rem;\n  position: relative;\n  z-index: 2;\n`;\n\nconst Time = styled.div`\n  margin-right: 15px;\n`;\n\nconst Day = styled.div`\n  color: rgba(0, 0, 0, 0.289);\n  font-weight: 200;\n\n  .date {\n    margin-left: 5px;\n  }\n`;\n\nexport { TimeDisplayContainer, Time, Day };\n","import React, { useState, useEffect, useContext } from 'react';\nimport { TimeDisplayContainer, Time, Day } from './style';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction TimeDisplay() {\n  const { today } = useContext(GlobalContext);\n  const [currentTime, setCurrentTime] = useState({\n    hour: today.hour,\n    minute: today.minute\n  });\n\n  useEffect(() => {\n    let timeId = setTimeout(() => {\n      setCurrentTime({\n        hour: new Date().getHours(),\n        minute: new Date().getMinutes()\n      });\n    }, 60000 - 1000 * new Date().getSeconds());\n\n    return () => {\n      clearTimeout(timeId);\n    };\n  }, [currentTime.minute]);\n\n  return (\n    <TimeDisplayContainer>\n      <Time>\n        {`${currentTime.hour < 10 ? '0' + currentTime.hour : currentTime.hour}:${\n          currentTime.minute < 10 ? '0' + currentTime.minute : currentTime.minute\n        }`}\n      </Time>\n      <Day>\n        {today.day}, {today.monthName}\n        <span className=\"date\">{today.date}</span>\n      </Day>\n    </TimeDisplayContainer>\n  );\n}\n\nexport default TimeDisplay;\n","import styled from 'styled-components';\n\nconst HomeMainContainer = styled.div`\n  height: calc(100% - var(--time-display-height));\n\n  .z-index {\n    z-index: 4;\n  }\n\n  .add-new-todo-form {\n    display: flex;\n    width: 100%;\n    height: 100%;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n\n    @media (min-width: 500px) {\n      width: 500px;\n    }\n\n    &:before {\n      display: none; /* remove box tail on home page */\n    }\n  }\n`;\n\nconst HomeMainWrapper = styled.div`\n  width: calc(100vw - (var(--container-padding) * 2));\n  min-width: 280px;\n  max-width: 700px;\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  margin: 0 auto;\n  position: relative;\n\n  @media (min-width: 500px) {\n    width: 80vw;\n  }\n\n  @media (min-width: 750px) {\n    padding: 2em;\n  }\n\n  .todo-item {\n    height: 3.2em;\n    border-radius: 3.16em;\n    box-shadow: 0 20px 40px 0 rgba(0, 0, 0, 0.07);\n    padding-left: 1.1rem;\n    margin-bottom: 1.3rem;\n\n    @media (min-width: 750px) {\n      font-size: 18px;\n      padding-left: 1.2em;\n      margin-bottom: 2rem;\n    }\n  }\n`;\n\nconst Title = styled.h1`\n  font-size: 1.1em;\n  color: $title;\n  margin-bottom: 1.4rem;\n  padding-left: 15px;\n\n  @media (min-width: 1550px) {\n    font-size: 1.3em;\n  }\n`;\n\nconst Arrows = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding-right: 1rem;\n\n  .arrow {\n    cursor: pointer;\n    font-size: 1.1rem;\n    font-size: 1.3rem;\n    color: rgba(0, 0, 0, 0.233);\n  }\n\n  .arrow-back {\n    margin-right: 1rem;\n  }\n`;\n\nconst InitialMessageContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  transform: translateY(30px); /* animation */\n  cursor: pointer;\n\n  .point-down-icon {\n    opacity: 0;\n    animation: pointDown 0.5s ease-in-out infinite alternate;\n    margin-bottom: 1.5rem;\n  }\n\n  @keyframes pointDown {\n    0% {\n      transform: translateY(-10px);\n    }\n    100% {\n      transform: translateY(0px);\n    }\n  }\n`;\n\nconst Message = styled.h1`\n  font-size: 1.1em;\n\n  @media (min-width: 1550px) {\n    font-size: 1.3em;\n  }\n`;\n\nconst Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.249);\n  z-index: 3;\n`;\n\nexport { HomeMainContainer, HomeMainWrapper, Title, Arrows, InitialMessageContainer, Message, Overlay };\n","/*\nUsed in :\n  monthly/CalendarDate\n  shared/AddNewTodoForm\n  todo-form/NewTodo\n*/\n\nimport React from 'react';\n\nexport default function useOnClickOutside(ref, handler) {\n  React.useEffect(() => {\n    const listener = (e) => {\n      // Do nothing if clicking ref's element or descendent elements\n      if (!ref.current || ref.current.contains(e.target)) {\n        return;\n      }\n\n      handler(e);\n    };\n\n    document.addEventListener('mousedown', listener);\n    document.addEventListener('touchstart', listener);\n\n    return () => {\n      document.removeEventListener('mousedown', listener);\n      document.removeEventListener('touchstart', listener);\n    };\n  }, [ref, handler]);\n}\n","import styled from 'styled-components';\nimport { colors } from '../../styles/GlobalStyle';\n\nconst NewTodoContainer = styled.div`\n  display: flex;\n  align-items: center;\n  height: 30%;\n  justify-content: space-between;\n  margin-bottom: 1rem;\n  border-bottom: 1px solid rgba(0, 0, 0, 0.089);\n`;\n\nconst Input = styled.input`\n  height: 100%;\n  width: 100%;\n  margin-right: 1rem;\n  border: none;\n  background-color: transparent;\n  text-indent: 3px;\n  outline: none;\n\n  &::placeholder {\n    font-size: 1rem;\n  }\n`;\n\nconst SelectType = styled.div`\n  width: 43px;\n  width: 63px;\n  height: 20px;\n  position: relative;\n  border: 1px solid rgba(0, 0, 0, 0.247);\n  border-radius: 3px;\n  z-index: 10;\n`;\n\nconst DefaultType = styled.ul`\n  padding-left: 5px;\n`;\n\nconst Color = styled.span`\n  display: inline-block;\n  width: 14px;\n  height: 14px;\n  border-radius: 3px;\n  margin-right: 3px;\n\n  &.important {\n    background-color: ${colors.purple};\n  }\n\n  &.work {\n    background-color: ${colors.blue};\n  }\n\n  &.study {\n    background-color: ${colors.pink};\n  }\n\n  &.other {\n    background-color: ${colors.orange};\n  }\n`;\n\nconst DropDown = styled.ul`\n  width: 130px;\n  position: absolute;\n  top: -100%;\n  left: -20px;\n  background: white;\n  border-radius: 5px;\n  border: 1px solid rgba(0, 0, 0, 0.062);\n  display: none;\n\n  @media (min-width: 750px) {\n    left: 50px;\n  }\n\n  &.show-dropdown {\n    display: block;\n  }\n`;\n\nconst TypeItem = styled.li`\n  width: 100%;\n  height: 24px;\n  border-radius: 3px;\n  display: flex;\n  align-items: center;\n  background-color: white;\n  cursor: pointer;\n\n  &:hover {\n    background: #00000009;\n  }\n\n  span {\n    pointer-events: none;\n  }\n`;\n\nconst CheckedIcon = styled.span`\n  display: inline-block;\n  width: 30px;\n  text-align: center;\n`;\n\nexport { NewTodoContainer, Input, SelectType, DefaultType, Color, DropDown, TypeItem, CheckedIcon };\n","import React, { useEffect, useRef } from 'react';\nimport { RiArrowDropDownLine } from 'react-icons/ri';\nimport { CgCheck } from 'react-icons/cg';\nimport useOnClickOutside from '../../hooks/useOnClickOutside';\nimport {\n  NewTodoContainer,\n  Input,\n  SelectType,\n  DefaultType,\n  Color,\n  DropDown,\n  TypeItem,\n  CheckedIcon\n} from './style';\n\nfunction NewTodo({\n  handleInputChange,\n  todo,\n  isColorBoxClicked,\n  setIsColorBoxClicked,\n  selectTypeColor,\n  showSelectTypeColorDropDown,\n  handleSelectType\n}) {\n  const selectTypeColorList = ['important', 'work', 'study', 'other'];\n  const inputRef = useRef();\n  const selectTypeDivRef = useRef();\n\n  useEffect(() => {\n    // when enabled, it takes away focus every time AddNewTodoForm gets re-render\n    // when changing time with arrow key\n    // needs fix in the future\n    // inputRef.current.focus();\n  });\n\n  // hide the dropdown\n  useOnClickOutside(selectTypeDivRef, () => setIsColorBoxClicked(false));\n\n  return (\n    <NewTodoContainer>\n      <Input\n        ref={inputRef}\n        type=\"text\"\n        onChange={handleInputChange}\n        value={todo.task}\n        placeholder=\"New task\"\n      />\n\n      <SelectType ref={selectTypeDivRef}>\n        <DefaultType onClick={showSelectTypeColorDropDown}>\n          <li>\n            <Color className={selectTypeColor}></Color>\n            <span>\n              <RiArrowDropDownLine />\n            </span>\n          </li>\n        </DefaultType>\n\n        <DropDown className={`${isColorBoxClicked ? 'show-dropdown' : ''}`} onClick={handleSelectType}>\n          {selectTypeColorList.map((colorType) => (\n            <SelectColorTypeList key={colorType} selectTypeColor={selectTypeColor} colorType={colorType} />\n          ))}\n        </DropDown>\n      </SelectType>\n    </NewTodoContainer>\n  );\n}\n\nexport default NewTodo;\n\nfunction SelectColorTypeList({ selectTypeColor, colorType }) {\n  return (\n    <TypeItem data-color-type={colorType}>\n      <CheckedIcon>{selectTypeColor === colorType ? <CgCheck /> : null}</CheckedIcon>\n      <Color className={colorType}></Color>\n      <span>{colorType}</span>\n    </TypeItem>\n  );\n}\n","import styled from 'styled-components';\nimport { colors } from '../../styles/GlobalStyle';\n\nconst AddNewTodoFormContainer = styled.form`\n  width: 250px;\n  height: 250px;\n  display: flex;\n  flex-direction: column;\n  position: absolute;\n  top: 0;\n  right: 45px;\n  padding: 10px 25px 10px 25px;\n  background-color: white;\n  border-radius: 8px;\n  box-shadow: 0 2px 10px 0 rgba(0, 0, 0, 0.2);\n  outline: none;\n  z-index: 2; /* otherwise it will be placed underneath todo item */\n  display: none;\n\n  &.show-add-new-todo-form {\n    display: flex;\n  }\n\n  &:before {\n    content: '';\n    display: block;\n    width: 0;\n    position: absolute;\n    top: 50%;\n    transform: translateY(-50%);\n    right: -15px;\n    border-color: rgba(0, 0, 0, 0) ${colors.formBg};\n    border-style: solid;\n    border-width: 15px;\n    border-right-width: 0;\n  }\n`;\n\nconst SubmitButton = styled.button`\n  margin-top: auto;\n  background-color: white;\n  border: 1px solid #c6c5ff;\n  border-radius: 3px;\n  padding: 0.5rem 0;\n  color: $purple;\n  outline: none;\n  cursor: pointer;\n\n  &:hover {\n    background-color: #7472ff;\n    border: none;\n    color: white;\n  }\n`;\n\nexport { AddNewTodoFormContainer, SubmitButton };\n","import React, { useState, useContext, useRef } from 'react';\nimport shortid from 'shortid';\nimport NewTodo from '../NewTodo';\nimport DatePicker from 'react-datepicker';\nimport 'react-datepicker/dist/react-datepicker.css';\nimport useOnClickOutside from '../../hooks/useOnClickOutside';\nimport { GlobalContext } from '../../contexts/GlobalState';\nimport { AddNewTodoFormContainer, SubmitButton } from './style';\n\nfunction AddNewTodoForm() {\n  const { today, isAddNewTodoClicked, toggleIsAddNewTodoClicked, addTodo } = useContext(GlobalContext);\n  const [startDate, setStartDate] = useState(new Date());\n  const [isColorBoxClicked, setIsColorBoxClicked] = useState(false);\n  const [todo, setTodo] = useState({\n    id: null,\n    task: '',\n    timestamp: new Date().getTime(),\n    type: 'important',\n    completed: false,\n    dateInfo: {\n      year: today.year,\n      month: today.month,\n      date: today.date,\n      day: today.day,\n      hour: today.hour,\n      minute: today.minute\n    }\n  });\n  const formmRef = useRef();\n\n  const handleInputChange = (e) => {\n    setTodo({\n      ...todo,\n      task: e.target.value\n    });\n  };\n\n  const showSelectTypeColorDropDown = () => {\n    setIsColorBoxClicked(!isColorBoxClicked);\n  };\n\n  const handleSelectType = (e) => {\n    setIsColorBoxClicked(!isColorBoxClicked);\n    setTodo({\n      ...todo,\n      type: e.target.dataset.colorType\n    });\n  };\n\n  const handleDateSelect = (e) => {\n    setStartDate(e);\n    setTodo({\n      ...todo,\n      timestamp: new Date(e.getFullYear(), e.getMonth(), e.getDate(), e.getHours(), e.getMinutes()).getTime(),\n      dateInfo: {\n        year: e.getFullYear(),\n        month: e.getMonth(),\n        date: e.getDate(),\n        day: e.toLocaleString('default', { weekday: 'long' }),\n        hour: e.getHours(),\n        minute: e.getMinutes()\n      }\n    });\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    const newTodo = {\n      ...todo,\n      id: shortid.generate(),\n      task: todo.task\n    };\n\n    if (todo.task.trim()) {\n      addTodo(newTodo);\n    }\n\n    setTodo({ ...todo, task: '' });\n    toggleIsAddNewTodoClicked();\n  };\n\n  useOnClickOutside(formmRef, toggleIsAddNewTodoClicked);\n\n  return (\n    <AddNewTodoFormContainer\n      action=\"\"\n      ref={formmRef}\n      onSubmit={handleSubmit}\n      onClick={(e) => {\n        e.stopPropagation();\n      }}\n      className={`${isAddNewTodoClicked ? ' show-add-new-todo-form' : ''}`}\n    >\n      <NewTodo\n        handleInputChange={handleInputChange}\n        todo={todo}\n        isColorBoxClicked={isColorBoxClicked}\n        setIsColorBoxClicked={setIsColorBoxClicked}\n        selectTypeColor={todo.type}\n        showSelectTypeColorDropDown={showSelectTypeColorDropDown}\n        handleSelectType={handleSelectType}\n      />\n\n      <DatePicker\n        selected={startDate}\n        onChange={handleDateSelect}\n        timeInputLabel=\"Time:\"\n        showWeekNumbers\n        minDate={new Date()}\n        showTimeInput\n        shouldCloseOnSelect={false}\n      />\n\n      <SubmitButton type=\"submit\">Add new task</SubmitButton>\n    </AddNewTodoFormContainer>\n  );\n}\n\nexport default AddNewTodoForm;\n","import gsap from 'gsap';\n\nconst todoListAnimation = () => {\n  const tl = gsap.timeline();\n\n  tl.to(\n    '.todo-item',\n    {\n      duration: 1,\n      ease: 'power4.out',\n      y: 0,\n      opacity: 1,\n      stagger: { amount: 0.4 }\n    },\n    0.1\n  );\n};\n\nexport default todoListAnimation;\n","import styled from 'styled-components';\nimport { colors } from '../../styles/GlobalStyle';\n\nconst TodoItemContainer = styled.li`\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n  padding: 0.7rem 1.1rem;\n  border-radius: 30px;\n  background-color: white;\n  border: 1px solid rgba(0, 0, 0, 0.058);\n  box-shadow: 0 2px 10px 2px rgba(0, 0, 0, 0.03);\n  transform: translateY(30px); /* animation */\n  font-size: 16px;\n  opacity: 0;\n`;\n\nconst Background = styled.span`\n  &.important {\n    background-color: ${colors.purple};\n  }\n\n  &.work {\n    background-color: ${colors.blue};\n  }\n\n  &.study {\n    background-color: ${colors.pink};\n  }\n\n  &.other {\n    background-color: ${colors.orange};\n  }\n`;\n\nconst TypeBar = styled(Background)`\n  display: block;\n  width: 0.3em;\n  height: 1em;\n  border-radius: 0.31em;\n  margin-right: 0.5em;\n  background-color: ${colors.purple};\n`;\n\nconst Checkbox = styled(Background)`\n  display: block;\n  border: 1px solid #c1c3c6;\n  width: 0.9em;\n  height: 0.9em;\n  border-radius: 0.35em;\n  margin-right: 0.5em;\n  cursor: pointer;\n  transition: background-color 0.05s linear;\n\n  &.completed {\n    background-image: url('data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2232%22%20height%3D%2232%22%20viewBox%3D%220%200%2032%2032%22%3E%3Cpath%20d%3D%22M13.613%2027.068l-7.94-7.28q-.285-.267-.442-.613t-.172-.7.11-.71.394-.638q.52-.583%201.3-.614T8.225%2017l6.13%205.626%208.79-17q.363-.693%201.104-.93t1.433.118.93%201.103-.126%201.442L16.56%2026.55q-.204.394-.558.654t-.78.34q-.063.015-.118.023t-.11.008-.102%200q-.74%200-1.276-.504z%22%20fill%3D%22%23FFF%22/%3E%3C/svg%3E');\n    border: none;\n    background-size: 0.625em; /* default */\n    background-repeat: no-repeat;\n    background-position: center center;\n  }\n`;\n\nconst Task = styled.span`\n  font-size: 0.73em;\n  font-weight: 600;\n  word-break: break-all;\n`;\n\nconst More = styled.div`\n  margin-left: auto;\n  display: flex;\n  cursor: pointer;\n\n  /* bin / more icons */\n  svg {\n    margin: 0 1rem;\n    color: rgba(0, 0, 0, 0.699);\n  }\n\n  svg:hover {\n    color: $purple;\n    transition: background-color 0.08s ease-in-out;\n  }\n\n  svg:last-child {\n    margin: 0;\n  }\n`;\n\nexport { TodoItemContainer, TypeBar, Checkbox, Task, More };\n","import React, { useContext, useEffect } from 'react';\nimport todoListAnimation from '../../animations/todoListAnimation';\nimport { CgTrash } from 'react-icons/cg';\nimport { AiOutlineMore } from 'react-icons/ai';\nimport { GlobalContext } from '../../contexts/GlobalState';\nimport { TodoItemContainer, TypeBar, Checkbox, Task, More } from './style';\n\nfunction TodoItem({ todo }) {\n  const { removeTodo, toggleComplete } = useContext(GlobalContext);\n\n  useEffect(() => {\n    todoListAnimation();\n  }, [todo]);\n\n  return (\n    <TodoItemContainer className=\"todo-item\">\n      <div>\n        <TypeBar className={`${todo.type}`}></TypeBar>\n      </div>\n      <div>\n        <Checkbox\n          className={`${todo.completed ? 'completed ' + todo.type : ''}`}\n          onClick={() => toggleComplete(todo.id)}\n        ></Checkbox>\n      </div>\n      <div>\n        <Task>{todo.task}</Task>\n      </div>\n      <More>\n        <CgTrash onClick={() => removeTodo(todo.id)} />\n        <AiOutlineMore />\n      </More>\n    </TodoItemContainer>\n  );\n}\n\nexport default TodoItem;\n","import gsap from 'gsap';\n\nconst homeAnimation = () => {\n  const tl = gsap.timeline();\n\n  tl.to('.initial-message', {\n    duration: 0.8,\n    ease: 'power4.out',\n    y: 0,\n    opacity: 1\n  }).to('.point-down-icon', {\n    duration: 0.5,\n    opacity: 1,\n    delay: -0.5\n  });\n};\n\nexport default homeAnimation;\n","import React, { useContext, useState, useEffect, useRef } from 'react';\nimport {\n  HomeMainContainer,\n  HomeMainWrapper,\n  Title,\n  Arrows,\n  InitialMessageContainer,\n  Message,\n  Overlay\n} from './style';\nimport { mod } from '../../utils/utils';\nimport AddNewTodoForm from '../AddNewTodoForm';\nimport TodoItem from '../TodoItem';\nimport * as MdIcons from 'react-icons/md';\nimport { FaRegHandPointDown } from 'react-icons/fa';\nimport homeAnimation from '../../animations/homeAnimation';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction HomeMain() {\n  const { today, todoList, isAddNewTodoClicked, toggleIsAddNewTodoClicked } = useContext(GlobalContext);\n\n  const [todoIndex, setTodoIndex] = useState(0);\n  const homeMainDivRef = useRef();\n  const [homeMainDivTouching, setHomeMainDivTouching] = useState(false);\n\n  const todoToday = todoList.filter(\n    (todo) =>\n      todo.dateInfo.year === today.year &&\n      todo.dateInfo.month === today.month &&\n      todo.dateInfo.date === today.date\n  );\n  const focusOnThisTodo = todoToday[todoIndex];\n\n  const getPrevTodo = () => {\n    setTodoIndex((prev) => mod(prev - 1, todoToday.length));\n  };\n\n  const getNextTodo = () => {\n    setTodoIndex((prev) => (prev + 1) % todoToday.length);\n  };\n\n  const absoluteCenter = {\n    position: 'absolute',\n    top: '50%',\n    left: '50%',\n    transform: 'translate(-50%, -50%)'\n  };\n\n  useEffect(() => {\n    if (homeMainDivRef.current) {\n      const currentTop = homeMainDivRef.current.getBoundingClientRect().top;\n      // nav-height-bg 72px + time-display 50px = 130\n      // set the div to display block so that\n      // it stays below time display when shrinking small\n      if (currentTop < 130) {\n        setHomeMainDivTouching(true);\n        if (window.innerHeight > 544) {\n          setHomeMainDivTouching(false);\n        }\n      }\n    }\n  }, []);\n\n  return (\n    <>\n      <HomeMainContainer>\n        <HomeMainWrapper\n          className={` ${isAddNewTodoClicked ? 'z-index' : ''}`}\n          ref={homeMainDivRef}\n          style={homeMainDivTouching ? null : absoluteCenter}\n        >\n          {focusOnThisTodo ? (\n            <>\n              <Title>Focus on this now</Title>\n              <TodoItem key={focusOnThisTodo.id} todo={focusOnThisTodo} />\n              <Arrows>\n                <MdIcons.MdKeyboardArrowLeft className=\"arrow arrow-back\" onClick={getPrevTodo} />\n                <MdIcons.MdKeyboardArrowRight className=\"arrow arrow-next\" onClick={getNextTodo} />\n              </Arrows>\n            </>\n          ) : (\n            <>\n              <InitialMessage showAddNewTodoForm={toggleIsAddNewTodoClicked} />\n              {isAddNewTodoClicked ? (\n                <>\n                  <AddNewTodoForm />\n                </>\n              ) : null}\n            </>\n          )}\n        </HomeMainWrapper>\n      </HomeMainContainer>\n\n      {isAddNewTodoClicked && !focusOnThisTodo ? <Overlay></Overlay> : null}\n    </>\n  );\n}\n\nexport default HomeMain;\n\nfunction InitialMessage({ showAddNewTodoForm }) {\n  useEffect(() => {\n    homeAnimation();\n  }, []);\n\n  return (\n    <InitialMessageContainer onClick={showAddNewTodoForm}>\n      <FaRegHandPointDown className=\"point-down-icon\" />\n      <Message>What's your todo today?</Message>\n    </InitialMessageContainer>\n  );\n}\n","export function mod(n, m) {\n  return ((n % m) + m) % m;\n}\n","import React from 'react';\nimport { HomeContainer } from './style';\nimport TimeDisplay from '../../components/TimeDisplay/index';\nimport HomeMain from '../../components/HomeMain/index';\n\nfunction Home() {\n  return (\n    <HomeContainer>\n      <TimeDisplay />\n      <HomeMain />\n    </HomeContainer>\n  );\n}\n\nexport default Home;\n","import React from 'react';\nimport TodoItem from '../TodoItem';\n\nfunction TodoList({ size, todosToday }) {\n  return (\n    <ul className=\"todo-list\">\n      {todosToday.map((todo) => (\n        <TodoItem key={todo.id} todo={todo} size={size} />\n      ))}\n    </ul>\n  );\n}\n\nexport default TodoList;\n","import styled, { css } from 'styled-components';\n\nconst Container = styled.div`\n  padding-left: var(--container-padding);\n  padding-right: var(--container-padding);\n`;\n\nconst MainContainer = styled.main`\n  height: calc(100vh - var(--nav-height)); // fallback\n  height: calc(var(--mobile-100vh-fix) - var(--nav-height));\n  margin-top: var(--nav-height);\n  display: flex;\n  background-color: white;\n\n  @media (min-width: 750px) {\n    padding-top: var(--nav-height-bg);\n  }\n\n  .weekly {\n    position: relative;\n    height: auto;\n\n    @media (min-width: 900px) {\n      height: calc(var(--mobile-100vh-fix) - var(--nav-height));\n    }\n  }\n\n  .monthly {\n    height: auto;\n\n    @media (min-width: 1100px) {\n      height: calc(var(--mobile-100vh-fix) - var(--nav-height));\n    }\n\n    /* when min-width is greater than 1300px but in short landscape mode */\n    @media (min-width: 1100px) and (max-height: 750px) {\n      height: auto;\n    }\n  }\n`;\n\nconst Main = styled(Container)`\n  width: 100%;\n\n  @media (min-width: 750px) {\n    flex-basis: 75%;\n  }\n`;\n\nconst Side = styled.aside`\n  background-color: rgb(250, 250, 250);\n\n  @media (min-width: 750px) {\n    flex-basis: 25%;\n  }\n`;\n\nconst Select = styled.select`\n  border: 1px solid #aaa;\n  border: 1px solid rgba(170, 170, 170, 0.193);\n  padding: 2px 0 2px 5px;\n  border-radius: 5px;\n  appearance: none;\n  -moz-appearance: none;\n  -webkit-appearance: none;\n  outline: none;\n  background-color: white;\n  background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%23007CB2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E');\n  background-repeat: no-repeat;\n  background-position: right 0.7rem top 50%;\n  background-size: 0.65em auto, 100%;\n  cursor: pointer;\n\n  &::-ms-expand {\n    display: none;\n  }\n`;\n\nconst ListWrapper = styled.div`\n  margin-bottom: 5em;\n\n  ${(props) =>\n    props.sm &&\n    css`\n      max-width: 520px;\n\n      @media (min-width: 750px) {\n        min-width: 360px;\n      }\n\n      @media (min-width: 900px) {\n        margin-right: 5rem;\n      }\n    `}\n\n  ${(props) =>\n    props.md &&\n    css`\n      max-width: 700px;\n    `}\n\n    ${(props) =>\n    props.overdue &&\n    css`\n      position: relative;\n\n      h2 {\n        display: flex;\n        align-items: center;\n\n        .pin-icon {\n          font-size: 0.75em;\n          margin-left: 5px;\n          padding-top: 2px;\n        }\n      }\n    `}\n\n    ${(props) =>\n    props.overdueMd &&\n    css`\n      padding-bottom: 2em;\n\n      &::before {\n        content: '';\n        position: absolute;\n        bottom: -10px;\n        width: 100%;\n        height: 1px;\n        background-color: rgba(0, 0, 0, 0.062);\n      }\n    `}\n`;\n\nconst Heading = styled.h2`\n  font-size: 1em;\n  margin-bottom: 2.3rem;\n\n  @media (min-width: 900px) {\n    font-size: 1.5em;\n    margin-bottom: 3rem;\n  }\n`;\n\nexport { MainContainer, Main, Side, Select, ListWrapper, Heading };\n","import styled from 'styled-components';\nimport { Select } from '../../styles/shared';\n\nconst View = styled(Select)`\n  width: 70px;\n`;\n\nexport { View };\n","import React, { useContext, useEffect } from 'react';\nimport { withRouter } from 'react-router-dom';\nimport { GlobalContext } from '../../contexts/GlobalState';\nimport { View } from './style';\n\nfunction SelectView({ history, location }) {\n  const { selectedView, updateSelectedView } = useContext(GlobalContext);\n\n  // history.push : change the page and url\n  const handleSelectedViewChange = (e) => {\n    history.push(`/${e.target.value}`);\n    updateSelectedView(e.target.value);\n  };\n\n  // when mounted, get the current url and always update the selectedView\n  // it updates the state when user clicks on go back button in the browser\n  useEffect(() => {\n    const currentView = location.pathname.slice(1, location.pathname.length);\n    updateSelectedView(currentView);\n  });\n\n  return (\n    <View value={selectedView} onChange={handleSelectedViewChange}>\n      <option value=\"daily\">Day</option>\n      <option value=\"weekly\">Week</option>\n      <option value=\"monthly\">Month</option>\n    </View>\n  );\n}\n\nexport default withRouter(SelectView);\n","import styled from 'styled-components';\nimport { colors } from '../../styles/GlobalStyle';\nimport { Select } from '../../styles/shared';\n\nconst SelectSortContainer = styled.div`\n  width: 150px;\n  display: flex;\n`;\n\nconst SortByText = styled.span`\n  margin-right: 0.5rem;\n  font-size: 0.8rem;\n  color: ${colors.lightBlack};\n`;\n\nconst Sort = styled(Select)`\n  width: 97px;\n  font-weight: 500;\n`;\n\nexport { SelectSortContainer, SortByText, Sort };\n","import React, { useContext } from 'react';\nimport { GlobalContext } from '../../contexts/GlobalState';\nimport { SelectSortContainer, SortByText, Sort } from './style';\n\nfunction SelectSort() {\n  const { selectedSort, updateSelectedSort } = useContext(GlobalContext);\n  const handleSelectedSortChange = (e) => {\n    updateSelectedSort(e.target.value);\n  };\n\n  return (\n    <SelectSortContainer>\n      <SortByText>sort by</SortByText>\n      <Sort value={selectedSort} onChange={handleSelectedSortChange}>\n        <option value=\"oldest\">oldest</option>\n        <option value=\"newest\">newest</option>\n        <option value=\"tag\">tag</option>\n        <option value=\"completed\">completed</option>\n        <option value=\"active\">active</option>\n      </Sort>\n    </SelectSortContainer>\n  );\n}\n\nexport default SelectSort;\n","import styled from 'styled-components';\n\nconst HeaderContainer = styled.header`\n  height: var(--header-height);\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  padding-top: 34.06px; /* (header-height (120px) - flex-1 height(51.88px) /2) */\n  margin-bottom: 1.8em;\n\n  @media (min-width: 550px) {\n    padding-top: 0;\n  }\n`;\n\nconst Row1 = styled.div`\n  display: flex;\n  align-items: center;\n  flex-basis: 100%;\n\n  @media (min-width: 550px) {\n    flex-basis: auto;\n    margin-right: 3rem;\n  }\n`;\n\nconst Row1_1 = styled.div`\n  margin-right: 1rem;\n\n  .title {\n    margin-right: 1rem;\n    font-size: 1.6rem;\n\n    @media (min-width: 900px) {\n      font-size: 2rem;\n    }\n  }\n`;\n\nconst Row2Col1 = styled.div`\n  display: flex;\n  align-items: center;\n  flex-basis: 50%;\n\n  @media (min-width: 550px) {\n    flex-basis: auto;\n  }\n`;\n\nconst Row2Col2 = styled.div`\n  display: flex;\n  align-items: center;\n  flex-basis: 45%;\n  justify-content: flex-end;\n  margin-left: auto;\n\n  @media (min-width: 550px) {\n    flex-basis: auto;\n  }\n\n  .add-new-todo-icon {\n    font-size: 1.5em;\n    stroke-width: 1px;\n    cursor: pointer;\n  }\n`;\n\nexport { HeaderContainer, Row1, Row1_1, Row2Col1, Row2Col2 };\n","import React, { useContext } from 'react';\nimport SelectView from '../SelectView';\nimport SelectSort from '../SelectSort';\nimport AddNewTodoForm from '../AddNewTodoForm';\nimport { FiPlus } from 'react-icons/fi';\nimport { GlobalContext } from '../../contexts/GlobalState';\nimport { HeaderContainer, Row1, Row1_1, Row2Col1, Row2Col2 } from './style';\n\nfunction Header({ title }) {\n  const { isAddNewTodoClicked, toggleIsAddNewTodoClicked } = useContext(GlobalContext);\n\n  return (\n    <HeaderContainer>\n      <Row1>\n        <Row1_1>\n          <h1 className=\"title\">{title}</h1>\n        </Row1_1>\n\n        <div>\n          <SelectView />\n        </div>\n      </Row1>\n\n      <Row2Col1>\n        <SelectSort />\n      </Row2Col1>\n\n      <Row2Col2>\n        <FiPlus className=\"add-new-todo-icon\" onClick={toggleIsAddNewTodoClicked} />\n        {isAddNewTodoClicked ? <AddNewTodoForm /> : null}\n      </Row2Col2>\n    </HeaderContainer>\n  );\n}\n\nexport default Header;\n","import styled from 'styled-components';\n\nconst NoTodoMessage = styled.span`\n  display: block;\n  padding-bottom: 1rem;\n  padding-left: 1em;\n  color: rgba(0, 0, 0, 0.24);\n`;\n\nexport { NoTodoMessage };\n","import React, { useContext } from 'react';\nimport TodoList from '../../components/TodoList';\nimport Header from '../../components/Header';\nimport { RiPushpin2Line } from 'react-icons/ri';\nimport { GlobalContext } from '../../contexts/GlobalState';\nimport { MainContainer, Main, Side, ListWrapper, Heading } from '../../styles/shared';\nimport { NoTodoMessage } from './style';\n\nfunction Daily() {\n  const {\n    today,\n    selectedSort,\n    todoList,\n    sortedTodoList,\n    overdueTodoList,\n    sortedOverdueTodoList\n  } = useContext(GlobalContext);\n\n  const todosToday = (todos) => {\n    return todos.filter(\n      (todo) =>\n        todo.dateInfo.year === today.year &&\n        todo.dateInfo.month === today.month &&\n        todo.dateInfo.date === today.date\n    );\n  };\n\n  const unsortedTodosToday = todosToday(todoList);\n  const sortedTodosToday = todosToday(sortedTodoList);\n\n  const showNoTodoMessage = (isOverdueList) => {\n    let unSortedTodos = isOverdueList ? overdueTodoList : unsortedTodosToday;\n    let sortedTodos = isOverdueList ? sortedOverdueTodoList : sortedTodosToday;\n    let message;\n\n    if (!unSortedTodos.length) {\n      message = 'Add new todo at the top right corner';\n    } else if (selectedSort === 'completed' && !sortedTodos.length && unSortedTodos.length) {\n      message = isOverdueList ? 'No completed overdue todos yet' : 'No completed todos yet';\n    } else if (selectedSort === 'active' && !sortedTodos.length && unSortedTodos.length) {\n      message = isOverdueList ? 'All overdue todos are completed' : 'All todos are completed';\n    }\n\n    return message;\n  };\n\n  return (\n    <MainContainer className=\"daily\">\n      <Main>\n        <Header title={'Today'} />\n        {overdueTodoList.length ? (\n          <ListWrapper md overdueMd>\n            <Heading>\n              Overdue <RiPushpin2Line />\n            </Heading>\n            <TodoList todosToday={sortedOverdueTodoList} isOverdueList />\n            <NoTodoMessage>{showNoTodoMessage(true)}</NoTodoMessage>\n          </ListWrapper>\n        ) : null}\n\n        <ListWrapper md>\n          <TodoList todosToday={sortedTodosToday} />\n          <NoTodoMessage>{showNoTodoMessage()}</NoTodoMessage>\n        </ListWrapper>\n      </Main>\n      <Side></Side>\n    </MainContainer>\n  );\n}\n\nexport default Daily;\n","import styled from 'styled-components';\nimport { Heading } from '../../styles/shared';\n\nconst WeeklyList = styled.div`\n  width: 100%;\n  overflow-y: scroll;\n  /* to prevent box-shadow cut off on the left/right edge due to position absolute */\n  padding: 0 4.5px;\n\n  /* make horizontal scroll bar transparent */\n  &::-webkit-scrollbar {\n    display: none;\n  }\n\n  @media (min-width: 900px) {\n    display: flex;\n    position: absolute;\n    overflow-x: scroll;\n    width: calc(75% - 50px);\n    /* fix for firefox */\n    scrollbar-width: none;\n  }\n`;\n\nconst ListHeading = styled(Heading)`\n  span {\n    font-weight: lighter;\n    font-size: 1rem;\n    color: rgba(0, 0, 0, 0.171);\n    margin-left: 0.4rem;\n  }\n\n  .date-ordinal {\n    margin-left: 0;\n  }\n`;\n\nexport { WeeklyList, ListHeading };\n","import React, { useContext } from 'react';\nimport Header from '../../components/Header';\nimport TodoList from '../../components/TodoList';\nimport { RiPushpin2Line } from 'react-icons/ri';\nimport { GlobalContext } from '../../contexts/GlobalState';\nimport { MainContainer, Main, Side, ListWrapper } from '../../styles/shared';\nimport { WeeklyList, ListHeading } from './style';\n\nfunction Weekly() {\n  const { today, sortedTodoList, overdueTodoList, sortedOverdueTodoList } = useContext(GlobalContext);\n\n  const generateTodos = (todos, counter) => {\n    return todos.filter(\n      (todo) =>\n        todo.dateInfo.year === today.year &&\n        todo.dateInfo.month === today.month &&\n        todo.dateInfo.date === today.date + counter\n    );\n  };\n\n  let thisWeek = [];\n  for (let i = 0; i < 7; i++) {\n    const nextDayConstructor = new Date(today.year, today.month, today.date + i);\n\n    const eachDay = {\n      dateInfo: {\n        year: nextDayConstructor.getFullYear(),\n        month: nextDayConstructor.getMonth(),\n        date: nextDayConstructor.getDate(),\n        day: nextDayConstructor.toLocaleString('default', { weekday: 'long' })\n      },\n      todos: generateTodos(sortedTodoList, i)\n    };\n\n    thisWeek.push(eachDay);\n  }\n\n  thisWeek[0].dateInfo.day = 'Today';\n  thisWeek[1].dateInfo.day = 'Tomorrow';\n\n  const getOrdinalNum = function (eachDay) {\n    if (eachDay.dateInfo > 3 && eachDay.dateInfo < 21) return 'th';\n    switch (eachDay.dateInfo % 10) {\n      case 1:\n        return 'st';\n      case 2:\n        return 'nd';\n      case 3:\n        return 'rd';\n      default:\n        return 'th';\n    }\n  };\n\n  return (\n    <MainContainer className=\"weekly\">\n      <Main>\n        <Header title={'Weekly'} />\n\n        <WeeklyList>\n          {overdueTodoList.length ? (\n            <ListWrapper sm overdue>\n              <ListHeading>\n                Overdue <RiPushpin2Line />\n              </ListHeading>\n\n              <TodoList todosToday={sortedOverdueTodoList} isOverdueList />\n            </ListWrapper>\n          ) : null}\n\n          {thisWeek.map((eachDay) => (\n            <ListWrapper key={eachDay.dateInfo.date} sm>\n              <ListHeading>\n                {eachDay.dateInfo.day} <span className=\"date\">{eachDay.dateInfo.date}</span>\n                <span className=\"date-ordinal\">{getOrdinalNum(eachDay.dateInfo)}</span>\n              </ListHeading>\n\n              <TodoList todosToday={eachDay.todos} />\n            </ListWrapper>\n          ))}\n        </WeeklyList>\n      </Main>\n\n      <Side></Side>\n    </MainContainer>\n  );\n}\n\nexport default Weekly;\n","import styled from 'styled-components';\n\nconst MonthlyHeaderContainer = styled.header`\n  height: var(--header-height);\n  position: relative;\n  display: flex;\n  flex-wrap: wrap;\n  padding-top: 34.06px; /* (header-height (120px) - flex-1 height(51.88px) /2) */\n  margin-bottom: 1.8em;\n`;\n\nconst Row1 = styled.div`\n  display: flex;\n  align-items: center;\n  flex-basis: 100%;\n\n  @media (min-width: 550px) {\n    flex-basis: auto;\n    margin-right: 3rem;\n  }\n`;\n\nconst Row1_1 = styled.div`\n  margin-right: 0;\n\n  .title {\n    margin-right: 1rem;\n    width: 110px; /* to prevent moving when switching to different month */\n    font-size: 1.6rem;\n\n    @media (min-width: 550px) {\n      width: 167.38px;\n    }\n\n    @media (min-width: 900px) {\n      font-size: 2rem;\n    }\n  }\n`;\n\nconst Row1_2 = styled.div`\n  display: flex;\n  align-items: center;\n  margin-right: 1rem;\n  font-size: 1.2rem;\n  width: 41px;\n\n  // arrow icons\n  svg {\n    cursor: pointer;\n  }\n`;\n\nconst Row1_3 = styled.div`\n  margin-left: auto;\n`;\n\nconst Row2Col2 = styled.div`\n  display: flex;\n  align-items: center;\n  margin-left: auto;\n  flex-basis: 50%;\n  order: 1;\n  justify-content: flex-end;\n\n  @media (min-width: 550px) {\n    order: 0;\n    margin-left: auto;\n    flex-basis: auto;\n  }\n\n  .add-new-todo-icon {\n    font-size: 1.5em;\n    stroke-width: 1px;\n    cursor: pointer;\n  }\n`;\n\nconst Row2Col1 = styled.div`\n  display: flex;\n  align-items: center;\n  flex-basis: 50%;\n  justify-content: flex-start;\n  font-size: 0.75em;\n\n  @media (min-width: 550px) {\n    flex-basis: 100%;\n  }\n\n  .today-btn {\n    margin-left: 2.5em;\n    background-color: transparent;\n    padding: 0.15em 0.5em 0.15em 0.5em;\n    border-radius: 8px;\n    border: 1px solid rgba(0, 0, 0, 0.253);\n    outline: none;\n    cursor: pointer;\n\n    &:hover {\n      background-color: rgba(0, 0, 0, 0.03);\n    }\n  }\n`;\n\nexport { MonthlyHeaderContainer, Row1, Row1_1, Row1_2, Row1_3, Row2Col2, Row2Col1 };\n","import React, { useContext } from 'react';\nimport SelectView from '../SelectView';\nimport AddNewTodoForm from '../AddNewTodoForm';\nimport * as MdIcons from 'react-icons/md';\nimport { FiPlus } from 'react-icons/fi';\nimport { GlobalContext } from '../../contexts/GlobalState';\nimport { MonthlyHeaderContainer, Row1, Row1_1, Row1_2, Row1_3, Row2Col2, Row2Col1 } from './style';\n\nfunction MonthlyHeader({ currentMonthName, selectedYear, moveToPrevMonth, moveToNextMonth, goBackToToday }) {\n  const { isAddNewTodoClicked, toggleIsAddNewTodoClicked } = useContext(GlobalContext);\n\n  return (\n    <MonthlyHeaderContainer>\n      <Row1>\n        <Row1_1>\n          <h1 className=\"title\">{currentMonthName}</h1>\n        </Row1_1>\n\n        <Row1_2>\n          <MdIcons.MdKeyboardArrowLeft onClick={moveToPrevMonth} />\n          <MdIcons.MdKeyboardArrowRight onClick={moveToNextMonth} />\n        </Row1_2>\n\n        <Row1_3>\n          <SelectView />\n        </Row1_3>\n      </Row1>\n\n      <Row2Col2>\n        <FiPlus className=\"add-new-todo-icon\" onClick={toggleIsAddNewTodoClicked} />\n        {isAddNewTodoClicked ? <AddNewTodoForm /> : null}\n      </Row2Col2>\n\n      <Row2Col1>\n        <span className=\"this-year\">{selectedYear}</span>\n        <button className=\"today-btn\" onClick={goBackToToday}>\n          today\n        </button>\n      </Row2Col1>\n    </MonthlyHeaderContainer>\n  );\n}\n\nexport default MonthlyHeader;\n","import styled from 'styled-components';\n\nconst MonthlyListContainer = styled.section`\n    flex: 1.2;\n    margin-top: 6rem;\n    position: relative;\n\n    @media (min-width: 1100px) {\n        flex: 1;\n        border-left: 1px solid rgba(0, 0, 0, 0.118);\n        margin-top: 0;\n        padding-left: 3rem;\n        padding-right: 1rem;\n    }\n`\n\nconst SearchForm = styled.form`\n    width: 96%;\n    height: 27px;\n    display: flex;\n    align-items: center;\n    padding-left: 0.4em;\n    margin-bottom: 1.8em;\n    background-color: rgb(241, 241, 243);\n    border-radius: 5px;\n    position: relative;\n\n    @media (min-width: 1550px) {\n        height: 35px;\n        margin-bottom: 1.6em;\n    }\n\n    .search-icon {\n        position: absolute;\n        width: 12px;\n        height: 12px;\n\n        @media (min-width: 1550px) {\n        width: 16px;\n        height: 16px;\n        }\n    }\n\n    input {\n        flex: 1;\n        height: 100%;\n        margin-left: 1.5em;\n        margin-left: 2em;\n        border: none;\n        background-color: transparent;\n        outline: none;\n        padding-bottom: 2px;\n\n        &::placeholder {\n        font-size: 1em;\n        line-height: 17px;\n\n        @media (min-width: 550px) {\n            font-size: 0.83em;\n            line-height: 20px;\n        }\n        }\n    }\n`\n\nconst MonthName = styled.h2`\n    color: rgba(0, 0, 0, 0.781);\n    font-size: 1em;\n    height: 18px;\n    margin-bottom: 1.5em;\n\n    @media (min-width: 1550px) {\n        font-size: 1.5em;\n        height: 29px;\n        margin-bottom: 1.3em;\n    }\n\n    .todos-length {\n        margin-left: 5px;\n    }\n`\n\nconst ListWrapper = styled.ul`\n    height: 500px;\n    padding-right: 1em;\n    overflow-y: scroll;\n    -webkit-overflow-scrolling: touch;\n\n    /* 100% - (form height + form mg bottom + monthlyList title height + monthly title mg bottom) */\n    @media (min-width: 1100px) {\n        height: calc(100% - 45px - 3.3em);\n    }\n\n    @media (min-width: 1550px) {\n        height: calc(100% - 64px - 2.9em);\n    }\n`\n\nexport {MonthlyListContainer, SearchForm, MonthName, ListWrapper}","import styled from 'styled-components';\nimport { colors } from '../../styles/GlobalStyle';\n\nconst ListItemContainer = styled.li`\n  font-size: 16px;\n  display: flex;\n  align-items: center;\n  margin-bottom: 1rem;\n  padding: 0.7rem 1.1rem 0.7rem 0.1rem;\n\n  @media (min-width: 1550px) {\n    font-size: 1.1em;\n  }\n`;\n\nconst Col1 = styled.div`\n  flex-basis: 13%;\n`;\n\nconst Col2 = styled.div`\n  flex-basis: 87%;\n  display: flex;\n`;\n\nconst Checkbox = styled.span`\n  display: block;\n  width: 0.9em;\n  height: 0.9em;\n  border-radius: 0.35em;\n  margin-right: 0.5em;\n  transition: background-color 0.05s linear;\n  cursor: pointer;\n\n  &.completed {\n    background-color: ${colors.purple};\n    background-image: url('data:image/svg+xml;charset=utf-8,%3Csvg%20xmlns%3D%22http%3A//www.w3.org/2000/svg%22%20width%3D%2232%22%20height%3D%2232%22%20viewBox%3D%220%200%2032%2032%22%3E%3Cpath%20d%3D%22M13.613%2027.068l-7.94-7.28q-.285-.267-.442-.613t-.172-.7.11-.71.394-.638q.52-.583%201.3-.614T8.225%2017l6.13%205.626%208.79-17q.363-.693%201.104-.93t1.433.118.93%201.103-.126%201.442L16.56%2026.55q-.204.394-.558.654t-.78.34q-.063.015-.118.023t-.11.008-.102%200q-.74%200-1.276-.504z%22%20fill%3D%22%23FFF%22/%3E%3C/svg%3E');\n    background-size: 0.625em;\n    background-repeat: no-repeat;\n    background-position: center center;\n  }\n\n  &.important {\n    background-color: ${colors.purple};\n  }\n\n  &.work {\n    background-color: ${colors.blue};\n  }\n\n  &.study {\n    background-color: ${colors.pink};\n  }\n\n  &.other {\n    background-color: ${colors.orange};\n  }\n`;\n\nconst Task = styled.span`\n  font-size: 0.73em;\n  font-weight: 600;\n  word-break: break-all;\n\n  &.grey-out {\n    color: rgba(0, 0, 0, 0.461);\n  }\n`;\n\nconst More = styled.div`\n  margin-left: auto;\n  display: flex;\n  cursor: pointer;\n\n  /* bin / more icons */\n  svg {\n    margin: 0 1rem;\n    color: rgba(0, 0, 0, 0.699);\n  }\n\n  svg:hover {\n    color: ${colors.purple};\n    transition: background-color 0.08s ease-in-out;\n  }\n\n  svg:last-child {\n    margin: 0;\n  }\n`;\n\nexport { ListItemContainer, Col1, Col2, Checkbox, Task, More };\n","import React, { useContext } from 'react';\nimport { CgTrash } from 'react-icons/cg';\nimport { AiOutlineMore } from 'react-icons/ai';\nimport { GlobalContext } from '../../contexts/GlobalState';\nimport { ListItemContainer, Col1, Col2, Checkbox, Task, More } from './style';\n\nfunction ListItem({ todo }) {\n  const { toggleComplete, removeTodo } = useContext(GlobalContext);\n\n  return (\n    <ListItemContainer>\n      <Col1>\n        <Checkbox\n          className={`${todo.type} ${todo.completed ? 'completed ' : ''}`}\n          onClick={() => toggleComplete(todo.id)}\n        ></Checkbox>\n      </Col1>\n\n      <Col2>\n        <Task className={`${todo.completed ? 'grey-out' : ''}`}>{todo.task}</Task>\n        <More>\n          <CgTrash onClick={() => removeTodo(todo.id)} />\n          <AiOutlineMore />\n        </More>\n      </Col2>\n    </ListItemContainer>\n  );\n}\n\nexport default ListItem;\n","import styled from 'styled-components';\n\nconst ListContainer = styled.li`\n  margin-bottom: 2em;\n`;\n\nconst ListHeader = styled.div`\n  display: flex;\n  margin-bottom: 1em;\n\n  .date {\n    font-size: 1.2em;\n    font-weight: bold;\n    line-height: 15px;\n    flex-basis: 13%;\n\n    @media (min-width: 1550px) {\n      font-size: 1.5em;\n      line-height: 23px;\n    }\n  }\n\n  .day {\n    flex-basis: 87%;\n    font-size: 0.8em;\n    color: rgba(0, 0, 0, 0.349);\n    border-top: 1px solid rgba(0, 0, 0, 0.118);\n    padding-top: 0.45rem;\n  }\n`;\n\nconst ListItemWrapper = styled.ul`\n  height: 100%;\n`;\n\nexport { ListContainer, ListHeader, ListItemWrapper };\n","import React from 'react';\nimport MonthlyListSubListItem from '../MonthlyListSubListItem';\nimport { ListContainer, ListHeader, ListItemWrapper } from './style';\n\nfunction MonthlyListSubList({ eachDay }) {\n  return (\n    <ListContainer data-id={eachDay[0].dateInfo.date}>\n      <ListHeader>\n        <span className=\"date\">{eachDay[0].dateInfo.date}</span>\n        <span className=\"day\">{eachDay[0].dateInfo.day}</span>\n      </ListHeader>\n\n      <ListItemWrapper>\n        {eachDay.map((todo) => (\n          <MonthlyListSubListItem key={todo.id} todo={todo} />\n        ))}\n      </ListItemWrapper>\n    </ListContainer>\n  );\n}\n\nexport default MonthlyListSubList;\n","import React, { useContext } from 'react';\nimport { MonthlyListContainer, SearchForm, MonthName, ListWrapper } from './style';\nimport MonthlyListSubList from '../MonthlyListSubList';\nimport { AiOutlineSearch } from 'react-icons/ai';\nimport _ from 'lodash';\nimport { GlobalContext } from '../../contexts/GlobalState';\n\nfunction MonthlyList({ currentMonthName, selectedYear, selectedMonth }) {\n  const { todoList } = useContext(GlobalContext);\n\n  const todosByYear = _.groupBy(todoList, 'dateInfo.year');\n  const todosThisYear = todosByYear[`${selectedYear}`] || [];\n  const todoThisMonth = todosThisYear.filter((todo) => todo.dateInfo.month === selectedMonth);\n\n  const todosEachDay = Object.values(\n    todoThisMonth.reduce((acc, current) => {\n      if (acc[current.dateInfo.date]) {\n        acc[current.dateInfo.date].push(current);\n      } else {\n        acc[current.dateInfo.date] = [current];\n      }\n      return acc;\n    }, {})\n  );\n\n  //or\n  //   const todosByDate = _.groupBy(todoThisMonth, 'dateInfo.date');\n  //   let todosEachDay = [];\n  //   for (let x in todosByDate) {\n  //     todosEachDay.push(todosByDate[x]);\n  //   }\n\n  return (\n    <MonthlyListContainer>\n      <SearchForm action=\"\" onClick={(e) => e.preventDefault()}>\n        <AiOutlineSearch className=\"search-icon\" />\n        <input type=\"text\" placeholder=\"Search\" />\n      </SearchForm>\n\n      <MonthName>\n        {currentMonthName}\n        <span className=\"todos-length\">({todoThisMonth.length})</span>\n      </MonthName>\n\n      <ListWrapper className=\"list-wrapper\">\n        {todosEachDay.map((eachDay) => (\n          <MonthlyListSubList key={eachDay[0].id} eachDay={eachDay} />\n        ))}\n      </ListWrapper>\n    </MonthlyListContainer>\n  );\n}\n\nexport default MonthlyList;\n","import styled from 'styled-components';\n\nconst CalendarDateContainer = styled.span`\n    display: inline-block;\n    font-size: 0.9em;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    cursor: pointer;\n\n    @media (min-width: 900px) {\n        width: 50px;\n        height: 50px;\n    }\n`\nexport {CalendarDateContainer} ","import React, { useState, useRef, useContext } from 'react';\nimport useOnClickOutside from '../../hooks/useOnClickOutside';\nimport { GlobalContext } from '../../contexts/GlobalState';\nimport { CalendarDateContainer } from './style';\n\nfunction CalendarDate({ date, dateInfo, className }) {\n  const { todoList } = useContext(GlobalContext);\n  const [selected, setSelected] = useState(false);\n  const todos = todoList.filter((todo) => {\n    return (\n      todo.dateInfo.year === dateInfo.year &&\n      todo.dateInfo.month === dateInfo.month &&\n      todo.dateInfo.date === dateInfo.date\n    );\n  });\n\n  const dateRef = useRef();\n  const toggleSelected = () => {\n    if (todos.length) return;\n    setSelected(!selected);\n  };\n\n  useOnClickOutside(dateRef, () => setSelected(false));\n\n  return (\n    <CalendarDateContainer\n      ref={dateRef}\n      data-id={dateInfo.date}\n      className={`${className} ${selected ? 'no-todo-message' : ''}`}\n      onClick={toggleSelected}\n    >\n      {date}\n    </CalendarDateContainer>\n  );\n}\n\nexport default CalendarDate;\n","import React from 'react';\nimport styled from 'styled-components';\nimport CalendarDate from '../components/CalendarDate';\n\nconst CalendarWeek = styled.div`\n  width: 100%;\n  flex: 1;\n  font-weight: 500;\n  display: flex;\n  justify-content: space-between;\n\n  .date-prev-month,\n  .date-next-month {\n    color: rgb(192, 192, 192);\n  }\n\n  .today {\n    background-color: rgba(255, 227, 184, 0.411);\n  }\n\n  .weekend {\n    color: rgb(123, 123, 123);\n  }\n\n  .no-todo-message::before {\n    content: 'No todo';\n    position: absolute;\n    left: 130%;\n    width: 80px;\n    height: 50px;\n    border-radius: 3px;\n    background-color: rgb(242, 242, 242);\n    color: rgb(123, 123, 123);\n    display: flex;\n    align-items: center;\n    justify-content: center;\n    z-index: 1;\n  }\n\n  /* small tail on the right border */\n  .no-todo-message:after {\n    content: '';\n    display: block;\n    width: 0;\n    position: absolute;\n    top: 50%;\n    left: 100%;\n    transform: translateY(-50%);\n    border-color: rgba(0, 0, 0, 0) rgba(242, 242, 242, 0.762);\n    border-style: solid;\n    border-width: 15px;\n    border-left-width: 0;\n  }\n`;\n\nexport default (selectedYear, selectedMonth) => {\n  const renderDate = (date, dateInfo, className) => {\n    return <CalendarDate key={date} date={date} dateInfo={dateInfo} className={className} />;\n  };\n\n  const today = new Date();\n  let firstDay = new Date(selectedYear, selectedMonth).getDay() - 1; // starting on Mon as index 0\n  if (firstDay === -1) firstDay = 6; // convert Sun index( 0-1 = -1 ) to 6\n  const daysInMonth = (selectedYear, selectedMonth) => {\n    return 32 - new Date(selectedYear, selectedMonth, 32).getDate();\n  };\n\n  const weeks = [];\n  const getDatePrevMonth = 1 - firstDay;\n  let date = 1;\n  let datePrevMonth = new Date(selectedYear, selectedMonth, getDatePrevMonth).getDate();\n  let dateNextMonth = 1;\n\n  // render 6 rows with 7 columns of calendar\n  for (let i = 0; i < 6; i++) {\n    const row = [];\n\n    for (let j = 0; j < 7; j++) {\n      let dateInfo = { year: selectedYear, month: selectedMonth, date };\n      let className;\n\n      // render last days of prev month\n      if (i === 0 && j < firstDay) {\n        dateInfo.date = datePrevMonth;\n        dateInfo.month = selectedMonth - 1 === -1 ? 11 : selectedMonth - 1;\n        dateInfo.year = dateInfo.month === 11 ? selectedYear - 1 : selectedYear;\n        className = 'date date-prev-month';\n\n        row.push(renderDate(datePrevMonth, dateInfo, className));\n        datePrevMonth++;\n      }\n\n      // render first days of next month\n      else if (date > daysInMonth(selectedYear, selectedMonth)) {\n        dateInfo.date = dateNextMonth;\n        dateInfo.month = selectedMonth + 1 === 12 ? 0 : selectedMonth + 1;\n        dateInfo.year = dateInfo.month === 0 ? selectedYear + 1 : selectedYear;\n        className = 'date date-next-month';\n\n        row.push(renderDate(dateNextMonth, dateInfo, className));\n        dateNextMonth += 1;\n      }\n\n      // render dates of this month\n      else {\n        className = j === 5 || j === 6 ? 'date weekend ' : 'date';\n        if (\n          date === today.getDate() &&\n          selectedYear === today.getFullYear() &&\n          selectedMonth === today.getMonth()\n        ) {\n          className += ' today show-message-box';\n        }\n        row.push(renderDate(date, dateInfo, className));\n        date++;\n      }\n    }\n\n    weeks.push(\n      <CalendarWeek key={i} className={' week-' + i}>\n        {row}\n      </CalendarWeek>\n    );\n  }\n\n  return weeks;\n};\n","import styled from 'styled-components';\n\nconst CalendarContainer = styled.div`\n  flex: 1;\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: 1100px) {\n    flex: 1.1;\n    max-height: inherit;\n    margin-right: 3rem;\n  }\n`;\n\nconst CalendarHeader = styled.div`\n  width: 100%;\n  flex: 1;\n  font-weight: 500;\n  display: flex;\n  justify-content: space-between;\n  color: rgb(128, 128, 128);\n\n  span {\n    display: inline-block;\n    font-size: 0.9em;\n    width: 32px;\n    height: 32px;\n    border-radius: 50%;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    position: relative;\n    cursor: pointer;\n\n    @media (min-width: 900px) {\n      width: 50px;\n      height: 50px;\n    }\n  }\n`;\n\nexport { CalendarContainer, CalendarHeader };\n","import React from 'react';\nimport showCalendar from '../../utils/showCalendar';\nimport { CalendarContainer, CalendarHeader } from './style';\n\nfunction Calendar({ selectedYear, selectedMonth }) {\n  const daysArray = ['M', 'T', 'W', 'T', 'F', 'S', 'S'];\n\n  return (\n    <CalendarContainer>\n      <CalendarHeader>\n        {daysArray.map((day, index) => (\n          <span key={index}>{day}</span>\n        ))}\n      </CalendarHeader>\n\n      {showCalendar(selectedYear, selectedMonth)}\n    </CalendarContainer>\n  );\n}\n\nexport default Calendar;\n","import styled from 'styled-components';\n\nconst CalendarWrapper = styled.div`\n  padding: 0 0.5em;\n  height: 1100px;\n  max-width: 1300px;\n  display: flex;\n  flex-direction: column;\n\n  @media (min-width: 1100px) {\n    height: 60vh;\n    flex-direction: row;\n    padding: 0;\n  }\n\n  @media (min-width: 1100px) and (max-height: 750px) {\n    min-height: 450px; /* prevents from 60vh in short landscape mode */\n    margin-bottom: 5em;\n  }\n`;\n\nexport { CalendarWrapper };\n","import React, { useState, useContext, useRef } from 'react';\nimport MonthlyHeader from '../../components/MonthlyHeader';\nimport MonthlyList from '../../components/MonthlyList';\nimport Calendar from '../../components/Calendar';\nimport { GlobalContext } from '../../contexts/GlobalState';\nimport { MainContainer, Main, Side } from '../../styles/shared';\nimport { CalendarWrapper } from './style';\n\nfunction Monthly() {\n  const { today } = useContext(GlobalContext);\n  const [selectedYear, setSelectedYear] = useState(today.year);\n  const [selectedMonth, setSelectedMonth] = useState(today.month);\n  const currentMonthName = new Date(selectedYear, selectedMonth).toLocaleString('default', { month: 'long' });\n  const parent = useRef();\n\n  const moveToPrevMonth = () => {\n    if (selectedMonth === 0) {\n      setSelectedYear((prev) => prev - 1);\n      setSelectedMonth(12);\n    }\n    setSelectedMonth((prev) => prev - 1);\n  };\n\n  const moveToNextMonth = () => {\n    if (selectedMonth === 11) {\n      setSelectedYear((prev) => prev + 1);\n    }\n\n    setSelectedMonth((prev) => (prev + 1) % 12);\n  };\n\n  const goBackToToday = () => {\n    setSelectedYear(today.year);\n    setSelectedMonth(today.month);\n  };\n\n  const handleDateScroll = (e) => {\n    const HTMLCollection = parent.current.childNodes[1].childNodes[2].children;\n    const refList = [...HTMLCollection];\n    const listToScroll = refList.find(\n      (list) => list.getAttribute('data-id') === e.target.getAttribute('data-id')\n    );\n\n    if (listToScroll) listToScroll.scrollIntoView({ behavior: 'smooth' });\n  };\n\n  return (\n    <MainContainer className=\"monthly\">\n      <Main>\n        <MonthlyHeader\n          currentMonthName={currentMonthName}\n          selectedYear={selectedYear}\n          moveToPrevMonth={moveToPrevMonth}\n          moveToNextMonth={moveToNextMonth}\n          goBackToToday={goBackToToday}\n        />\n        <CalendarWrapper ref={parent} onClick={handleDateScroll}>\n          <Calendar selectedYear={selectedYear} selectedMonth={selectedMonth} />\n          <MonthlyList\n            currentMonthName={currentMonthName}\n            selectedYear={selectedYear}\n            selectedMonth={selectedMonth}\n          />\n        </CalendarWrapper>\n      </Main>\n      <Side></Side>\n    </MainContainer>\n  );\n}\n\nexport default Monthly;\n","import React from 'react';\nimport GlovalStyle from './styles/GlobalStyle';\nimport use100vh from './hooks/use100vh';\nimport Nav from './components/Nav';\nimport Home from './pages/Home';\nimport Daily from './pages/Daily';\nimport Weekly from './pages/Weekly';\nimport Monthly from './pages/Monthly';\nimport { Switch, Route } from 'react-router-dom';\n\nfunction App() {\n  // Fix for mobile 100vh\n  use100vh();\n\n  return (\n    <div className=\"App\">\n      <GlovalStyle />\n      <Nav />\n      <Switch>\n        <Route exact path=\"/\" component={Daily} />\n        <Route exact path=\"/home\" component={Home} />\n        <Route exact path=\"/daily\" component={Daily} />\n        <Route exact path=\"/weekly\" component={Weekly} />\n        <Route exact path=\"/monthly\" component={Monthly} />\n      </Switch>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { HashRouter } from 'react-router-dom';\nimport { GlobalContextProvider } from './contexts/GlobalState';\n\nReactDOM.render(\n  <HashRouter basename=\"/\">\n    <GlobalContextProvider>\n      <App />\n    </GlobalContextProvider>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}